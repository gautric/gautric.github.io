<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2022-02-16T14:40:34-06:00</updated><id>http://0.0.0.0:4000/feed.xml</id><title type="html">Greg I/Open</title><subtitle>Cloud Architecte, Greg Autric, Web, Cloud, IoT, Automation, Red Hat, OpenSource</subtitle><entry><title type="html">Pattern Découpler la Réception et Utilisation des Signaux avec jBPM/Drools</title><link href="http://0.0.0.0:4000/blog/2021/09/26/Pattern-Signal-jBPM.html" rel="alternate" type="text/html" title="Pattern Découpler la Réception et Utilisation des Signaux avec jBPM/Drools" /><published>2021-09-26T10:00:00-05:00</published><updated>2021-09-26T10:00:00-05:00</updated><id>http://0.0.0.0:4000/blog/2021/09/26/Pattern-Signal-jBPM</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2021/09/26/Pattern-Signal-jBPM.html">&lt;p&gt;Pour mon activité professionnelle, je me déplace&lt;sup id=&quot;fnref:2020&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2020&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; chez les clients afin d’expertiser les solutions qu’ils mettent en place dans leur système d’information et notamment le produit &lt;a href=&quot;https://developers.redhat.com/products/rhpam/overview&quot;&gt;RHPAM&lt;/a&gt;&lt;sup id=&quot;fnref:jbpm&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:jbpm&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;. Pour le compte d’un client donc, j’ai travaillé sur les processus metiers qu’il a mis en place chez lui. Ces processus de type BPMN permettent de gérer des processus de gestion sur lequels nous n’allons pas nous étendre ici. Nous allons juste extraire un patron de conception que j’ai bien aimé de par sa fonctionnalité ainsi que par son interessante implémentation .&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Découplage de la réception du signal de son utilisation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Il est vrai qu’en anglais cela rendrait plutôt “Decoupling Signal Reception”.&lt;/p&gt;

&lt;h2 id=&quot;rappel-des-processus-bpmn&quot;&gt;Rappel des processus BPMN&lt;/h2&gt;

&lt;p&gt;Les Processus BPMN permettent de décrire des processus métier de haut niveau sous la forme de graphique standardisés par Object Management Group (OMG) specification.
Ces processus métiers facilitent la communication car ils peuvent être écrits par les métiers via des outils de design de type NoCode et deployés sans changement par les intégrateurs sur des moteurs prévus à cet effet. Le standard BPMN normalise les processus métiers avec des concepts largements éprouvés au fil du temps (notion de timer, de signaux, de message, d’appel, etc…).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://access.redhat.com/webassets/avalon/d/Red_Hat_Process_Automation_Manager-7.3-Process_designer_Business_Process_Model_and_Notation_BPMN2_reference_guide-en-US/images/aee1d31b5af75c88df09df6e0f551b2c/subprocess.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;les-signaux-dans-bpmn&quot;&gt;Les signaux dans BPMN&lt;/h3&gt;

&lt;p&gt;Les signaux dans le standard BPMN servent à communiquer des événements métiers aux processus.
Les processus peuvent être à la fois émetteur ou récepteur des événements de type signal.
En fonction des besoins, les processus communiquent les uns avec les autres sur la base de signaux.
Les signaux peuvent être éxogènes au système BPM.&lt;/p&gt;

&lt;h4 id=&quot;nomeclature&quot;&gt;Nomeclature&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Voici le noeud pour démarrer une instance de processus après avoir recu un message.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://access.redhat.com/webassets/avalon/d/Red_Hat_Process_Automation_Manager-7.3-Process_designer_Business_Process_Model_and_Notation_BPMN2_reference_guide-en-US/images/9cc74191cdf22549a73ad8f904f8754d/bpmn-signal-start.png&quot; alt=&quot;Signal Start event&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pour écouter puis continuer l’éxecution d’une instance de processus après avoir recu le bon signal, on utilisera ce noeud.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://access.redhat.com/webassets/avalon/d/Red_Hat_Process_Automation_Manager-7.3-Process_designer_Business_Process_Model_and_Notation_BPMN2_reference_guide-en-US/images/3d9480f8f2c20c306c21f2d16a8c1db8/bpmn-intermediate-signal.png&quot; alt=&quot;Signal Catching Event&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;warn&quot;&gt;
Ce noeud est bloquant, l'instance de processus est en attente de la réception du signal.
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;L’envoi d’un signal en cours de traitement est possible avec le noeud suivant.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://access.redhat.com/webassets/avalon/d/Red_Hat_Process_Automation_Manager-7.3-Process_designer_Business_Process_Model_and_Notation_BPMN2_reference_guide-en-US/images/90694fc3ec2964e0f43245281ed87df1/bpmn-signal-throwing.png&quot; alt=&quot;Signal Throwing Event&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Et enfin le noeud permettant de finir une instance de processus tout en envoyant un signal.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://access.redhat.com/webassets/avalon/d/Red_Hat_Process_Automation_Manager-7.3-Process_designer_Business_Process_Model_and_Notation_BPMN2_reference_guide-en-US/images/f262354a95af508ef2fd529635b79a55/bpmn-end-signal.png&quot; alt=&quot;Signal End Event&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dans tous les cas, il est nécessaire de donner un nom de signal. Ce nom doit être le plus parlant possible tout en évitant d’être trop technique.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;RELANCE_CLIENT&lt;/li&gt;
  &lt;li&gt;NOTIFICATION_FOURNISSEUR&lt;/li&gt;
  &lt;li&gt;ERREUR_PROCEDURE&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;info&quot;&gt;
Avec jBPM/RHPAM, les noms des signaux peuvent être variabilisés comme ceci : ALERTE_#{ID_CLIENT}
&lt;/div&gt;

&lt;h4 id=&quot;scope-des-signaux&quot;&gt;Scope des Signaux&lt;/h4&gt;

&lt;p&gt;En fonction du fournisseur BPM, le scope d’émission du message peut être modulé. Le scope correspond à la portée du signal qui peut être envoyé &lt;em&gt;plus ou moins loin&lt;/em&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Instance de processus
    &lt;ul&gt;
      &lt;li&gt;Le signal est envoyé au niveau d’instance de processus&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Model de processus
    &lt;ul&gt;
      &lt;li&gt;Le signal est envoyé au niveau de la définition du model du processus courant&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Project/déploiement
    &lt;ul&gt;
      &lt;li&gt;Le signal est envoyé à un ensemble des processus d’un ou plusieurs projets techniques.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Global
    &lt;ul&gt;
      &lt;li&gt;Le signal est envoyé à tous les processus du moteur&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Externe
    &lt;ul&gt;
      &lt;li&gt;Le signal est diffusé plus largement à l’exterieur de l’instance du moteur de processus.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mal définir le scope peut avoir un impact sur les performances en fonction des moteurs, car plus ou moins d’instances de processus peuvent réceptionner le signal.&lt;/p&gt;
&lt;div class=&quot;warn&quot;&gt;
Les scopes ne sont pas forcement tous implémentés dans les solutions.
&lt;/div&gt;

&lt;h4 id=&quot;interaction&quot;&gt;Interaction&lt;/h4&gt;

&lt;p&gt;Les différentes implémentations des moteurs BPM fournissent des interfaces afin de dialoguer via des signaux aux instances de processus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;IHM
    &lt;ul&gt;
      &lt;li&gt;Le logiciel fourni une interface graphique (web, desktop) afin d’émettre le signal à un ou plusieurs processus.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;API REST
    &lt;ul&gt;
      &lt;li&gt;Une API REST (ou SOAP) est proposée et permet d’interagir via un appel REST/HTTP/JMS&lt;sup id=&quot;fnref:api&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:api&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; au moteur de processus.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;API code
    &lt;ul&gt;
      &lt;li&gt;Selon le logiciel BPM, celui-ci est muni d’une (ou plusieurs) librairie(s)&lt;sup id=&quot;fnref:lt&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:lt&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt; technique.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Voici un tutorial (en anglais) d’un de mes collègue &lt;a href=&quot;https://github.com/dmarrazzo&quot;&gt;Donato Marrazzo&lt;/a&gt; présentant l’utilisation des signaux avec jBPM/RHPAM&lt;/p&gt;
&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/hAH9kDfMFHQ&quot; frameborder=&quot;1&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;découplage-de-signaux&quot;&gt;Découplage de signaux&lt;/h2&gt;

&lt;p&gt;Lors de l’activation d’un signal “Signal Step”, le processus va se mettre en “écoute” pour réceptionner le signal.
Il se peut que le signal, pour des besoins métiers, soit lancé (bien) avant l’activation du noeud signal, donc le processus peut manquer la réception du signal, le signal sera donc perdu et le processus restera toujours bloqué. 
Il est bien sur possible d’avoir une branche incluant un délai afin de créer un branche de sortie et donc débloquer le processus. Mais en toute logique, le branche de délestage ne sera pas la branche nominale.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jbpm-signal-processus.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mais quant est-il si l’on souhaite tout de même recevoir le signal à n’importe quel moment&lt;sup id=&quot;fnref:duree&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:duree&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;, notamment si les actions avant la réception du signal sont longues “Long running Sub-Process”, et tout de même réagir à l’événement signal.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://access.redhat.com/webassets/avalon/d/Red_Hat_Process_Automation_Manager-7.3-Process_designer_Business_Process_Model_and_Notation_BPMN2_reference_guide-en-US/images/3d9480f8f2c20c306c21f2d16a8c1db8/bpmn-intermediate-signal.png&quot; alt=&quot;Signal Catching Event&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Car comme nous l’avons vu précedement, la réception du signal sera possible dès que le moteur BPM arrivera sur le noeud “Catching Signal”, pas avant. Il nous faut donc essayer de trouver un nouveau pattern afin de découpler la récepetion du signal.&lt;/p&gt;

&lt;h3 id=&quot;sous-processus&quot;&gt;Sous-Processus&lt;/h3&gt;

&lt;p&gt;Pour cela nous allons créer un sous-processus attenant au processus principal. L’idée principale de ce sous-processus se mettre ne écoute de l’évenement signal même si on ne va pas utiliser cette information tout de suite dans le pocessus principal.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jbpm-signal-subprocess.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Avec ce sous processus nous allons simplement recevoir le signal via le noeud “Signal Start Event”, à n’importe quel moment du cycle de vie du processus.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://access.redhat.com/webassets/avalon/d/Red_Hat_Process_Automation_Manager-7.3-Process_designer_Business_Process_Model_and_Notation_BPMN2_reference_guide-en-US/images/9cc74191cdf22549a73ad8f904f8754d/bpmn-signal-start.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Le deuxième noeud “Script Node” va stocker l’événement signal dans la session Drools.
et comme la session Drools est difficilement auditable nous copions aussi l’événement dans une variable de processus &lt;sup id=&quot;fnref:var&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:var&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Fact insertion into Drools Session&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;kcontext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKieRuntime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SUB_PROCESS_SIGNAL&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Coping variable of the signal event into process variables &lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;kcontext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setVariable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SubProcessSignalFlag&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Received&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Drools est le moteur de règle intégré à jBPM. Il fourni à la fois un langage de programmation pour concevoir des règles métiers et un moteur inférence qui réagi automatique à chaque changement de contexte. Ici notre contexte sera la session Drools de l’instance de processus dans laquelle on insere une nouvel objet &lt;sup id=&quot;fnref:obj&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:obj&quot; class=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Ensuite, on termine simplement le sous-processus et on rend la main.&lt;/p&gt;

&lt;p&gt;Avec ce sous-processus de réception de signal, nous stocker dans la session (Drools) et/ou une variable de processus. L’évenement signal est bien sauvegrader dans l’instance de processus. Il va falloir maintenant exploiter cet information disponible dans les infos du processus.&lt;/p&gt;

&lt;h3 id=&quot;branche-de-traitement&quot;&gt;Branche de traitement&lt;/h3&gt;

&lt;p&gt;Afin d’exploiter l’événement signal stocké dans les infos de l’instance de processus, nous allons modifier notre processus.
Voici maintenant le mécanisme d’utilisation de l’événement signal.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jbpm-signal-drools-flow.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nous remplacons l’attende du signal par une condition particulière. Cette condition, dans notre cas, est stockée dans la session Drools.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jbpm-signal-drools-impl.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Le noeud “Drools Step” configure le “Conditinal Event” sous la forme d’une règle Drools. Ici, ce noeud vérifie la présence de l’objet String dans la session, cette chaîne de caratère devra être égale à “SUB_PROCESS_SIGNAL” pour valider la condition.&lt;/p&gt;

&lt;p&gt;La session Drools, mise à jour via le sous-processus de réception du signal, est utilisée quand il le faut par l’instance de processus.
L’avantage de l’utilisation du conditionnal event est qu’il peut être rafraichi à tout moment si la session change, donc la session peut être mise à jour avant ou pendant l’activation du noeud et donc faire avancer l’instance de processus comme il se doit.&lt;/p&gt;

&lt;h2 id=&quot;final&quot;&gt;Final&lt;/h2&gt;

&lt;p&gt;Voici donc, le schéma complet du processus implémentant le pattern que nous venont de voir. Ce schéma générique ne gère pour l’instant un signal et un type de condition, mais il est tout à fait possible d’avoir une implémentation plus complexe en fonction du besoin métier (plusieurs signaux, plusieurs variables, plusieurs conditions).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jbpm-signal-full-processus.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;warn&quot;&gt;
Ce pattern possède néammoins le défaut de perdre la signification, dans la branche de traitement, de la source du &quot;Conditinal Event&quot;. En effet, le signal est réceptionné dans un sous-processus dédié, il est donc important de bien documenter l'élément déclancheur du &quot;Conditinal Event&quot;.
&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Ce pattern permet de répondre au besoin de découplage de la réception du signal de son utilisation plus tard dans le processus. Il n’y a plus besoin donc de bloquer le processus principal sur le signal et donc il est possible d’effectuer des traitements relativement long tout en continuant à utiliser les signaux.
Cela apporte plus de flexibilité dans le design de conception des processus sans trop perdre dans lisibilité des modèles.&lt;/p&gt;

&lt;!-- ### Links

* [The Full project](https://github.com/gautric/bpmn-pattern) but you have to do some cleanup. --&gt;

&lt;h4 id=&quot;remerciements&quot;&gt;Remerciements&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Un grand remerciement à T. B., mon contact client qui se reconnaitra.&lt;/li&gt;
  &lt;li&gt;À &lt;a href=&quot;https://fr.linkedin.com/in/snoussi&quot;&gt;Rachid Snoussi&lt;/a&gt; pour la relecture.&lt;/li&gt;
  &lt;li&gt;Thx &lt;a href=&quot;http://dmarrazzo.github.io/&quot;&gt;Donato Marrazzo&lt;/a&gt; for your tutorial.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h4&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:2020&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Sur site ou bien à distance depuis mars 2020 :-(. &lt;a href=&quot;#fnref:2020&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:jbpm&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;RHPAM est un produit Red Hat, jBPM est le projet communautaire à la base de RHPAM. &lt;a href=&quot;#fnref:jbpm&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:api&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;peut dépendre du fournisseur &lt;a href=&quot;#fnref:api&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:lt&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;pour différents langages de programmation Java, C/C++, Python, JS etc… &lt;a href=&quot;#fnref:lt&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:duree&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;pendant la durée du processus uniquement. &lt;a href=&quot;#fnref:duree&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:var&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;On peut bien entendu utiliser les fonctions de “Data Assignments” pour le stockage de l’événement signal dans la table d’audit (activer le mécanisme d’audit de jBPM) ou bien les listeners afin de tracer le signal via un code spécifique. &lt;a href=&quot;#fnref:var&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:obj&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Objet plus ou moins complexe. &lt;a href=&quot;#fnref:obj&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><category term="fr" /><category term="jBPM" /><category term="Drools" /><category term="Pattern" /><category term="Signal" /><category term="Reception" /><summary type="html">Pour mon activité professionnelle, je me déplace1 chez les clients afin d’expertiser les solutions qu’ils mettent en place dans leur système d’information et notamment le produit RHPAM2. Pour le compte d’un client donc, j’ai travaillé sur les processus metiers qu’il a mis en place chez lui. Ces processus de type BPMN permettent de gérer des processus de gestion sur lequels nous n’allons pas nous étendre ici. Nous allons juste extraire un patron de conception que j’ai bien aimé de par sa fonctionnalité ainsi que par son interessante implémentation . Sur site ou bien à distance depuis mars 2020 :-(. &amp;#8617; RHPAM est un produit Red Hat, jBPM est le projet communautaire à la base de RHPAM. &amp;#8617;</summary></entry><entry><title type="html">How to manage Exception inside a jBPM WorkItemHandler custom component</title><link href="http://0.0.0.0:4000/blog/2020/10/28/How-to-manage-Exception-inside-jBPM.html" rel="alternate" type="text/html" title="How to manage Exception inside a jBPM WorkItemHandler custom component" /><published>2020-10-28T10:00:00-05:00</published><updated>2020-10-28T10:00:00-05:00</updated><id>http://0.0.0.0:4000/blog/2020/10/28/How-to-manage-Exception-inside-jBPM</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2020/10/28/How-to-manage-Exception-inside-jBPM.html">&lt;p&gt;When we develop a BPMN process we have to handle correctly Error. An Error can be raised by any component during the processus instance and specially into a Work Item Handler node. This kind of node in jBPM is a Java component implementing the WorkItemHandler interface. Usually in Java program we manage error via Exception mechanism.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;How to manage Exception inside jBPM WorkItemHandler custom component.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To illustrate how to use Exception/Error I propose to create a sample error process.&lt;/p&gt;

&lt;h2 id=&quot;a-quick-sample&quot;&gt;A quick sample&lt;/h2&gt;

&lt;p&gt;Let’s create a very common process with Work Item Handler (WIH).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jbpm-error-exception.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This WIH has to implement &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;org.kie.api.runtime.process.WorkItemHandler&lt;/code&gt; jBPM’s interface and its two methods &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;executeWorkItem&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;abortWorkItem&lt;/code&gt;. The first method is the nominal execution. the second one is called by jBPM to reset the workitem handler action.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;executeWorkItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;WorkItem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WorkItemManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;manager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;no&quot;&gt;LOG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Nominal {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WorkItemHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;jbpm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;abortWorkItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;WorkItem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WorkItemManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;manager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;no&quot;&gt;LOG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Abort {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WorkItemHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As you can see this implementation throws the exception &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;net.a.g.jbpm.pattern.util.Exception&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;java-exception-to-bpmn-error-in-jbpm-engine&quot;&gt;Java Exception to BPMN Error in jBPM engine&lt;/h2&gt;

&lt;p&gt;In BPMN, we just have to use/copy paste the full qualified exception name to be handled. 
jBPM engine gonna catch this exception and create an internal signal. This signal reroutes the process instance to the error branch.
The signal looks like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Error-${internalUniqueId}-${exceptionClassName}&lt;/code&gt;, and in our case &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Error-_72474602-751C-43FD-9D4F-2598A16468D1-net.a.g.jbpm.pattern.util.Exception&lt;/code&gt; (don’t care about the middle UUID it is internal and automatic).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jbpm-error-exception-handling.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can map the error instance to a process variable and reuse it inside the rest next nodes as usual.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jbpm-error-exception-mapping.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;info&quot;&gt;
In most case and in a real life, we should wrap all exceptions into normalized ones.
&lt;/div&gt;

&lt;h2 id=&quot;unit-test-to-prove-integration&quot;&gt;Unit Test to prove integration&lt;/h2&gt;

&lt;p&gt;As usual, no test no proof. Here is a common sample test. We have to register our WIH into the KieSession. We also created an listerner to illustrate all steps.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ExceptionToErrorTest&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JbpmJUnitBaseTestCase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LOG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LoggerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ExceptionToErrorTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;ExceptionToErrorTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LOG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;jBPM unit test sample&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RuntimeManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runtimeManager&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;createRuntimeManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;net/a/g/jbpm/pattern/ExceptionToErrorProcess.bpmn&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RuntimeEngine&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runtimeEngine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getRuntimeEngine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;KieSession&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kieSession&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runtimeEngine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKieSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;kieSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWorkItemManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;registerWorkItemHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WorkItemHandler&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WorkItemHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;kieSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ProcessEventListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

			&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt;  &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LOG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LoggerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;net.a.g.jbpm.pattern.ProcessEventListener&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

			&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;beforeProcessStarted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ProcessStartedEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;no&quot;&gt;LOG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Start Processus : {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getProcessInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getProcessName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

			&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;beforeNodeTriggered&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ProcessNodeTriggeredEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;no&quot;&gt;LOG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Node Called : {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNodeInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNodeName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


			&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;afterProcessStarted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ProcessStartedEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;no&quot;&gt;LOG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;End Processus : {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getProcessInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getProcessName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OMIT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;


        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ProcessInstance&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;processInstance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kieSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;startProcess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ExceptionToErrorProcess&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;assertProcessInstanceNotActive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;processInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kieSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertNodeTriggered&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;processInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ScriptTask&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;assertNodeTriggered&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;processInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Error End&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;runtimeManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;disposeRuntimeEngine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;runtimeEngine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;runtimeManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And here is the result.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-log&quot; data-lang=&quot;log&quot;&gt;[INFO] Running net.a.g.jbpm.pattern.ExceptionToErrorTest
16:42:26.543 [main] DEBUG org.jbpm.services.task.identity.AbstractUserGroupInfo - Callback properties will be loaded from classpath:/usergroups.properties
16:42:26.550 [main] DEBUG org.jbpm.services.task.identity.JBossUserGroupCallbackImpl - Loaded properties {doctor=users,PM, Administrator=Administrators, frontDesk=users,PM, manager=managers,HR, mary=admins,managers,users,HR, admin=admins,managers,users,webdesigners,functionalanalysts, sales-rep=admin,managers,users,sales, john=admins,managers,users,PM, salaboy=admins,users, krisv=admins,managers,users}
16:42:26.551 [main] DEBUG org.jbpm.test.JbpmJUnitBaseTestCase - Configuring entire test case to have data source enabled false and session persistence enabled false with persistence unit name org.jbpm.persistence.jpa
16:42:26.560 [main] DEBUG net.a.g.jbpm.pattern.ExceptionToErrorTest - jBPM unit test sample
16:42:26.622 [main] DEBUG org.kie.api.internal.utils.ServiceDiscoveryImpl - Loading kie.conf from  jar:file:/Users/gautric/.m2/repository/org/kie/kie-internal/7.44.0.Final/kie-internal-7.44.0.Final.jar!/META-INF/kie.conf in classloader jdk.internal.loader.ClassLoaders$AppClassLoader@277050dc

... OMIT ...

16:42:28.835 [main] DEBUG org.kie.internal.runtime.manager.deploy.DeploymentDescriptorManager - No descriptor found returning default instance
16:42:28.874 [main] DEBUG org.jbpm.runtime.manager.impl.error.ExecutionErrorManagerImpl - Error handling filters [TaskExecutionErrorFilter [accepts=CannotAddTaskException, ignores=PermissionDeniedException], ProcessExecutionErrorFilter [accepts=WorkflowRuntimeException, ignores=], DBExecutionErrorFilter [accepts=SQLException,HibernateException, ignores=]]
16:42:28.874 [main] DEBUG org.jbpm.runtime.manager.impl.error.ExecutionErrorManagerImpl - Execution error storage org.jbpm.runtime.manager.impl.error.DefaultExecutionErrorStorage@2cc03cd1
16:42:28.875 [main] DEBUG org.jbpm.runtime.manager.impl.error.ExecutionErrorManagerImpl - Error event listeners java.util.ServiceLoader[org.kie.internal.runtime.error.ExecutionErrorListener]
16:42:28.876 [main] INFO org.jbpm.runtime.manager.impl.AbstractRuntimeManager - SingletonRuntimeManager is created for default-singleton
16:42:28.970 [main] INFO net.a.g.jbpm.pattern.ProcessEventListener - Start Processus : ExceptionToErrorProcess
16:42:28.980 [main] INFO net.a.g.jbpm.pattern.ProcessEventListener - Node Called : Nominal Start
16:42:28.982 [main] INFO net.a.g.jbpm.pattern.ProcessEventListener - Node Called : WorkItemHandler
16:42:28.987 [main] INFO net.a.g.jbpm.pattern.wih.WorkItemHandler - Nominal class net.a.g.jbpm.pattern.wih.WorkItemHandler
16:42:28.991 [main] DEBUG org.jbpm.workflow.instance.impl.WorkflowProcessInstanceImpl - Signal Error-_72474602-751C-43FD-9D4F-2598A16468D1-net.a.g.jbpm.pattern.util.Exception received with data Exception [uuid=9aecb8c7-99af-4d41-b8fa-df97f3ae1242] in process instance 1
16:42:28.994 [main] INFO net.a.g.jbpm.pattern.wih.WorkItemHandler - Abort class net.a.g.jbpm.pattern.wih.WorkItemHandler
16:42:28.995 [main] INFO net.a.g.jbpm.pattern.ProcessEventListener - Node Called : ScriptTask
16:42:28.995 [main] ERROR net.a.g.jbpm.pattern.ScriptTask - Task Error Branch Exception [uuid=9aecb8c7-99af-4d41-b8fa-df97f3ae1242]
16:42:28.995 [main] INFO net.a.g.jbpm.pattern.ProcessEventListener - Node Called : Error End
16:42:28.996 [main] INFO net.a.g.jbpm.pattern.ProcessEventListener - End Processus : ExceptionToErrorProcess
16:42:28.997 [main] DEBUG org.drools.core.common.DefaultAgenda - State was INACTIVE is now DISPOSED
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.821 s - in net.a.g.jbpm.pattern.ExceptionToErrorTest&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As you can see an internal signal is raised and received by the jBPM engine :&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;16:42:28.991 [main] DEBUG org.jbpm.workflow.instance.impl.WorkflowProcessInstanceImpl - Signal Error-_72474602-751C-43FD-9D4F-2598A16468D1-net.a.g.jbpm.pattern.util.Exception received with data Exception [uuid=9aecb8c7-99af-4d41-b8fa-df97f3ae1242] in process instance 1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We passed also through &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ScriptTask&lt;/code&gt;  Node and finish the process with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Error End&lt;/code&gt; meaning we finish the process with an BPMN Error Termination as expected.&lt;/p&gt;

&lt;p&gt;It means that internally jBPMN engine handle Error as specific signal. The signal starts with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Error&lt;/code&gt; code, followed by the UUID’s node and finishes the full qualified name of the exception.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Managing Java Exception with jBPMN is simple and intuitive. Of course, you can deal with the whole Java Exception API to have a very flexible, scalable mecahism. Feel free to test my sample, I let all links below,  feedbacks will be also appreciate.&lt;/p&gt;

&lt;h3 id=&quot;links&quot;&gt;Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/gautric/bpmn-pattern&quot;&gt;The Full project&lt;/a&gt; but you have to do some cleanup.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/gautric/bpmn-pattern/blob/master/src/main/resources/net/a/g/jbpm/pattern/ExceptionToErrorProcess.bpmn&quot;&gt;ExceptionToErrorProcess.bpmn&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/gautric/bpmn-pattern/blob/master/src/main/java/net/a/g/jbpm/pattern/wih/WorkItemHandler.java&quot;&gt;Custom WorkItemHandler.java&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/gautric/bpmn-pattern/blob/master/src/main/java/net/a/g/jbpm/pattern/util/Exception.java&quot;&gt;Custom Exception.java&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;hhttps://github.com/gautric/bpmn-pattern/blob/master/src/test/java/net/a/g/jbpm/pattern/ExceptionToErrorTest.java&quot;&gt;The Full Test Case.java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="fr" /><category term="jBPM" /><category term="WorkItemHandler" /><category term="Exception" /><summary type="html">When we develop a BPMN process we have to handle correctly Error. An Error can be raised by any component during the processus instance and specially into a Work Item Handler node. This kind of node in jBPM is a Java component implementing the WorkItemHandler interface. Usually in Java program we manage error via Exception mechanism.</summary></entry><entry><title type="html">Keycloak, les clefs Yubico et le standard Webauthn</title><link href="http://0.0.0.0:4000/blog/2020/10/26/Keycloak-Yubico-WebAuthn.html" rel="alternate" type="text/html" title="Keycloak, les clefs Yubico et le standard Webauthn" /><published>2020-10-26T10:00:00-05:00</published><updated>2020-10-26T10:00:00-05:00</updated><id>http://0.0.0.0:4000/blog/2020/10/26/Keycloak-Yubico-WebAuthn</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2020/10/26/Keycloak-Yubico-WebAuthn.html">&lt;p&gt;Depuis quelque temps j’interviens chez mes clients afin de mener des études d’architecture autour de Keycloak/RHSSO. Comme son nom l’indique, il s’agit d’une solution de &lt;a href=&quot;https://en.wikipedia.org/wiki/Single_sign-on&quot;&gt;SSO&lt;/a&gt; c’est à dire d’un système unique d’authentification et d’authorisation. Le projet Keycloak a debuté en 2014 et est donc relativement mature, la communauté autour de ce projet est très importante.&lt;/p&gt;

&lt;p&gt;Il y a quelques temps déjà, j’ai acheté et configuré des clefs Yubico afin de faire du &lt;a href=&quot;https://en.wikipedia.org/wiki/Multi-factor_authentication&quot;&gt;2FA&lt;/a&gt; avec mes principaux comptes en ligne. Les principaux acteurs du web (Google, Facebook, AWS, etc…) proposent ce type d’authentification qui apporte une sécurité supplémentaire des comptes en ligne.&lt;/p&gt;

&lt;p&gt;Keycloack depuis fin 2019 dispose d’une intégration du standard Webauthn du W3C. Nous allons voir comment faire cette configuration dans le produit.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Intégration/Configuration d’une authentification Webauthn avec Keycloak&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;le-standard-webauthn&quot;&gt;Le standard WebAuthn&lt;/h2&gt;

&lt;p&gt;Le standard WebAuthn est une généralisation d’un autre standard le FIDO. Ces deux standards ont pour but de proposer une authentification forte des utilisateurs lors de leurs connexions en ligne. Il existe déjà des systemes de double authentification via SMS par exemple, mais il est possible, avec un peu de moyen, de hacker/casser soit techniquement soit socialement ce type d’authentification.&lt;/p&gt;

&lt;p&gt;Auparavant le standard FIDO était très axé sur des clefs matérielles via USB beaucoup plus difficile à casser (par clonage par ex) et une API dans le browser, WebAuthn supporte quant à lui d’autre type de device comme les montres connectées, les téléphones portables et d’autres types de protocole comme le BLE et/ou le NFC. WebAuthn apporte aussi au browser une API standard en Javascript qui est maintenant supportée dans la plupart des navigateurs (Chrome, Firefox, etc…).&lt;/p&gt;

&lt;p&gt;Lorsque d’un utilisateur se connecte à son compte en ligne le service via le browser demande à l’utilisateur d’inserer sa clef (ici : Yubikey) dans son ordinateur (utiliser sa clef NFC si il s’agit d’un telephone ou d’une tablette). Le browser dialogue donc avec le systeme d’authentification afin de verifier un challenge de sécurité, le tout est renvoyé au service pour verification finale avant l’accès au dit service. L’avantage est que l’on peut utiliser la même clef d’un service en ligne à l’autre, car le standard défini que le challenge doit etre fait par nom de domaine.&lt;/p&gt;

&lt;p&gt;Un des avantages de ce standard est son faible coût de deploiement à la fois pour l’utilisateur final que pour le service en ligne, grace à la standardisation il existe un certain nombre d’acteurs et de fournisseur de solution WebAuthn compatible. Une clef Yubico est aux alentours d’une cinquantaine d’euros piece, donc pour un Architecte IT comme moi cela est très raisonnable. Le service en ligne peut facilement intégrer cette fonctionnalité dans le processus d’authentification de ses utilisateurs, comme nous allons le voir dans le chapitre suivant.&lt;/p&gt;

&lt;h2 id=&quot;installation-de-keycloak&quot;&gt;Installation de Keycloak&lt;/h2&gt;

&lt;p&gt;L’installation de Keycloak est tout aussi simple que l’installation d’un serveur Wildfly/JBoss EAP, il suffit simplement &lt;a href=&quot;https://www.keycloak.org/downloads&quot;&gt;télécharger le zip serveur&lt;/a&gt; puis de le dezipper dans le repertoire de son choix.&lt;/p&gt;

&lt;h3 id=&quot;utilisateur-root&quot;&gt;Utilisateur root&lt;/h3&gt;
&lt;p&gt;Ajouter l’utilisateur root pour la gestion des Realm (Royaume) dans Keycloak via la commande suivante :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$&amp;gt;&lt;/span&gt; bin/add-user-keycloak.sh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;En production, on passera par un Realm (Royaume) n’utilisant pas le système de fichier de stockage des utilisateurs/mots de passe mais plutôt un annuaire LDAP disponible dans la plupart des systèmes d’information.&lt;/p&gt;

&lt;h3 id=&quot;démarrer-keycloakrhsso&quot;&gt;Démarrer Keycloak/RHSSO&lt;/h3&gt;
&lt;p&gt;Le démarrage de Keycloak se fait comme un Wildfly/JBoss EAP via la commande &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;standalone.sh&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$&amp;gt;&lt;/span&gt; bin/standalone.sh &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; 0.0.0.0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Il est bien sûr possible d’utiliser toute les fonctionnalités de Wildlfy/JBoss EAP en terme d’administration centralisée avec le mode domain, le clustering des sessions HTTP via la solution Infinispan intégrée ou bien le mod_cluster/Apache qui facilite le cycle de vie et l’administration des clusters Apache/JBoss.&lt;/p&gt;

&lt;h2 id=&quot;configuration-du-realm-client-et-flow&quot;&gt;Configuration du Realm, Client et Flow&lt;/h2&gt;

&lt;p&gt;Configurer maintenant le Realm qui va contenir l’ensemble des utilisateurs et des clients (applications).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-configure-realm.png&quot; alt=&quot;Configuration Realm&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pour la demo, nous utilisons une application cliente de type Javascript donc n’oubliez pas de configurer en mode &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public&lt;/code&gt; l’option &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Access Type&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-configure-client.png&quot; alt=&quot;Configuration Client&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dans Browser Flow il suffit de rajouter le &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WebAuthn Authenticator&lt;/code&gt; executor dans le flow normal.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-configure-flow.png&quot; alt=&quot;Configuration Flow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dans la configuration du WebAuthn, n’oubliez pas de configurer le &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Relying Party Entity Name&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-configure-2fa.png&quot; alt=&quot;Configuration 2fa&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;enregistrement-dun-utilisateur&quot;&gt;Enregistrement d’un utilisateur&lt;/h2&gt;

&lt;p&gt;Passons maintenant à l’enregistrement d’un utilisateur.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-register-user.png&quot; alt=&quot;Register User&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Le browser demande ensuite l’enregistrement de la clef pour l’authentification future (cf la dialogue box avec l’empreinte digitale).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-register-key.png&quot; alt=&quot;Register Key&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Il suffit d’inserer ca clef Yubico FIDO2 compatible WebAuthn.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-yubico.jpg&quot; alt=&quot;Yubico Key&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ensuite il est possible de configurer un label pour ce processus d’authentification &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WebAuthn Yubico Blue&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-register-key-label.png&quot; alt=&quot;Register Key Label&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;authentification-de-lutilisateur&quot;&gt;Authentification de l’utilisateur&lt;/h2&gt;

&lt;p&gt;L’authentification de l’utilisateur est maintenant possible.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-authn-client.png&quot; alt=&quot;Authn User&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dans ce cas le browser demande cette fois une authentification via la clef Yubico (cf la dialogue box avec l’empreinte digitale).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-authn-client-key.png&quot; alt=&quot;Authn User Key&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dans le cas où l’utilisateur s’est trompé de clef ou bien à oublié ca clef, voici le message d’erreur&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-authn-client-key-failed.png&quot; alt=&quot;Authn User Key Failed&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mais dans le cas où tout ce passe bien l’utilisateur sera correctement authentifié et redirigé vers l’application cliente.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-authn-client-ok.png&quot; alt=&quot;User Authentification Ok&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;information-utilisateur&quot;&gt;Information utilisateur&lt;/h2&gt;

&lt;p&gt;Si l’on retourne sur la console d’administration web des utilisateurs dans Keycloak/RHSSO, on peut verifier que l’enregistrement de la clef Yubico a bien était fait. L’enregistrement contient notamment la clef publique de la clef Yubico.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-user-detail.png&quot; alt=&quot;User Detail&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Nous avons vu que la configuration et authentification via le standard WebAuthn est relativement simple avec Keycloak. Alors n’hesitez pas à améliorer l’experience de vos utilisateurs ainsi que la sécurité de leur compte en activant très simplement cette option dans Keycloak/RHSSO.&lt;/p&gt;

&lt;h3 id=&quot;nb&quot;&gt;NB&lt;/h3&gt;

&lt;p&gt;Les fichiers de configuration seront disponibles bientôt dans un repo github.&lt;/p&gt;</content><author><name></name></author><category term="fr" /><category term="Keycloak" /><category term="Yubico" /><category term="2fa" /><category term="webauthn" /><summary type="html">Depuis quelque temps j’interviens chez mes clients afin de mener des études d’architecture autour de Keycloak/RHSSO. Comme son nom l’indique, il s’agit d’une solution de SSO c’est à dire d’un système unique d’authentification et d’authorisation. Le projet Keycloak a debuté en 2014 et est donc relativement mature, la communauté autour de ce projet est très importante.</summary></entry><entry><title type="html">Éxecution d’un moteur de KYC en DMN avec Kogito</title><link href="http://0.0.0.0:4000/blog/2020/06/06/Execution-d'un-KYC-en-DMN.html" rel="alternate" type="text/html" title="Éxecution d'un moteur de KYC en DMN avec Kogito" /><published>2020-06-06T10:00:00-05:00</published><updated>2020-06-06T10:00:00-05:00</updated><id>http://0.0.0.0:4000/blog/2020/06/06/Execution-d'un-KYC-en-DMN</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2020/06/06/Execution-d'un-KYC-en-DMN.html">&lt;p&gt;Dans le précedent &lt;a href=&quot;/blog/2020/06/04/Le-standard-DMN-un-KYC-en-exemple.html&quot;&gt;post sur ce blog&lt;/a&gt; nous avons vu rapidement comment créer sa définition et modelisation des règle d’un KYC basé sur le standard &lt;a href=&quot;https://fr.wikipedia.org/wiki/Decision_Model_and_Notation&quot;&gt;DMN&lt;/a&gt;. Nous allons voir comment faire tourner cet exemple et éxecuter sur un moteur implémentant le standard DMN.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Éxecution d’un moteur KYC en DMN avec Kogito&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;introdution-kogito&quot;&gt;Introdution Kogito&lt;/h1&gt;

&lt;p&gt;Faisons un focus rapide sur &lt;a href=&quot;https://kogito.kie.org/&quot;&gt;Kogito&lt;/a&gt;. Kogito est un moteur de règle orienté cloud.
Ce moteur de règle reprend en grande partie tout le coeur et le developpement de &lt;a href=&quot;https://www.drools.org/&quot;&gt;Drools&lt;/a&gt; et &lt;a href=&quot;https://jbpm.org/&quot;&gt;jBPM&lt;/a&gt; mais propose des fonctionnalités purement Cloud notamment le fait qu’il est prévu d’être éxecuter dans un container de type OCI / Docker et deployé sur un cluster Cloud K8S / Openshift par exemple.&lt;/p&gt;

&lt;h2 id=&quot;business-domain-first-approach&quot;&gt;Business Domain first approach&lt;/h2&gt;

&lt;p&gt;Un apport de Kogito au moteur Drools, c’est qu’il génére automatiquement l’API REST des règles DMN. Dans notre exemple nous allons copier/coller le fichier DMN KYC du post précédent et le faire tourner tel quel avec Kogito. Kogito va proposer une API &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;KYC&lt;/code&gt; acceptant le model des &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Input&lt;/code&gt;. Il sera donc possible de faire un appel REST / HTTP avec des données métiers sans tout le liant technique que nous aurions pu avoir avec l’implémentation purement Drools. Nous allons avoir donc une API orientée métier dépourvue de spécificité technique.&lt;/p&gt;

&lt;h1 id=&quot;execution-du-projet&quot;&gt;Execution du projet&lt;/h1&gt;

&lt;p&gt;Afin de pourvoir éxecuter le modele de règle KYC dans moteur Kogito il va falloir cloner le repository disponible sur Github.&lt;/p&gt;

&lt;h2 id=&quot;compilation&quot;&gt;Compilation&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; git clone   &lt;span class=&quot;nt&quot;&gt;--depth&lt;/span&gt; 1  &lt;span class=&quot;nt&quot;&gt;--branch&lt;/span&gt; blog  https://github.com/gautric/dmn-knative.git
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;dmn-knative&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;execution&quot;&gt;Execution&lt;/h2&gt;

&lt;p&gt;Nous allons copier le fichier KYC.dmn que nous avons fait dans le post précédent.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; curl &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; https://raw.githubusercontent.com/gautric/dmn-knative/master/src/main/resources/KYC.dmn &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; src/main/resources/KYC.dmn 2&amp;gt; /dev/null 

&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; mvn clean package quarkus:dev 

... OMIT ...

__  ____  __  _____   ___  __ ____  ______ 
 &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;/ __ &lt;span class=&quot;se&quot;&gt;\/&lt;/span&gt; / / / _ | / _ &lt;span class=&quot;se&quot;&gt;\/&lt;/span&gt; //_/ / / / __/ 
 -/ /_/ / /_/ / __ |/ , _/ ,&amp;lt; / /_/ /&lt;span class=&quot;se&quot;&gt;\ \ &lt;/span&gt;  
&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;__&lt;span class=&quot;se&quot;&gt;\_\_&lt;/span&gt;___/_/ |_/_/|_/_/|_|&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;___/___/   
2020-06-05 17:22:27,522 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;io.quarkus] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; dmn-knative 1.0-SNAPSHOT &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;powered by Quarkus 1.3.2.Final&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; started &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;3.600s. Listening on: http://0.0.0.0:8080
2020-06-05 17:22:27,525 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;io.quarkus] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Profile dev activated. Live Coding activated.
2020-06-05 17:22:27,526 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;io.quarkus] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Installed features: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;cdi, kogito, resteasy, resteasy-jackson, smallrye-openapi, swagger-ui]&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;swagger&quot;&gt;Swagger&lt;/h2&gt;

&lt;p&gt;Dès que vous avez correctment la sortie standard précédente, il est possible d’accéder à l’URL suivante : &lt;a href=&quot;http://localhost:8080/&quot;&gt;http://localhost:8080/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vous allez atterrir sur la page swagger du moteur Kogito, une API KYC est disponible et peut être utilisée directement via cette page ou bien un appel CURL.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kogito_dmn.png&quot; alt=&quot;Kogito DMN&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;lappel-curl&quot;&gt;L’appel CURL&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DMN_URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://localhost:8080

&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Content-Type: application/json&quot;&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DMN_URL&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/KYC  &lt;span class=&quot;nt&quot;&gt;--data-binary&lt;/span&gt; @- &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;EOF&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;  2&amp;gt; /dev/null | jq
{
  &quot;Amount&quot;: 250000,
  &quot;PEP&quot;: false,
  &quot;Fiscal Residency&quot;: &quot;JP&quot;
}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Attention la commande précédente utilise l’outil &lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;jq&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vous devriez obtenir le résultat suivant :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Amount Rule&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MEDIUM&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;KYC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Fiscal Residency Rule&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;LOW&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Amount&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;250000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;PEP Rule&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;LOW&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;PEP&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Level&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;function Level( input )&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Fiscal Residency&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;JP&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Nous voyons qu’avec Kogito le détail de tous les calculs intermédiaires des &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; est disponible, jusqu’au calcul final au niveau de la valeur KYC ici dans notre exemple ci-dessus. Cela est intéressant à la fois pour du debugging ou bien pour une problématique d’auditabilité du moteur.&lt;/p&gt;

&lt;h2 id=&quot;exemples&quot;&gt;Exemples&lt;/h2&gt;

&lt;p&gt;Des exemples sont disponibles dans le répertoire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;data&lt;/code&gt; du projet que l’on vient de cloner.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Avec cette exemple, nous voyons que la complexité technique d’utiliser un moteur DMN est très faible via Kogito qui propose directement une API métier. Il n’y a plus d’excuse pour ne pas utiliser à minima le standard &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DMN&lt;/code&gt; dans vos applications. Le projet Kogito est encore récent mais rien ne vous empeche de proposer des améliorations et/ou suggestions.&lt;/p&gt;</content><author><name></name></author><category term="fr" /><category term="DMN" /><category term="Kogito" /><category term="KYC" /><summary type="html">Dans le précedent post sur ce blog nous avons vu rapidement comment créer sa définition et modelisation des règle d’un KYC basé sur le standard DMN. Nous allons voir comment faire tourner cet exemple et éxecuter sur un moteur implémentant le standard DMN.</summary></entry><entry><title type="html">Le standard DMN, un KYC en exemple</title><link href="http://0.0.0.0:4000/blog/2020/06/04/Le-standard-DMN-un-KYC-en-exemple.html" rel="alternate" type="text/html" title="Le standard DMN, un KYC en exemple" /><published>2020-06-04T10:00:00-05:00</published><updated>2020-06-04T10:00:00-05:00</updated><id>http://0.0.0.0:4000/blog/2020/06/04/Le-standard-DMN-un-KYC-en-exemple</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2020/06/04/Le-standard-DMN-un-KYC-en-exemple.html">&lt;p&gt;Pendant un certain temps les moteurs de règles étaient fortement dépendant des fournisseurs de solution. Mais depuis que le standard DMN pour Decision Model and Notation est maintenant disponible l’ensemble des éditeurs Opensource ou Closesource fournisse une implémentation de ce standard.
Nous allons voir avec un exemple rapide comment utiliser DMN.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Le standard DMN, un KYC en exemple&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;introdution&quot;&gt;Introdution&lt;/h1&gt;

&lt;p&gt;DMN est une norme de l’&lt;a href=&quot;https://www.omg.org/&quot;&gt;OMG&lt;/a&gt;. Cette norme a pour objectif de standardiser la modélisation et le référentiel des règles de décision dans les applications ayant des besoins de scoring, d’évaluation et/ou d’aide à la décision.&lt;/p&gt;

&lt;p&gt;La norme se propose de faciliter le développement des règles avec des patterns de règles bien connues, comme par exemple les tables de décision. Elle propose un langage de programmation standardiser appelé FEEL &lt;em&gt;Friendly Enough Expression Language&lt;/em&gt;. Ce langage se veut très proche des macros Excel, facilitant l’appropriation du DMN par des équipes métiers.&lt;/p&gt;

&lt;p&gt;DMN est aussi une norme d’éléments graphique. Chaque élément graphique correspond à un pattern qui possède des entrées, un traitement et une sortie. Les éléments graphique sont reliés entre eux dans un &lt;em&gt;arbre&lt;/em&gt; de dépendance d’exécution des règles. Au fur et à mesure de l’exécution des règles on opère une réduction du nombre d’élément pour arriver au dernier élément qui contiendra la décision finale.&lt;/p&gt;

&lt;p&gt;Le standard DMN est disponible en suivant le lien : &lt;a href=&quot;http://www.omg.org/spec/DMN/1.0/&quot;&gt;http://www.omg.org/spec/DMN/1.0/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;tck&quot;&gt;TCK&lt;/h2&gt;

&lt;p&gt;Il existe un outil en ligne listant l’ensemble des implémentation actuellement disponible et leur degré de maturité.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://dmn-tck.github.io/tck/&quot;&gt;https://dmn-tck.github.io/tck/&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;un-exemple--kyc&quot;&gt;Un Exemple : KYC&lt;/h1&gt;

&lt;p&gt;Dans notre exemple nous allons procéder à l’évaluation d’un nouveau client bancaire. Ce processus d’évaluation est communément appeler KYC pour Know Your Customer. Ce processus va calculer un score en fonction de données en entrée. Le score sera par la suite interprété par le conseiller bancaire afin accepter ou pas le nouveau client dans son fichier. Il se peut que la note du score nécessite simplement l’approbation à un niveau supérieur.&lt;/p&gt;

&lt;h2 id=&quot;les-input&quot;&gt;Les Input&lt;/h2&gt;

&lt;p&gt;Afin de pouvoir calculer le score il est nécessaire d’avoir les inputs. Pour cela nous allons avoir besoin de trois entrées :&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;PEP&lt;/em&gt;&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Pour Political Exposed People&lt;/li&gt;
      &lt;li&gt;de type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;boolean&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;Amount&lt;/em&gt;&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Pour la quantité de son apport&lt;/li&gt;
      &lt;li&gt;de type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;number&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;Fiscal Residency&lt;/em&gt;&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Pour la localisation de sa résidence fiscal&lt;/li&gt;
      &lt;li&gt;de type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Dans le contexte DMN il suffit simplement d’utiliser le type de &lt;em&gt;box&lt;/em&gt; suivantes :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dmn_input.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Il est bien sûr possible de définir des types d’entrée plus complexe.&lt;/p&gt;

&lt;h2 id=&quot;les-decision&quot;&gt;Les Decision&lt;/h2&gt;

&lt;p&gt;Le principal élément du DMN est le concept de Decision. Cette &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; va calculer un résultat en fonction d’une ou plusieurs entrée.
On utilise pour cela les &lt;em&gt;box&lt;/em&gt; suivantes dans le modeleur.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dmn_decision_box.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On lie ensuite les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Input&lt;/code&gt; avec les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dmn_decision.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ensuite, il est possible de lier les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; entre elles, afin de remonter les sorties des premières &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; dans une autre &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dmn_decision_link.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ici &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Input&lt;/code&gt; &lt;em&gt;PEP&lt;/em&gt; est utilisé par la &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; &lt;em&gt;PEP Rule&lt;/em&gt;, qui sera lui utilisé dans la &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; &lt;em&gt;KYC&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;type-de-décision&quot;&gt;Type de décision&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Literal expression
    &lt;ul&gt;
      &lt;li&gt;Il s’agit d’une formule/code FEEL&lt;/li&gt;
      &lt;li&gt;par ex : A - B,  SUM(A, B, C)&lt;/li&gt;
      &lt;li&gt;ex: &lt;img src=&quot;/img/dmn_explang.png&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Decision Table
    &lt;ul&gt;
      &lt;li&gt;Il s’agit d’une liste de règle métier qui seront exécutées&lt;/li&gt;
      &lt;li&gt;ex: &lt;img src=&quot;/img/dmn_decisiontable.png&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Context
    &lt;ul&gt;
      &lt;li&gt;Il s’agit d’une liste de variables associées à des valeurs&lt;/li&gt;
      &lt;li&gt;Chaque valeur de la liste peut etre le resultat d’une  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Literal expression&lt;/code&gt;, d’une &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision Table&lt;/code&gt; ou d’une &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BKM&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;ex: &lt;img src=&quot;/img/dmn_context.png&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;les-business-knowledge-model&quot;&gt;Les Business Knowledge Model&lt;/h2&gt;

&lt;p&gt;Les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Business Knowledge Model&lt;/code&gt; fournissent au modeleur la possibilité de réutiliser des briques logiques. Pour un développeur, les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BKM&lt;/code&gt; peuvent être vues comme des fonctions réutilisable dans une ou plusieurs &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt;, notamment car elles s’appellent directement dans les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; et qu’elles possèdent des paramètres d’entrées.&lt;/p&gt;

&lt;p&gt;Comme pour les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; il existe trois types de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BKM&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dmn_bkm.png&quot; alt=&quot;DMN BKM&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dans notre cas nous allons utiliser une &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision Table&lt;/code&gt; pour calculer le score pour chaque règle.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dmn_function.png&quot; alt=&quot;DMN Function&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On relie ensuite le &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BKM&lt;/code&gt; avec la &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dmn_bkm_full.png&quot; alt=&quot;Full DMN BKM&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;result&quot;&gt;Result&lt;/h2&gt;

&lt;p&gt;C’est la &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; KYC qui va contenir le résultat de ce petit moteur de règle. Dans notre cas, nous faisons la somme des trois appel à la &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BKM&lt;/code&gt; Level de chaque retour des &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; rule. Bien sur, cette fonction peut être plus ou moins compliquée car elle utilise le langage de programmation FEEL &lt;em&gt;(Friendly Enough Expression Language)&lt;/em&gt;. Il s’agit d’un langage qui ressemble un peu aux macros Excel.
.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dmn_result.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pour résumer, les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Input&lt;/code&gt; sont donc utilisés dans les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt;, ces &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; sont reliées à des &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BKM&lt;/code&gt; ou bien d’autres &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; qui au fur et à mesure se termine vers une seule &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt;.
Comme on l’a vue précédemment, la &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; finale peut avoir plusieurs type de retour.
Par convention on partira du bas pour les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Input&lt;/code&gt; puis étage par étage on empilera les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; jusqu’à les réduire en une seule.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;J’espère que cette brève introduction à &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DMN&lt;/code&gt; vous aura convaincu de l’utiliser dans vos projets de moteur de règles. Le fait de standardiser les spécifications du moteur de règles permettra par exemple de pouvoir changer de fournisseur de moteur de règle. En fonction des fournisseur, une documentation peut être automatiquement générée facilitant le fond documentaire des projets et l’interaction avec les analystes business.&lt;/p&gt;

&lt;p&gt;Nous verrons dans un prochain post comment exécuter le moteur de KYC.&lt;/p&gt;

&lt;p&gt;Vous pouvez voir directement &lt;a href=&quot;https://kiegroup.github.io/kogito-online/?file=https://github.com/gautric/dmn-knative/blob/master/src/main/resources/KYC.dmn#/editor/dmn&quot;&gt;le resultat du DMN avec cet éditeur en ligne&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="fr" /><category term="DMN" /><category term="KYC" /><category term="standard" /><summary type="html">Pendant un certain temps les moteurs de règles étaient fortement dépendant des fournisseurs de solution. Mais depuis que le standard DMN pour Decision Model and Notation est maintenant disponible l’ensemble des éditeurs Opensource ou Closesource fournisse une implémentation de ce standard. Nous allons voir avec un exemple rapide comment utiliser DMN.</summary></entry><entry><title type="html">MQTTiser l’API Autolib avec Node-Red</title><link href="http://0.0.0.0:4000/blog/2018/04/21/MQTTiser-l-API-Autolib-avec-Node-Red.html" rel="alternate" type="text/html" title="MQTTiser l'API Autolib avec Node-Red" /><published>2018-04-21T10:00:00-05:00</published><updated>2018-04-21T10:00:00-05:00</updated><id>http://0.0.0.0:4000/blog/2018/04/21/MQTTiser-l-API-Autolib-avec-Node-Red</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2018/04/21/MQTTiser-l-API-Autolib-avec-Node-Red.html">&lt;p&gt;Après un petit temps de silence, pour des raisons personnelles et notamment l’arrivé d’un petit Thomas, voici un nouveau post. Étant un utlisateur occassionnel d’&lt;a href=&quot;https://fr.wikipedia.org/wiki/Autolib%27_(Paris)&quot;&gt;Autolib&lt;/a&gt; j’ai besoin d’avoir en flux continu l’état des stations à coté de chez moi (nb de voiture, nb de place). Autour de chez moi, j’ai plusieurs stations Autolib et je dois consulter régulierement l’application iPhone en fonction de mes besoins. Afin de me simplifier la vie j’ai installé et configuré chez moi la solution &lt;a href=&quot;https://www.home-assistant.io&quot;&gt;HomeAssistant&lt;/a&gt;, j’utilisais pour cela l’&lt;a href=&quot;https://opendata.paris.fr/page/home/&quot;&gt;API de Paris&lt;/a&gt; en mode &lt;a href=&quot;https://fr.wikipedia.org/wiki/REST&quot;&gt;REST&lt;/a&gt;/&lt;a href=&quot;https://en.wikipedia.org/wiki/HTTP&quot;&gt;HTTP&lt;/a&gt;.
Malheureusement, le nombre de requetes est limitée et plus on doit superviser de stations (voiture, place libre) plus on doit faire d’appels REST, HomeAssistant est un très bon produit mais un peu limité en terme de scripting du composant &lt;a href=&quot;https://www.home-assistant.io/components/rest_command/&quot;&gt;RESTful&lt;/a&gt;.
Je me suis dit, pourquoi ne pas :&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;MQTTiser l’API Autolib avec Node-Red&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;architecture&quot;&gt;Architecture&lt;/h2&gt;

&lt;p&gt;Voila en résumé l’architecture de la solution que l’on va mettre en place.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/mqtt-archi.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Description du schéma de principe :
    &lt;ul&gt;
      &lt;li&gt;Un flux/flow Node-Red va consommer régulierement la &lt;em&gt;DataParis API&lt;/em&gt;.&lt;/li&gt;
      &lt;li&gt;Le retour est parsé et découpé pour chacune des &lt;em&gt;stations Autolib&lt;/em&gt;.&lt;/li&gt;
      &lt;li&gt;Chaque message est envoyé dans le &lt;em&gt;topic MQTT&lt;/em&gt; correspond à sa station.&lt;/li&gt;
      &lt;li&gt;Le client &lt;em&gt;HomeAssistant&lt;/em&gt; s’abonne ensuite aux topics des stations souhaitées.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;api-de-paris&quot;&gt;API de Paris&lt;/h2&gt;

&lt;p&gt;L’API de Paris propose un grand nombre d’&lt;a href=&quot;https://opendata.paris.fr/explore/&quot;&gt;Objets&lt;/a&gt; sur lequels il est possible de requeter (PLU, liste des prénoms, Titularisations). La plupart du temps ces données sont des données froides, ceux sont des extracts de base de données interne à la Ville de Paris . Seules deux sources de données sont temps réel c’est à dire qu’elles sont mise à jour lors de chaque appel, il s’agit du status des stations &lt;a href=&quot;https://opendata.paris.fr/explore/dataset/velib-disponibilite-en-temps-reel/information/&quot;&gt;Velib&lt;/a&gt; et des stations &lt;a href=&quot;https://opendata.paris.fr/explore/dataset/autolib-disponibilite-temps-reel/information/&quot;&gt;Autolib&lt;/a&gt;.
Dans notre cas, nous allons utiliser cette dernière :&lt;/p&gt;

&lt;p&gt;Cette API indique en temps réel l’état des 1119 stations avec la requete HTTP suivante (on se limitera ici à 2 stations) :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;curl https://opendata.paris.fr/api/records/1.0/search/?dataset&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;autolib-disponibilite-temps-reel&amp;amp;rows&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;nhits&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1119&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;parameters&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dataset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;autolib-disponibilite-temps-reel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;timezone&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;UTC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;rows&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;format&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;json&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;records&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;datasetid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;autolib-disponibilite-temps-reel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;recordid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a1c22a2c66ac55e6de9b0badcf5fe4f71c33e652&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;fields&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ok&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;city&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Paris&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;kind&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;STATION&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;station_type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;station&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;charging_status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;operational&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;rental_status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;operational&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;cars_counter_bluecar&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;cars&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;public_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Paris/Ordener/65&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;geo_point&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;48.8913517&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.3507171&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;charge_slots&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;postal_code&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;75018&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;cars_counter_utilib_1.4&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;subscription_status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;nonexistent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;slots&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;paris-ordener-65&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;address&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;65 rue Ordener&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;cars_counter_utilib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;geometry&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Point&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;coordinates&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.3507171&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;48.8913517&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;datasetid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;autolib-disponibilite-temps-reel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;recordid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;8b1396096c4c2761ec5120ffdd3fd824b18a824d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;fields&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ok&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;city&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Paris&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;kind&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;STATION&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;station_type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;station&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;charging_status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;operational&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;rental_status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;operational&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;cars_counter_bluecar&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;cars&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;public_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Paris/Raymond Losserand/229&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;geo_point&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;48.828&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.306022&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;charge_slots&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;postal_code&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;75014&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;cars_counter_utilib_1.4&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;subscription_status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;nonexistent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;slots&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;paris-raymondlosserand-229&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;address&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;229 Rue Raymond Losserand&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;cars_counter_utilib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;geometry&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Point&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;coordinates&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.306022&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;48.828&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Il n’est pas difficile de comprendre le schéma et le resultat obtenu, l’ensemble des informations nécessaire à note besoin sont là :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;cars :
    &lt;ul&gt;
      &lt;li&gt;nombre de voiture dispo sur la station.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;slots :
    &lt;ul&gt;
      &lt;li&gt;nombre de place libre sur la station.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nous avons aussi des informations de type descriptifs (nom de la station, coordonnées GPS, etc…). Elles pourront etre utilisés dans d’autres cas d’usage bien sûr, sur une carte par exemple.&lt;/p&gt;

&lt;h2 id=&quot;mqtt&quot;&gt;MQTT&lt;/h2&gt;

&lt;p&gt;Le Protocole MQTT est un protocole MoM dans le domaine de l’IoT. Ce protocole est largement utilisé dans le monde de l’Internet des Objets car il est ouvert, leger et consommant peu de ressources reseau. Dans la version 3.x, il n’implemente pas de gestion de Transaction, et se limite au mode Topic ou autrement appelé Publish/Subscribe. Plusieurs niveaux de QoS sont définisable tant sur le message, sur le topic que sur le broker lui-même. Plusieurs features sont intéressantes notamment la notion d’adressage hierarchique des topics, il est possible de s’abonner dans ce cas là à tout un sous-groupe de topic :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;/nasdaq/#&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Pour tout les indices du nasdaq&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;/meteo/fr/92/#&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Pour toute les villes du départements du 92.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Utilisé au dessus de TCP/IP et bindé sur le port 1883, il est standardisé par l’&lt;a href=&quot;https://www.oasis-open.org/&quot;&gt;OASIS&lt;/a&gt;, l’&lt;a href=&quot;https://www.iso.org&quot;&gt;ISO&lt;/a&gt; et &lt;a href=&quot;http://www.iana.org/&quot;&gt;IANA&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;broker-mqtt&quot;&gt;Broker MQTT&lt;/h3&gt;

&lt;p&gt;Plusieurs Broker MQTT existent sur le marché, nous allons en voir deux OpenSource développé sur des langages différents. Nous allons comme cela testé leur interoperabilité.&lt;/p&gt;

&lt;h4 id=&quot;mosquitto&quot;&gt;&lt;a href=&quot;https://mosquitto.org/&quot;&gt;Mosquitto&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Développé par la Fondation Eclispe, il est écrit en C. Il possede une bon support de la communauté et est régulièrement mis à jour.
Disponible sur l’ensemble des environement Unix like, il est distribué par les systemes de packaging de chaque OS.&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Version&lt;/td&gt;
      &lt;td&gt;1.4.15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Date&lt;/td&gt;
      &lt;td&gt;Fev 2018&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;License&lt;/td&gt;
      &lt;td&gt;EPL/EDL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Langage&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;warn&quot;&gt;
Je n'ai pas encore trouvé de système de supervision un peu serieux, je suis preneur par vos retours.
&lt;/div&gt;
&lt;p&gt;Dans ce post nous allons simplement utilisé le client mosquitto qui est très facile d’utilisation.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mosquitto_sub &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &amp;lt;&lt;span class=&quot;nb&quot;&gt;id &lt;/span&gt;client&amp;gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; &amp;lt;host&amp;gt; &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; &amp;lt;topic&amp;gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;

mosquitto_sub &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; mosquitto_client &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; localhost &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/autolib/boulognebillancourt/#&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;info&quot;&gt;
Mosquitto est disponible en mode container Docker.
&lt;/div&gt;

&lt;h4 id=&quot;activemq-artemis&quot;&gt;ActiveMQ Artemis&lt;/h4&gt;

&lt;p&gt;La fondation Apache quand à elle propose le project commumautaire &lt;a href=&quot;https://activemq.apache.org/artemis/&quot;&gt;Apache ActiveMQ Artemis&lt;/a&gt;. Il s’agit du petit frère du projet &lt;a href=&quot;https://activemq.apache.org/&quot;&gt;Apache ActiveMQ&lt;/a&gt;. Comme souvent dans les projet de la Fondation, le projet est developpé en Java. Au contraire de Mosquitto qui est mono protocole, Artemis support un grand nombre de protocole ouvert comme : &lt;a href=&quot;http://www.amqp.org/&quot;&gt;AMQP v1.0&lt;/a&gt;, MQTT, &lt;a href=&quot;https://stomp.github.io/&quot;&gt;STOMP&lt;/a&gt;, &lt;a href=&quot;http://activemq.apache.org/openwire.html&quot;&gt;OpenWire&lt;/a&gt;. Il est compatible &lt;a href=&quot;https://jcp.org/en/jsr/detail?id=170&quot;&gt;JMS 1.0&lt;/a&gt; et &lt;a href=&quot;https://jcp.org/en/jsr/detail?id=368&quot;&gt;2.0&lt;/a&gt; pour les utilisateurs de l’API JMS. Il est aussi facilement clusterisable afin de garantir une haute disponible.&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Version&lt;/td&gt;
      &lt;td&gt;2.5.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Date&lt;/td&gt;
      &lt;td&gt;Mars 2018&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;License&lt;/td&gt;
      &lt;td&gt;Apache 2.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Langage&lt;/td&gt;
      &lt;td&gt;Java&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;info&quot;&gt;
ActiveMQ Artemis vient en standard avec un outil de monitoring
&lt;/div&gt;

&lt;h2 id=&quot;node-red&quot;&gt;Node-red&lt;/h2&gt;

&lt;p&gt;Le project Node-Red est un outil de creation et d’execution &lt;a href=&quot;http://www.enterpriseintegrationpatterns.com/&quot;&gt;EIP&lt;/a&gt; dédié à l’IoT et executé sur la plateforme &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;NodeJs&lt;/a&gt;. C’est un outil léger tout en disposant d’une IHM complete de création de flow. L’IHM permet de créer des flows de traitement en assemblant et reliant des composants d’entrée et/ou sortie en eux via des liens.&lt;/p&gt;

&lt;p&gt;Voici une liste non exhaustive des composants disponible :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;mqtt in/out.&lt;/li&gt;
  &lt;li&gt;email in/out.&lt;/li&gt;
  &lt;li&gt;file in/out.&lt;/li&gt;
  &lt;li&gt;http/tcp/udp in/out.&lt;/li&gt;
  &lt;li&gt;timer, switch, change, range, join, sort, batch, function, debug, log.&lt;/li&gt;
  &lt;li&gt;csv, html, json, yaml, xml, html.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lorsque le flow est validé, il suffit simplement de le deployer pour l’executer directement.&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Version&lt;/td&gt;
      &lt;td&gt;v0.18.4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Date&lt;/td&gt;
      &lt;td&gt;Jan 2018&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;License&lt;/td&gt;
      &lt;td&gt;Apache 2.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Langage&lt;/td&gt;
      &lt;td&gt;JavaScript&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;info&quot;&gt;
Node-Red s'execute très bien sur un RaspberryPi
&lt;/div&gt;

&lt;h2 id=&quot;flow-autolib&quot;&gt;Flow Autolib&lt;/h2&gt;

&lt;p&gt;Pour notre use-case, nous allons faire un appel toute les 20s (cf info) sur l’API de Paris, on verifie rapidement que l’on recupere bien un retour HTTP/200.
On découpe ensuite la liste des stations message par message. Puis on crée dynamiquement pour chaque message et donc chaque station, le bon adressage de Topic pour l’envoie au broker MQTT. Le composant RBE est simplement là pour faire transiter le message que si il y a effectivement un changement de contenu.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/mqtt-autolib-flow.png&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;info&quot;&gt;
L'API de Paris est limitée 5000 req/j.
Cela fait dans une journée, pas plus d'une requete toute les 17s.
Donc pour etre large, j'ai pris toutes les 20s.
&lt;/div&gt;

&lt;p&gt;Le code du flow est disponible sur le repository suivant :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gautric/mqtt-4-autolib&quot;&gt;https://github.com/gautric/mqtt-4-autolib/blob/master/flows_mbp.g.a.net.json&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;résultat&quot;&gt;Résultat&lt;/h2&gt;

&lt;h3 id=&quot;monitoring-activemq&quot;&gt;Monitoring ActiveMQ&lt;/h3&gt;

&lt;p&gt;Nous voyons bien dans l’outil de monitoring les divers topics qui dependent directement des stations Autolib, nous voyons aussi la connexion de deux clients MQTT, l’un étant le Node-Red, l’autre le client Mosquitto.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/mqtt-artemis-monitoring.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;J’ai configuré les messages MQTT afin d’etre en mode retain à minima, c’est pour cela que l’on retrouve un prefix technique à l’adressage des topics des stations Autolib. Cette fonctionnalité permettra de conserver une dernière valeur si HomeAssistant tombe ou bien le flux Node-Red.&lt;/p&gt;

&lt;h3 id=&quot;dashboard-homeassistant&quot;&gt;Dashboard HomeAssistant&lt;/h3&gt;

&lt;p&gt;Mon Dashboard HomeAssistant commence à être bien complet avec plusieurs onglets pour chaque cas d’usage. J’ai un onglet en particuler qui affiche l’ensemble des informations de transport dont Autolib, la RATP ainsi que le traffic des voitures en IDF.&lt;/p&gt;

&lt;h4 id=&quot;configuration&quot;&gt;Configuration&lt;/h4&gt;

&lt;p&gt;Après avoir envoyé les messages dans le broker ActiveMQ Artemis, il faut que le Dashboard HomeAssistant puisse lire correctement les données. Pour cela, il suffira de rajouter dans sa liste dans le fichier sensor.yaml, les sensors de type MQTT. Il suffit de comprendre le schéma du message recu et de récuperer le bon élément du message.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mqtt&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Autolib&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Boulogne-Billancourt/Henri&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Martin/2&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Cars&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;state_topic&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/autolib/boulognebillancourt/henrimartin/2&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;value_template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;\{\{value_json.fields.cars\}\}'&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;unit_of_measurement&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mqtt&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Autolib&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Boulogne-Billancourt/Henri&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Martin/2&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Slots&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;state_topic&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/autolib/boulognebillancourt/henrimartin/2&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;value_template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;\{\{value_json.fields.slots\}\}'&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;unit_of_measurement&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;.....&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mqtt&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Autolib&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Last&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Update&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;state_topic&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/autolib/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;lastCall&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;unit_of_measurement&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;screenshot&quot;&gt;ScreenShot&lt;/h4&gt;

&lt;p&gt;Et pour finir, voici le résultant dans le Dashboard HomeAssistant. J’ai rajouté un petit hook dans le flow nominal afin d’avoir l’heure de la dernière mise à jour des données. Il s’agit de verifier si tout ce passe bien.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/mqtt-homeassistant.png&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;mosquitto-client&quot;&gt;Mosquitto Client&lt;/h4&gt;

&lt;p&gt;L’utilisation du client mosquitto est interopérable facilement avec le broker ActiveMQ Artemis.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mosquitto_sub &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; mosquitto_client &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; localhost &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/autolib/boulognebillancourt/#&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;

/autolib/boulognebillancourt/henrimartin/2 &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;datasetid&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;autolib-disponibilite-temps-reel&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;recordid&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;a165c1342525a1c27a24eb1cdf781eddf6aaa149&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;fields&quot;&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;status&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;ok&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;city&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Boulogne-Billancourt&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;kind&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;STATION&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;station_type&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;station&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;charging_status&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;nonexistent&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;rental_status&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;operational&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;cars_counter_bluecar&quot;&lt;/span&gt;:1,&lt;span class=&quot;s2&quot;&gt;&quot;cars&quot;&lt;/span&gt;:1,&lt;span class=&quot;s2&quot;&gt;&quot;public_name&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Boulogne-Billancourt/Henri Martin/2&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;geo_point&quot;&lt;/span&gt;:[48.8365078,2.2524132],&lt;span class=&quot;s2&quot;&gt;&quot;charge_slots&quot;&lt;/span&gt;:0,&lt;span class=&quot;s2&quot;&gt;&quot;postal_code&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;92100&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;cars_counter_utilib_1.4&quot;&lt;/span&gt;:0,&lt;span class=&quot;s2&quot;&gt;&quot;subscription_status&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;nonexistent&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;slots&quot;&lt;/span&gt;:1,&lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;boulognebillancourt-henrimartin-2&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;address&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;2 rue Henri Martin&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;cars_counter_utilib&quot;&lt;/span&gt;:0&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;geometry&quot;&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Point&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;coordinates&quot;&lt;/span&gt;:[2.2524132,48.8365078]&lt;span class=&quot;o&quot;&gt;}}&lt;/span&gt;

/autolib/boulognebillancourt/reine/12 &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;datasetid&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;autolib-disponibilite-temps-reel&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;recordid&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;885e5ba23a48e4c519ed9eded9422628dec6ef14&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;fields&quot;&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;status&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;ok&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;city&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Boulogne-Billancourt&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;kind&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;STATION&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;station_type&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;station&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;charging_status&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;nonexistent&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;rental_status&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;operational&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;cars_counter_bluecar&quot;&lt;/span&gt;:4,&lt;span class=&quot;s2&quot;&gt;&quot;cars&quot;&lt;/span&gt;:4,&lt;span class=&quot;s2&quot;&gt;&quot;public_name&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Boulogne-Billancourt/Reine/12&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;geo_point&quot;&lt;/span&gt;:[48.8388074,2.2505008],&lt;span class=&quot;s2&quot;&gt;&quot;charge_slots&quot;&lt;/span&gt;:0,&lt;span class=&quot;s2&quot;&gt;&quot;postal_code&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;92100&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;cars_counter_utilib_1.4&quot;&lt;/span&gt;:0,&lt;span class=&quot;s2&quot;&gt;&quot;subscription_status&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;nonexistent&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;slots&quot;&lt;/span&gt;:1,&lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;boulognebillancourt-reine-12&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;address&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;12 bis Route de la Reine&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;cars_counter_utilib&quot;&lt;/span&gt;:0&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;geometry&quot;&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Point&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;coordinates&quot;&lt;/span&gt;:[2.2505008,48.8388074]&lt;span class=&quot;o&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;En conclusion, pourquoi faire simple quand on peut faire compliquer. En fait, j’utilise un broker MQTT pour un autre cas d’usage dans ma domotique, donc je rentabilise bien l’utilisation de mon broker. Pour être totalement transparent, le broker Mosquitto est largement suffisant pour ma domotique, Artemis bien que beaucoup plus complet et un peu overkill pour mon usage. Je voulais simplement remercier la limite de l’API de Paris qui m’a permis de faire un petit projet d’intégration bien sympa je trouve et toujours dans la philosophie standard ouvert, interoperabilité et projets commumnutaires OpenSource.&lt;/p&gt;

&lt;p&gt;En esperant, vous avoir intéressé par ce post, n’hésitez pas à me faire vos retours,&lt;/p&gt;</content><author><name></name></author><category term="fr" /><category term="MQTT" /><category term="node-red" /><category term="flow" /><category term="api" /><category term="Paris" /><category term="Autolib" /><summary type="html">Après un petit temps de silence, pour des raisons personnelles et notamment l’arrivé d’un petit Thomas, voici un nouveau post. Étant un utlisateur occassionnel d’Autolib j’ai besoin d’avoir en flux continu l’état des stations à coté de chez moi (nb de voiture, nb de place). Autour de chez moi, j’ai plusieurs stations Autolib et je dois consulter régulierement l’application iPhone en fonction de mes besoins. Afin de me simplifier la vie j’ai installé et configuré chez moi la solution HomeAssistant, j’utilisais pour cela l’API de Paris en mode REST/HTTP. Malheureusement, le nombre de requetes est limitée et plus on doit superviser de stations (voiture, place libre) plus on doit faire d’appels REST, HomeAssistant est un très bon produit mais un peu limité en terme de scripting du composant RESTful. Je me suis dit, pourquoi ne pas :</summary></entry><entry><title type="html">Camel XML XPath XSLT Aggregator</title><link href="http://0.0.0.0:4000/blog/2016/12/03/Camel-XML-XsltAggregationStrategy.html" rel="alternate" type="text/html" title="Camel XML XPath XSLT Aggregator" /><published>2016-12-03T09:00:00-06:00</published><updated>2016-12-03T09:00:00-06:00</updated><id>http://0.0.0.0:4000/blog/2016/12/03/Camel-XML-XsltAggregationStrategy</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2016/12/03/Camel-XML-XsltAggregationStrategy.html">&lt;p&gt;This mouth I went to &lt;a href=&quot;https://en.wikipedia.org/wiki/Greece&quot;&gt;Greece&lt;/a&gt; for a customer of mine. I worked at Athens on &lt;a href=&quot;http://camel.apache.org/&quot;&gt;Camel&lt;/a&gt; integration with Mainframe legacy stuff.
Customer would like to use XML message format during the full Camel route process. His wish was to reuse some Camel routes as new service components.
Fortunately, Camel framework meets all of this requirements out of the box. We will this in this simple sample how to do it.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;a Camel sample with XML messages and XSL transformation&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;camel-framework&quot;&gt;Camel framework&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://camel.apache.org/&quot;&gt;Camel project&lt;/a&gt; is managed by the Apache foundation. Camel empowers you to define routing and mediation rules in a variety of domain-specific languages, including a Java-based Fluent API, Spring or Blueprint XML Configuration files, and a Scala DSL. This means you get smart completion of routing rules in your IDE, whether in a Java, Scala or XML editor. &lt;em&gt;(&lt;a href=&quot;http://camel.apache.org/&quot;&gt;extract of the Camel website&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Apache Camel uses URIs to work directly with any kind of Transport or messaging model such as HTTP, ActiveMQ, JMS, JBI, SCA, MINA or CXF, as well as pluggable Components and Data Format options. Apache Camel is a small library with minimal dependencies for easy embedding in any Java application. Apache Camel lets you work with the same API regardless which kind of Transport is used - so learn the API once and you can interact with all the Components provided out-of-box. &lt;em&gt;(&lt;a href=&quot;http://camel.apache.org/&quot;&gt;extract of the Camel website&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;message&quot;&gt;Message&lt;/h3&gt;

&lt;p&gt;A Camel message contains headers and body part. &lt;strong&gt;Headers&lt;/strong&gt; can be use to add some new informations (meta data) for the camel current process or next components. &lt;strong&gt;Body&lt;/strong&gt; is the payload of the Camel message. During Camel process, the payload could change on each step and sometime payload is replace by a new one.&lt;/p&gt;

&lt;h3 id=&quot;aggregator-strategy&quot;&gt;Aggregator Strategy&lt;/h3&gt;

&lt;p&gt;Camel provides enrich pattern with aggregator strategy. With this component both messages (old and new one) can be merge to a new one. Developers can implement his own version of aggregator. In this example, we will see how to use the XSLT Aggregator into a Camel route.&lt;/p&gt;

&lt;h2 id=&quot;use-case&quot;&gt;Use case&lt;/h2&gt;

&lt;h3 id=&quot;customer-and-product&quot;&gt;Customer and product&lt;/h3&gt;

&lt;p&gt;The use case is very simple, we send a message to enrich customer information and product information. The route receives a message via the file system, checks xml validity and calls two services to retrieve more customer and product informations. Because we would like to keep the full payload anytime and avoid any payload backup into header we have to use enrich pattern. Route last step is to write the final result to a new file.&lt;/p&gt;

&lt;h3 id=&quot;route&quot;&gt;Route&lt;/h3&gt;

&lt;p&gt;Here is the main route. You can notice &lt;em&gt;&amp;lt;enrich&amp;gt;&lt;/em&gt; elements for calling service.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;route&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;service&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;from&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;file:target/in?noop=true&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;to&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;validator:service.xsd&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;convertBodyTo&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;String&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;to&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;log:net.a.g.camel&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;enrich&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;strategyRef=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;xasCM&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;constant&amp;gt;&lt;/span&gt;direct:customerService&lt;span class=&quot;nt&quot;&gt;&amp;lt;/constant&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/enrich&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;to&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;log:net.a.g.camel&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;enrich&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;strategyRef=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;xasPM&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;constant&amp;gt;&lt;/span&gt;direct:productService&lt;span class=&quot;nt&quot;&gt;&amp;lt;/constant&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/enrich&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;to&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;log:net.a.g.camel&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;to&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;validator:service.xsd&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;to&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;file:target/out&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/route&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;service&quot;&gt;Service&lt;/h3&gt;

&lt;p&gt;Here is the service route to retrieve informations. You can notice &lt;em&gt;&amp;lt;xpath&amp;gt;&lt;/em&gt; elements for extract the only information we need for the service. We just mock the end of service with a constant payload to send back. In real life, you could call a database or a soap/rest service for sure.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;        &lt;span class=&quot;nt&quot;&gt;&amp;lt;route&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;customer&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;from&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;direct:customerService&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;to&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;log:net.a.g.camel&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;setBody&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;xpath&amp;gt;&lt;/span&gt;//s:customer&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xpath&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/setBody&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;to&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;log:net.a.g.camel&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;transform&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;constant&amp;gt;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;![CDATA[&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
                  &lt;span class=&quot;nt&quot;&gt;&amp;lt;s:customer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:s=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;urn://example.org/service/2016/11&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                      &lt;span class=&quot;nt&quot;&gt;&amp;lt;s:firstName&amp;gt;&lt;/span&gt;Jean&lt;span class=&quot;nt&quot;&gt;&amp;lt;/s:firstName&amp;gt;&lt;/span&gt;
                      &lt;span class=&quot;nt&quot;&gt;&amp;lt;s:lastName&amp;gt;&lt;/span&gt;Paul&lt;span class=&quot;nt&quot;&gt;&amp;lt;/s:lastName&amp;gt;&lt;/span&gt;
                      &lt;span class=&quot;nt&quot;&gt;&amp;lt;s:title&amp;gt;&lt;/span&gt;M.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/s:title&amp;gt;&lt;/span&gt;
                  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/s:customer&amp;gt;&lt;/span&gt;]]&amp;gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/constant&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/transform&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/route&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;nt&quot;&gt;&amp;lt;route&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;product&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;from&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;direct:productService&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;to&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;log:net.a.g.camel&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;setBody&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;xpath&amp;gt;&lt;/span&gt;//s:product&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xpath&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/setBody&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;to&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;log:net.a.g.camel&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;transform&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;constant&amp;gt;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;![CDATA[&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
                  &lt;span class=&quot;nt&quot;&gt;&amp;lt;s:product&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:s=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;urn://example.org/service/2016/11&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                          &lt;span class=&quot;nt&quot;&gt;&amp;lt;s:id&amp;gt;&lt;/span&gt;123&lt;span class=&quot;nt&quot;&gt;&amp;lt;/s:id&amp;gt;&lt;/span&gt;
                          &lt;span class=&quot;nt&quot;&gt;&amp;lt;s:amount&amp;gt;&lt;/span&gt;122&lt;span class=&quot;nt&quot;&gt;&amp;lt;/s:amount&amp;gt;&lt;/span&gt;
                          &lt;span class=&quot;nt&quot;&gt;&amp;lt;s:price&amp;gt;&lt;/span&gt;8495&lt;span class=&quot;nt&quot;&gt;&amp;lt;/s:price&amp;gt;&lt;/span&gt;
                          &lt;span class=&quot;nt&quot;&gt;&amp;lt;s:name&amp;gt;&lt;/span&gt;LOUKOUM&lt;span class=&quot;nt&quot;&gt;&amp;lt;/s:name&amp;gt;&lt;/span&gt;
                   &lt;span class=&quot;nt&quot;&gt;&amp;lt;/s:product&amp;gt;&lt;/span&gt;]]&amp;gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/constant&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/transform&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/route&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;xslt&quot;&gt;XSLT&lt;/h3&gt;

&lt;p&gt;Here is the XSLT Aggregator for merging the pre-call service message with the new message from the return of the service. By default, Camel passes the old message to XSLT and adds new message as a XSLT parameter &lt;em&gt;new-exchange&lt;/em&gt;. The XSL is very simple, we use identity algorithm to copy all previous message (the first xsl:template block) and when we need to inject new data we fork to an other algorithm (the second xsl:template block). The merging stuff is very simple even if it is a demo.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;  &lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:stylesheet&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsl=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/1999/XSL/Transform&quot;&lt;/span&gt;
  	&lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2.0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:s=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;urn://example.org/service/2016/11&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

  	&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:param&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;new-exchange&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

  	&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;match=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@* | node()&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  		&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:copy&amp;gt;&lt;/span&gt;
  			&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:apply-templates&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;select=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@* | node()&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xsl:copy&amp;gt;&lt;/span&gt;
  	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;

  	&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;match=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;s:customer&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  		&lt;span class=&quot;nt&quot;&gt;&amp;lt;s:customer&amp;gt;&lt;/span&gt;
  			&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:copy-of&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;select=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;s:id&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  			&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:copy-of&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;select=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$new-exchange//s:firstName&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  			&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:copy-of&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;select=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$new-exchange//s:lastName&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  			&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:copy-of&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;select=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$new-exchange//s:title&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  			&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:copy-of&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;select=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;s:country&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/s:customer&amp;gt;&lt;/span&gt;
  	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/xsl:stylesheet&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Into the main route, you need to add the strategy in &lt;em&gt;&amp;lt;xpath&amp;gt;&lt;/em&gt; element, in this case we just use &lt;em&gt;&lt;a href=&quot;https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/apache/camel/util/toolbox/XsltAggregationStrategy.java&quot;&gt;XsltAggregationStrategy&lt;/a&gt;&lt;/em&gt;, it comes with &lt;em&gt;camel-core&lt;/em&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;bean&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;xasCM&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.apache.camel.util.toolbox.XsltAggregationStrategy&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;constructor-arg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;index=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;customerMerge.xslt&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The camel framework is very useful and pleasant to work with. Its flexibility brings a very cool leverage to implements more complex stuff in the real life. The &lt;em&gt;XsltAggregationStrategy&lt;/em&gt; can help you to use XML during the whole camel route. Using camel route as service is very helpful to add more malleable development, you can reuse service anytime. You must keep in mind XML schema (IN/OUT message) validation and the versioning management.&lt;/p&gt;

&lt;h3 id=&quot;links&quot;&gt;Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://camel.apache.org/&quot;&gt;Camel project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://camel.apache.org/content-enricher.html&quot;&gt;Enrich&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/apache/camel/util/toolbox/XsltAggregationStrategy.java&quot;&gt;XsltAggregationStrategy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.w3.org/TR/xslt&quot;&gt;XSLT 1.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.w3.org/TR/xslt20&quot;&gt;XSLT 2.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://camel.apache.org/direct.html&quot;&gt;Direct&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="en" /><category term="Camel" /><category term="XML" /><category term="XPath" /><category term="XSLT" /><category term="Aggregator" /><category term="Route" /><summary type="html">This mouth I went to Greece for a customer of mine. I worked at Athens on Camel integration with Mainframe legacy stuff. Customer would like to use XML message format during the full Camel route process. His wish was to reuse some Camel routes as new service components. Fortunately, Camel framework meets all of this requirements out of the box. We will this in this simple sample how to do it.</summary></entry><entry><title type="html">Setup a Hotspot Wifi w/ Ansible into a RaspberryPi 3</title><link href="http://0.0.0.0:4000/blog/2016/09/27/RaspberryPi-Ansible-Wifi-Hotspot.html" rel="alternate" type="text/html" title="Setup a Hotspot Wifi w/ Ansible into a RaspberryPi 3" /><published>2016-09-27T10:00:00-05:00</published><updated>2016-09-27T10:00:00-05:00</updated><id>http://0.0.0.0:4000/blog/2016/09/27/RaspberryPi-Ansible-Wifi-Hotspot</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2016/09/27/RaspberryPi-Ansible-Wifi-Hotspot.html">&lt;p&gt;This September, RaspberryPi foundation has sold &lt;a href=&quot;https://www.raspberrypi.org/blog/ten-millionth-raspberry-pi-new-kit/&quot;&gt;ten (10) Millions of unit&lt;/a&gt;. This small computer is amazing, you can setup very quickly several cool IoT projects. Since 2012, I bought all versions &lt;a href=&quot;https://en.wikipedia.org/wiki/Raspberry_Pi#Specifications&quot;&gt;(B 256Mo, B 512Mo, B+, 2B, 3B)&lt;/a&gt; of RaspberryPi. I am a big fan of this product and you can find into &lt;a href=&quot;/blog/&quot;&gt;this blog&lt;/a&gt; some projects I’ve made on top of this little computer.
RaspberryPi version 3 comes with a wifi builtin interface, and this wifi interface can be configured as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Hotspot_(Wi-Fi)&quot;&gt;Wifi Hotspot&lt;/a&gt;. I use it every day at home or at office. Today, I will show you how to configure a Wifi Hotspot with &lt;a href=&quot;https://www.ansible.com/&quot;&gt;Ansible&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Howto setup a Hotspot Wifi w/ Ansible into a RaspberryPi 3&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;For this lab, you need the following software :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a RaspberryPi version 3
    &lt;ul&gt;
      &lt;li&gt;with &lt;a href=&quot;https://www.raspbian.org/&quot;&gt;Raspbian&lt;/a&gt; and a ssh connection for pi user.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Ansible installed  into our system.
    &lt;ul&gt;
      &lt;li&gt;for MacOS : via &lt;a href=&quot;https://trac.macports.org/browser/trunk/dports/sysutils/ansible/Portfile&quot;&gt;Macport&lt;/a&gt;, &lt;a href=&quot;http://brew.sh/index.html&quot;&gt;Homebrew&lt;/a&gt; or pip&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;clone-git-project&quot;&gt;Clone git project&lt;/h2&gt;

&lt;p&gt;First of all, clone the git repo project.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone git@github.com:gautric/ansible-raspberrypi.git
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ansible-raspberrypi&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;ansible-playbook&quot;&gt;Ansible playbook&lt;/h2&gt;

&lt;p&gt;To install and configure our Wifi Hotspot, we gonna use a YAML file used by Ansible. This file is realy simple to understand.
It’s a list of tasks, and each task will perform only one action like :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;installing package&lt;/li&gt;
  &lt;li&gt;coping file&lt;/li&gt;
  &lt;li&gt;enabling service&lt;/li&gt;
  &lt;li&gt;restart device&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By default Raspbian comes with &lt;em&gt;pi&lt;/em&gt; user w/ correct &lt;strong&gt;sudo&lt;/strong&gt; grant. In this playbook, Ansible uses &lt;strong&gt;pi&lt;/strong&gt; user &lt;em&gt;(remote_user: pi)&lt;/em&gt; and performs all commands with &lt;strong&gt;sudo&lt;/strong&gt; &lt;em&gt;(become: true)&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&quot;warn&quot;&gt;
As you can see wpa_passphrase and ssid must be defined. You will see how to do it with command line directly.
&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Configure WIFI Hotspot for RaspberryPi &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;raspberrypi&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;remote_user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pi&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;vars&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;wpa_passphrase&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;XXXXXXX&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wlan0&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ssid&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;YYYYYYYY&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ip_server&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;10.0.0.1&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;netmask&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;255.255.255.0&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ip_dhcp_low&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;10.0.0.2&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ip_dhcp_high&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;10.0.0.15&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hostapd install&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;apt&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name=hostapd state=present force=yes&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dnsmasq install&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;apt&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name=dnsmasq state=present force=yes&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dnsmasq.conf&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;template/dnsmasq.conf.j2&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/dnsmasq.conf&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;backup&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hostapd.conf&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;template/hostapd.conf.j2&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/hostapd/hostapd.conf&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;backup&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hostapd&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;template/hostapd.j2&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/default/hostapd&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;backup&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rc.local&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;template/rc.local.j2&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/rc.local&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;backup&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dnsmasq service&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name=dnsmasq enabled=yes state=started&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hostapd service&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name=hostapd enabled=yes state=started&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;restart machine&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;sleep 2 &amp;amp;&amp;amp; shutdown -r noww&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;async&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;poll&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;ignore_errors&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We can also create template. Ansible will inject values into the template and copy the final file to destination.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;={{&lt;/span&gt; interface &lt;span class=&quot;o&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;hw_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;g
&lt;span class=&quot;nv&quot;&gt;channel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;10
&lt;span class=&quot;nv&quot;&gt;auth_algs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
&lt;span class=&quot;nv&quot;&gt;macaddr_acl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0
&lt;span class=&quot;nv&quot;&gt;wpa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2
&lt;span class=&quot;nv&quot;&gt;wpa_key_mgmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;WPA-PSK
&lt;span class=&quot;nv&quot;&gt;wpa_pairwise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;CCMP
&lt;span class=&quot;nv&quot;&gt;rsn_pairwise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;CCMP
&lt;span class=&quot;nv&quot;&gt;wpa_passphrase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;={{&lt;/span&gt; wpa_passphrase &lt;span class=&quot;o&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;ssid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;={{&lt;/span&gt; ssid &lt;span class=&quot;o&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;ansible-execution&quot;&gt;Ansible Execution&lt;/h2&gt;

&lt;p&gt;To deploy configuration, Ansible provides &lt;strong&gt;ansible-playbook&lt;/strong&gt; command line. You must configure &lt;strong&gt;hosts&lt;/strong&gt; file, it includes all RaspberryPi hosts.&lt;/p&gt;

&lt;h3 id=&quot;ansible-command-line&quot;&gt;Ansible command line&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$&amp;gt;&lt;/span&gt; ansible-playbook pi_wifi.yml &lt;span class=&quot;nt&quot;&gt;--inventory-file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;./hosts &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; pi  &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ssid=RASPBERRY wpa_passphrase=1234567891011&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;warn&quot;&gt;
Please change wpa_passphrase and ssid correctly.
&lt;/div&gt;

&lt;h3 id=&quot;ansible-command-line-output&quot;&gt;Ansible command line output&lt;/h3&gt;

&lt;p&gt;The command line output should look like the same.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$&amp;gt;&lt;/span&gt; ansible-playbook pi_wifi.yml &lt;span class=&quot;nt&quot;&gt;--inventory-file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;./hosts &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; pi  &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--diff&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ssid=RASPBERRY wpa_passphrase=12345&quot;&lt;/span&gt;
No config file found&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; using defaults

PLAY &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;raspberrypi] &lt;span class=&quot;k&quot;&gt;*************************************************************&lt;/span&gt;

TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;setup] &lt;span class=&quot;k&quot;&gt;*******************************************************************&lt;/span&gt;
ok: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.0.11]

TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;hostapd &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*********************************************************&lt;/span&gt;
ok: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.0.11] &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cache_update_time&quot;&lt;/span&gt;: 0, &lt;span class=&quot;s2&quot;&gt;&quot;cache_updated&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;changed&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;dnsmasq &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*********************************************************&lt;/span&gt;
changed: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.0.11] &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cache_update_time&quot;&lt;/span&gt;: 0, &lt;span class=&quot;s2&quot;&gt;&quot;cache_updated&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;changed&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;stderr&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;stdout&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;Reading package lists...&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Building dependency tree...&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Reading state information...&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;The following extra packages will be installed:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;  dns-root-data dnsmasq-base libmnl0 libnetfilter-conntrack3&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;The following NEW packages will be installed:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;  dns-root-data dnsmasq dnsmasq-base libmnl0 libnetfilter-conntrack3&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;0 upgraded, 5 newly installed, 0 to remove and 0 not upgraded.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Inst libmnl0 (1.0.3-5 Raspbian:stable [armhf])&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Inst libnetfilter-conntrack3 (1.0.4-1 Raspbian:stable [armhf])&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Inst dns-root-data (2014060201+2 Raspbian:stable [all])&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Inst dnsmasq-base (2.72-3+deb8u1 Raspbian:stable [armhf])&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Inst dnsmasq (2.72-3+deb8u1 Raspbian:stable [all])&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Conf libmnl0 (1.0.3-5 Raspbian:stable [armhf])&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Conf libnetfilter-conntrack3 (1.0.4-1 Raspbian:stable [armhf])&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Conf dns-root-data (2014060201+2 Raspbian:stable [all])&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Conf dnsmasq-base (2.72-3+deb8u1 Raspbian:stable [armhf])&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Conf dnsmasq (2.72-3+deb8u1 Raspbian:stable [all])&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;stdout_lines&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Reading package lists...&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Building dependency tree...&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Reading state information...&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;The following extra packages will be installed:&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;  dns-root-data dnsmasq-base libmnl0 libnetfilter-conntrack3&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;The following NEW packages will be installed:&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;  dns-root-data dnsmasq dnsmasq-base libmnl0 libnetfilter-conntrack3&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;0 upgraded, 5 newly installed, 0 to remove and 0 not upgraded.&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Inst libmnl0 (1.0.3-5 Raspbian:stable [armhf])&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Inst libnetfilter-conntrack3 (1.0.4-1 Raspbian:stable [armhf])&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Inst dns-root-data (2014060201+2 Raspbian:stable [all])&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Inst dnsmasq-base (2.72-3+deb8u1 Raspbian:stable [armhf])&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Inst dnsmasq (2.72-3+deb8u1 Raspbian:stable [all])&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Conf libmnl0 (1.0.3-5 Raspbian:stable [armhf])&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Conf libnetfilter-conntrack3 (1.0.4-1 Raspbian:stable [armhf])&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Conf dns-root-data (2014060201+2 Raspbian:stable [all])&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Conf dnsmasq-base (2.72-3+deb8u1 Raspbian:stable [armhf])&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Conf dnsmasq (2.72-3+deb8u1 Raspbian:stable [all])&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]}&lt;/span&gt;
The following extra packages will be installed:
  dns-root-data dnsmasq-base libmnl0 libnetfilter-conntrack3
The following NEW packages will be installed:
  dns-root-data dnsmasq dnsmasq-base libmnl0 libnetfilter-conntrack3
0 upgraded, 5 newly installed, 0 to remove and 0 not upgraded.

TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;dnsmasq.conf] &lt;span class=&quot;k&quot;&gt;************************************************************&lt;/span&gt;
changed: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.0.11] &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;changed&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; before
+++ after: dynamically generated
@@ &lt;span class=&quot;nt&quot;&gt;-0&lt;/span&gt;,0 +1,2 @@
+interface&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wlan0
+dhcp-range&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;10.0.0.2,10.0.0.5,255.255.255.0,12h


TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;hostapd.conf] &lt;span class=&quot;k&quot;&gt;************************************************************&lt;/span&gt;
changed: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.0.11] &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;changed&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; before
+++ after: dynamically generated
@@ &lt;span class=&quot;nt&quot;&gt;-0&lt;/span&gt;,0 +1,11 @@
+interface&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wlan0
+hw_mode&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;g
+channel&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;10
+auth_algs&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
+macaddr_acl&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0
+wpa&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2
+wpa_key_mgmt&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;WPA-PSK
+wpa_pairwise&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;CCMP
+rsn_pairwise&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;CCMP
+wpa_passphrase&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1234567891011
+ssid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;RASPBERRY


TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;hostapd] &lt;span class=&quot;k&quot;&gt;*****************************************************************&lt;/span&gt;
changed: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.0.11] &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;changed&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; before: /etc/default/hostapd
+++ after: dynamically generated
@@ &lt;span class=&quot;nt&quot;&gt;-7&lt;/span&gt;,12 +7,12 @@
 &lt;span class=&quot;c&quot;&gt;# file and hostapd will be started during system boot. An example configuration&lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;# file can be found at /usr/share/doc/hostapd/examples/hostapd.conf.gz&lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
-#DAEMON_CONF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
+DAEMON_CONF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/etc/hostapd/hostapd.conf&quot;&lt;/span&gt;

 &lt;span class=&quot;c&quot;&gt;# Additional daemon options to be appended to hostapd command:-&lt;/span&gt;
-# 	&lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;   show more debug messages &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-dd&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;even more&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
-# 	&lt;span class=&quot;nt&quot;&gt;-K&lt;/span&gt;   include key data &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;debug messages
-# 	&lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt;   include timestamps &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;some debug messages
+#         &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;   show more debug messages &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-dd&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;even more&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
+#         &lt;span class=&quot;nt&quot;&gt;-K&lt;/span&gt;   include key data &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;debug messages
+#         &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt;   include timestamps &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;some debug messages
 &lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;# Note that -B (daemon mode) and -P (pidfile) options are automatically&lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;# configured by the init.d script and must not be added to DAEMON_OPTS.&lt;/span&gt;


TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;rc.local] &lt;span class=&quot;k&quot;&gt;****************************************************************&lt;/span&gt;
changed: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.0.11] &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;changed&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; before: /etc/rc.local
+++ after: dynamically generated
@@ &lt;span class=&quot;nt&quot;&gt;-17&lt;/span&gt;,4 +17,12 @@
   &lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;My IP address is %s&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_IP&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

+ifconfig wlan0 down
+ifconfig wlan0 10.0.0.1 netmask 255.255.255.0 up
+#ifconfig wlan0 inet6 add fc00::7262:7069:0003/7
+iwconfig wlan0 power off
+
+service dnsmasq restart
+service hostapd restart
+
 &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0


TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;dnsmasq service] &lt;span class=&quot;k&quot;&gt;*********************************************************&lt;/span&gt;
changed: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.0.11] &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;changed&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;hostapd service] &lt;span class=&quot;k&quot;&gt;*********************************************************&lt;/span&gt;
changed: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.0.11] &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;changed&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;msg&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;service state changed&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

PLAY RECAP &lt;span class=&quot;k&quot;&gt;*********************************************************************&lt;/span&gt;
192.168.0.11               : &lt;span class=&quot;nv&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;10   &lt;span class=&quot;nv&quot;&gt;changed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8    &lt;span class=&quot;nv&quot;&gt;unreachable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0    &lt;span class=&quot;nv&quot;&gt;failed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;
&lt;em&gt;Et voila !!!&lt;/em&gt; If you reboot your raspberrypi, you should find a new Wifi Hotspot called &lt;strong&gt;RASPBERRY&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I’ve created this Ansible playbook very quickly. The Ansible integration with a RaspberryPi is very easy because you just need a SSH connection to connect with. I think, I will continue to use Ansible with some of my RaspberryPi devices.&lt;/p&gt;

&lt;h3 id=&quot;useful-links&quot;&gt;Useful links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ansible.com/&quot;&gt;Ansible&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://galaxy.ansible.com/&quot;&gt;Galaxy Ansible&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="en" /><category term="RaspberryPi" /><category term="Ansible" /><category term="Wifi" /><category term="HOWTO" /><category term="Hotspot" /><summary type="html">This September, RaspberryPi foundation has sold ten (10) Millions of unit. This small computer is amazing, you can setup very quickly several cool IoT projects. Since 2012, I bought all versions (B 256Mo, B 512Mo, B+, 2B, 3B) of RaspberryPi. I am a big fan of this product and you can find into this blog some projects I’ve made on top of this little computer. RaspberryPi version 3 comes with a wifi builtin interface, and this wifi interface can be configured as a Wifi Hotspot. I use it every day at home or at office. Today, I will show you how to configure a Wifi Hotspot with Ansible.</summary></entry><entry><title type="html">JBoss EAP 7 connected to WebsphereMQ running on Docker</title><link href="http://0.0.0.0:4000/blog/2016/08/03/WebsphereMQ-JBoss-EAP-7-Docker.html" rel="alternate" type="text/html" title="JBoss EAP 7 connected to WebsphereMQ running on Docker" /><published>2016-08-03T09:00:00-05:00</published><updated>2016-08-03T09:00:00-05:00</updated><id>http://0.0.0.0:4000/blog/2016/08/03/WebsphereMQ-JBoss-EAP-7-Docker</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2016/08/03/WebsphereMQ-JBoss-EAP-7-Docker.html">&lt;p&gt;Last year for a previous customer I wrote an article/post about &lt;a href=&quot;/blog/2015/03/26/websphere-mq-jboss-eap-integration-english-version.html&quot;&gt;WebsphereMQ Best Practice with JBoss EAP 6&lt;/a&gt;. Today we will make almost the same stuff but with JBoss EAP 7, WebsphereMQ Sample IVT application and running on Docker. I assume you know basic command about Docker.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Howto run JBoss EAP 7 connected to WebsphereMQ both running on Docker&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;For this lab, you need the following software :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;package of JBoss EAP 7 &lt;a href=&quot;http://www.jboss.org/products/eap/download/&quot;&gt;http://www.jboss.org/products/eap/download/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;installed Docker for Linux, for Mac or Window &lt;em&gt;&amp;gt;= 1.12&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;warn&quot;&gt;
Warning, it is trial / demo only, a production deployment requires the purchase of a subscription for JBoss and a license for IBM
&lt;/div&gt;

&lt;h2 id=&quot;clone-git-project&quot;&gt;Clone git project&lt;/h2&gt;

&lt;p&gt;First of all, clone the git repo project.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone git@github.com:gautric/JBoss-WMQ.git
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;JBoss-WMQ&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;eap-7-image-creation&quot;&gt;EAP 7 image creation&lt;/h2&gt;

&lt;p&gt;We have to &lt;a href=&quot;https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?product=appplatform&amp;amp;downloadType=distributions&quot;&gt;download the JBoss EAP 7 binary&lt;/a&gt; and we will create the correct image of EAP 7.&lt;/p&gt;

&lt;p&gt;Copy binary file to JBoss-WMQ/jboss directory and go to this directory to build image.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;JBoss-WMQ
docker build &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; jboss-ivt jboss&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;the Dockerfile&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;### Set the base image to Fedora&lt;/span&gt;
FROM jboss/base-jdk:8

&lt;span class=&quot;c&quot;&gt;## docker build -t jboss-ivt jboss&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;## docker run -p 8080:8080 -p 9990:9990 -t jboss-ivt&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;### File Author / Maintainer&lt;/span&gt;
MAINTAINER &lt;span class=&quot;s2&quot;&gt;&quot;Greg Autric&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;gautric@redhat.com&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;### Set Environment&lt;/span&gt;
ENV JBOSS_HOME  /opt/jboss/jboss-eap-7.0
ENV MQM_HOME    /opt/mqm
ENV MQM_URL     http://public.dhe.ibm.com/ibmdl/export/pub/software/websphere/messaging/mqadv/mqadv_dev90_linux_x86-64.tar.gz

&lt;span class=&quot;c&quot;&gt;### Install EAP 7.0.0&lt;/span&gt;
COPY jboss-eap-7.0.0.zip /opt
RUN unzip /opt/jboss-eap-7.0.0.zip  1&amp;gt; /dev/null &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Install JBoss instance&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;## Change user to install some&lt;/span&gt;
USER root
RUN &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /tmp &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; yum &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; wget &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; wget &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;MQM_URL&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-zxvf&lt;/span&gt; ./&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.tar.gz  1&amp;gt; /dev/null &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;MQServer &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./mqlicense.sh &lt;span class=&quot;nt&quot;&gt;-text_only&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-accept&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rpm &lt;span class=&quot;nt&quot;&gt;-ivh&lt;/span&gt;  MQSeriesJava&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rpm MQSeriesRuntime&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rpm
RUN &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; /tmp/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;### Create Admin EAP user&lt;/span&gt;
USER jboss
RUN &lt;span class=&quot;nv&quot;&gt;$JBOSS_HOME&lt;/span&gt;/bin/add-user.sh admin admin123! &lt;span class=&quot;nt&quot;&gt;--silent&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;## Copy EAR and RAR&lt;/span&gt;
RUN &lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;MQM_HOME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/java/lib/jca/wmq.jmsra.ivt.ear &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JBOSS_HOME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/standalone/deployments
RUN &lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;MQM_HOME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/java/lib/jca/wmq.jmsra.rar     &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JBOSS_HOME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/standalone/deployments

&lt;span class=&quot;c&quot;&gt;### JBoss configuration files&lt;/span&gt;
COPY jboss-overlay.cli  /opt
COPY jboss-ejb3.xml     /opt
COPY jboss-web.xml      /opt

&lt;span class=&quot;c&quot;&gt;### Configure EAP&lt;/span&gt;
RUN &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;JAVA_OPTS=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;\$&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JAVA_OPTS -Djboss.bind.address=0.0.0.0 -Djboss.bind.address.management=0.0.0.0&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$JBOSS_HOME&lt;/span&gt;/bin/standalone.conf
RUN &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JBOSS_HOME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/bin/jboss-cli.sh &lt;span class=&quot;nt&quot;&gt;--file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/opt/jboss-overlay.cli
RUN &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JBOSS_HOME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/standalone/configuration/standalone_xml_history/current
RUN &lt;span class=&quot;nb&quot;&gt;chown&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; jboss:jboss &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JBOSS_HOME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;### Open Ports&lt;/span&gt;
EXPOSE 8080 9990

&lt;span class=&quot;c&quot;&gt;### Start EAP&lt;/span&gt;
CMD  &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JBOSS_HOME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/bin/standalone.sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; standalone-full.xml&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;information-about-this-image&quot;&gt;Information about this image&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Admin User
    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;admin&lt;/em&gt; user is created&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Application and RAR
    &lt;ul&gt;
      &lt;li&gt;Demo application and WMQ Ressource Adapter come from &lt;a href=&quot;http://public.dhe.ibm.com/ibmdl/export/pub/software/websphere/messaging/mqadv/mqadv_dev90_linux_x86-64.tar.gz&quot;&gt;official WMQ tgz&lt;/a&gt;.&lt;/li&gt;
      &lt;li&gt;We download it and install Java rpm package only and copy &lt;em&gt;rar&lt;/em&gt; and &lt;em&gt;ear&lt;/em&gt; to correct JBoss deployment directory&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;JBoss CLI
    &lt;ul&gt;
      &lt;li&gt;The CLI script is composed of two specific part :
        &lt;ul&gt;
          &lt;li&gt;Resource Adapter configuration
            &lt;ul&gt;
              &lt;li&gt;some system-property for configure RAR (user/pass/channel/queueManager, etc…)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Deployment overlay is used to adapt/provide correct configuration from JBoss to application
            &lt;ul&gt;
              &lt;li&gt;jboss-web.xml to adapt &lt;strong&gt;war&lt;/strong&gt; configuration&lt;/li&gt;
              &lt;li&gt;jboss-ejb3.xml for providing &lt;strong&gt;ejb&lt;/strong&gt; configuration&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;It is running with embed-server mode (offline)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;the CLI file&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;embed-server &lt;span class=&quot;nt&quot;&gt;--server-config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;standalone-full.xml

deployment-overlay add &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;jboss-ejb-overlay &lt;span class=&quot;nt&quot;&gt;--content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/WMQ_IVT_MDB.jar/META-INF/jboss-ejb3.xml&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/opt/jboss-ejb3.xml &lt;span class=&quot;nt&quot;&gt;--deployments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.ivt.ear &lt;span class=&quot;nt&quot;&gt;--redeploy-affected&lt;/span&gt;
deployment-overlay add &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;jboss-web-overlay &lt;span class=&quot;nt&quot;&gt;--content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/WMQ_IVT.war/WEB-INF/jboss-web.xml&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/opt/jboss-web.xml &lt;span class=&quot;nt&quot;&gt;--deployments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.ivt.ear &lt;span class=&quot;nt&quot;&gt;--redeploy-affected&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Remove unused stuff&lt;/span&gt;
/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;datasources:remove
/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;webservices:remove
/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;jpa:remove
/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;infinispan:remove

/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ejb3:write-attribute&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;default-resource-adapter-name, &lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ejb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.resource-adapter-name&lt;/span&gt;:wmq.jmsra.rar&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;resource-adapters/resource-adapter&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.rar:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;archive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.rar,transaction-support&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;LocalTransaction,statistics-enabled&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;resource-adapters/resource-adapter&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.rar/connection-definitions&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JMS2CF:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;class-name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;com.ibm.mq.connector.outbound.ManagedConnectionFactoryImpl,jndi-name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JMS2CF, use-java-context&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;resource-adapters/resource-adapter&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.rar/connection-definitions&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JMS2CF/config-properties&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;hostName:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;websphere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.hostName&lt;/span&gt;:localhost&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;resource-adapters/resource-adapter&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.rar/connection-definitions&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JMS2CF/config-properties&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;password:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;websphere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.password&lt;/span&gt;:mqm&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;resource-adapters/resource-adapter&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.rar/connection-definitions&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JMS2CF/config-properties&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;queueManager:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;websphere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.queueManager&lt;/span&gt;:QUEUE.MANAGER&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;resource-adapters/resource-adapter&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.rar/connection-definitions&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JMS2CF/config-properties&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;port:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;websphere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.port&lt;/span&gt;:1414&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;resource-adapters/resource-adapter&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.rar/connection-definitions&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JMS2CF/config-properties&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;channel:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;websphere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.channel&lt;/span&gt;:SYSTEM.AUTO.SVRCONN&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;resource-adapters/resource-adapter&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.rar/connection-definitions&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JMS2CF/config-properties&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;transportType:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;websphere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.transportType&lt;/span&gt;:CLIENT&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;resource-adapters/resource-adapter&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.rar/connection-definitions&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JMS2CF/config-properties&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;username:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;websphere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.username&lt;/span&gt;:mqm&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;resource-adapters/resource-adapter&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.rar/connection-definitions&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;IVTCF:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;class-name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;com.ibm.mq.connector.outbound.ManagedConnectionFactoryImpl,jndi-name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;jms/ivt/IVTCF, use-java-context&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;resource-adapters/resource-adapter&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.rar/connection-definitions&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;IVTCF/config-properties&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;hostName:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;websphere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.hostName&lt;/span&gt;:localhost&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;resource-adapters/resource-adapter&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.rar/connection-definitions&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;IVTCF/config-properties&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;password:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;websphere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.password&lt;/span&gt;:mqm&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;resource-adapters/resource-adapter&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.rar/connection-definitions&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;IVTCF/config-properties&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;queueManager:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;websphere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.queueManager&lt;/span&gt;:QUEUE.MANAGER&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;resource-adapters/resource-adapter&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.rar/connection-definitions&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;IVTCF/config-properties&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;port:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;websphere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.port&lt;/span&gt;:1414&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;resource-adapters/resource-adapter&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.rar/connection-definitions&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;IVTCF/config-properties&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;channel:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;websphere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.channel&lt;/span&gt;:SYSTEM.AUTO.SVRCONN&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;resource-adapters/resource-adapter&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.rar/connection-definitions&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;IVTCF/config-properties&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;transportType:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;websphere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.transportType&lt;/span&gt;:CLIENT&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;resource-adapters/resource-adapter&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.rar/connection-definitions&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;IVTCF/config-properties&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;username:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;websphere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.username&lt;/span&gt;:mqm&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;resource-adapters/resource-adapter&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.rar/admin-objects&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;QueuePool:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;class-name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;com.ibm.mq.connector.outbound.MQQueueProxy,jndi-name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;jms/ivt/IVTQueue,use-java-context&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;,enabled&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;resource-adapters/resource-adapter&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.rar/admin-objects&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;QueuePool/config-properties&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;baseQueueName:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;websphere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.queueName&lt;/span&gt;:Q_QUEUE&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;resource-adapters/resource-adapter&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.rar/admin-objects&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;QueuePool/config-properties&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;baseQueueManagerName:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;websphere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.queueManager&lt;/span&gt;:QUEUE.MANAGER&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Websphere MQ Host and Port&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#/system-property=websphere.hostName:add(value=wmq-ivt)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#/system-property=websphere.port:add(value=1414)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Websphere MQ configuration&lt;/span&gt;
/system-property&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;websphere.transportType:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;CLIENT&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/system-property&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;websphere.username:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;alice&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/system-property&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;websphere.password:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;passw0rd&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/system-property&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;websphere.channel:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;PASSWORD.SVRCONN&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/system-property&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;websphere.queueManager:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;QM1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/system-property&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;websphere.queueName:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Q_QUEUE&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/system-property&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;websphere.resource.adapter:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.rar&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/system-property&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ejb.resource-adapter-name:add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq.jmsra.rar&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

reload &lt;span class=&quot;nt&quot;&gt;--admin-only&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;wmq-image-creation&quot;&gt;WMQ image creation&lt;/h2&gt;

&lt;p&gt;Now we create the WMQ Docker image, we will re-use a public image to build our own version with custom stuff.
Go back to our first git repo to build our own image&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;JBoss-WMQ
docker build &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; wmq-ivt wmq&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;the Dockerfile&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;FROM ibmcom/mq
RUN useradd alice &lt;span class=&quot;nt&quot;&gt;-G&lt;/span&gt; mqm &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;alice:passw0rd | chpasswd
COPY config.mqsc /etc/mqm/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We use a small configuration for WMQ, &lt;strong&gt;alice&lt;/strong&gt; account can connect to wmq and we create a simple WMQ Queue too.&lt;/p&gt;

&lt;p&gt;the configuration file&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;DEFINE CHANNEL&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;PASSWORD.SVRCONN&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; CHLTYPE&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SVRCONN&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
SET CHLAUTH&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;PASSWORD.SVRCONN&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; TYPE&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;BLOCKUSER&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; USERLIST&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nobody'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; DESCR&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Allow privileged users on this channel'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
SET CHLAUTH&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'*'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; TYPE&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ADDRESSMAP&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ADDRESS&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'*'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; USERSRC&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;NOACCESS&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; DESCR&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'BackStop rule'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
SET CHLAUTH&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;PASSWORD.SVRCONN&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; TYPE&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ADDRESSMAP&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ADDRESS&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'*'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; USERSRC&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;CHANNEL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; CHCKCLNT&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;REQUIRED&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
ALTER AUTHINFO&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SYSTEM.DEFAULT.AUTHINFO.IDPWOS&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; AUTHTYPE&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;IDPWOS&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ADOPTCTX&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;YES&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
DEFINE QL&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Q_QUEUE&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
REFRESH SECURITY TYPE&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;CONNAUTH&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;docker-compose-to-run-demo&quot;&gt;Docker compose to run demo&lt;/h2&gt;

&lt;p&gt;At the end, we use docker compose to run both parts (JBoss and WMQ). We setup some environment variable for more flexible configuration (websphere.hostName and websphere.port for exemple).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;2'&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;jboss-ivt&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;jboss-ivt&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;jboss&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
     &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;8080:8080&quot;&lt;/span&gt;
     &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;9990:9990&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;JAVA_OPTS&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-Dwebsphere.hostName=wmq-ivt&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-Dwebsphere.port=1414&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wmq-ivt&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wmq-ivt&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;wmq-ivt&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wmq-ivt&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wmq&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;LICENSE&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;accept&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;MQ_QMGR_NAME&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;QM1&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
     &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1414:1414&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;run-it-and-check-it&quot;&gt;Run it and check it&lt;/h3&gt;

&lt;p&gt;Use docker-compose up to run both &lt;strong&gt;WMQ&lt;/strong&gt; and &lt;strong&gt;JBoss&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mbp:~/Source/git/JBoss-WMQ]&lt;span class=&quot;nv&quot;&gt;$&amp;gt;&lt;/span&gt; docker-compose up&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;and go to &lt;a href=&quot;http://localhost:8080/WMQ_IVT&quot;&gt;IVT URL http://localhost:8080/WMQ_IVT/IVT&lt;/a&gt; for the web result.&lt;/p&gt;

&lt;h3 id=&quot;web-result&quot;&gt;web result&lt;/h3&gt;

&lt;h4 id=&quot;the-application-page&quot;&gt;The Application page&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/img/jboss-wmq-1.png&quot; style=&quot;max-width:75%;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;the-result-page&quot;&gt;The Result page&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/img/jboss-wmq-2.png&quot; style=&quot;max-width:75%;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;the-jms-inspection-view-message-contents-page&quot;&gt;The JMS inspection (View Message Contents) page&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/img/jboss-wmq-3.png&quot; style=&quot;max-width:75%;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;and-output-log-result&quot;&gt;and output log result&lt;/h3&gt;

&lt;p&gt;You should get an output like this&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mbp:~/Source/git/JBoss-WMQ]&lt;span class=&quot;nv&quot;&gt;$&amp;gt;&lt;/span&gt; docker-compose up
Starting jbosswmq_wmq-ivt_1
Starting jbosswmq_jboss-ivt_1
Attaching to jbosswmq_wmq-ivt_1, jbosswmq_jboss-ivt_1
wmq-ivt_1    | &lt;span class=&quot;nt&quot;&gt;----------------------------------------&lt;/span&gt;
wmq-ivt_1    | Name:        IBM MQ
wmq-ivt_1    | Version:     9.0.0.0
wmq-ivt_1    | Level:       p900-L160520.DE
wmq-ivt_1    | BuildType:   IKAP - &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Production&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
wmq-ivt_1    | Platform:    IBM MQ &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Linux &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x86-64 platform&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
wmq-ivt_1    | Mode:        64-bit
wmq-ivt_1    | O/S:         Linux 4.4.15-moby
wmq-ivt_1    | InstName:    Installation1
wmq-ivt_1    | InstDesc:    
wmq-ivt_1    | Primary:     Yes
wmq-ivt_1    | InstPath:    /opt/mqm
wmq-ivt_1    | DataPath:    /var/mqm
wmq-ivt_1    | MaxCmdLevel: 900
wmq-ivt_1    | LicenseType: Developer
wmq-ivt_1    | &lt;span class=&quot;nt&quot;&gt;----------------------------------------&lt;/span&gt;
wmq-ivt_1    | IBM MQ queue manager &lt;span class=&quot;s1&quot;&gt;'QM1'&lt;/span&gt; starting.
wmq-ivt_1    | The queue manager is associated with installation &lt;span class=&quot;s1&quot;&gt;'Installation1'&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
wmq-ivt_1    | 5 log records accessed on queue manager &lt;span class=&quot;s1&quot;&gt;'QM1'&lt;/span&gt; during the log replay phase.
wmq-ivt_1    | Log replay &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;queue manager &lt;span class=&quot;s1&quot;&gt;'QM1'&lt;/span&gt; complete.
wmq-ivt_1    | Transaction manager state recovered &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;queue manager &lt;span class=&quot;s1&quot;&gt;'QM1'&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
wmq-ivt_1    | IBM MQ queue manager &lt;span class=&quot;s1&quot;&gt;'QM1'&lt;/span&gt; started using V9.0.0.0.
wmq-ivt_1    | &lt;span class=&quot;nt&quot;&gt;----------------------------------------&lt;/span&gt;
wmq-ivt_1    | QMNAME&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;QM1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                                               STATUS&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Running&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
jboss-ivt_1  | JAVA_OPTS already &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;environment&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; overriding default settings with values: &lt;span class=&quot;nt&quot;&gt;-Dwebsphere&lt;/span&gt;.hostName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq-ivt &lt;span class=&quot;nt&quot;&gt;-Dwebsphere&lt;/span&gt;.port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1414
jboss-ivt_1  | &lt;span class=&quot;o&quot;&gt;=========================================================================&lt;/span&gt;
jboss-ivt_1  |
jboss-ivt_1  |   JBoss Bootstrap Environment
jboss-ivt_1  |
jboss-ivt_1  |   JBOSS_HOME: /opt/jboss/jboss-eap-7.0
jboss-ivt_1  |
jboss-ivt_1  |   JAVA: /usr/lib/jvm/java/bin/java
jboss-ivt_1  |
jboss-ivt_1  |   JAVA_OPTS:  &lt;span class=&quot;nt&quot;&gt;-server&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-verbose&lt;/span&gt;:gc &lt;span class=&quot;nt&quot;&gt;-Xloggc&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;/opt/jboss/jboss-eap-7.0/standalone/log/gc.log&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-XX&lt;/span&gt;:+PrintGCDetails &lt;span class=&quot;nt&quot;&gt;-XX&lt;/span&gt;:+PrintGCDateStamps &lt;span class=&quot;nt&quot;&gt;-XX&lt;/span&gt;:+UseGCLogFileRotation &lt;span class=&quot;nt&quot;&gt;-XX&lt;/span&gt;:NumberOfGCLogFiles&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;5 &lt;span class=&quot;nt&quot;&gt;-XX&lt;/span&gt;:GCLogFileSize&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3M &lt;span class=&quot;nt&quot;&gt;-XX&lt;/span&gt;:-TraceClassUnloading &lt;span class=&quot;nt&quot;&gt;-Dwebsphere&lt;/span&gt;.hostName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wmq-ivt &lt;span class=&quot;nt&quot;&gt;-Dwebsphere&lt;/span&gt;.port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1414 &lt;span class=&quot;nt&quot;&gt;-Djboss&lt;/span&gt;.bind.address&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.0.0.0 &lt;span class=&quot;nt&quot;&gt;-Djboss&lt;/span&gt;.bind.address.management&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.0.0.0
jboss-ivt_1  |
jboss-ivt_1  | &lt;span class=&quot;o&quot;&gt;=========================================================================&lt;/span&gt;
jboss-ivt_1  |
jboss-ivt_1  | 12:44:44,163 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.modules] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JBoss Modules version 1.5.1.Final-redhat-1
jboss-ivt_1  | 12:44:44,405 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.msc] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JBoss MSC version 1.2.6.Final-redhat-1
jboss-ivt_1  | 12:44:44,494 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYSRV0049: JBoss EAP 7.0.0.GA &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;WildFly Core 2.1.2.Final-redhat-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; starting
jboss-ivt_1  | 12:44:46,457 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.server] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Controller Boot Thread&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYSRV0039: Creating http management service using socket-binding &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;management-http&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
jboss-ivt_1  | 12:44:46,487 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.xnio] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; XNIO version 3.3.6.Final-redhat-1
jboss-ivt_1  | 12:44:46,496 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.xnio.nio] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; XNIO NIO Implementation Version 3.3.6.Final-redhat-1
jboss-ivt_1  | 12:44:46,576 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.remoting] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JBoss Remoting version 4.0.18.Final-redhat-1
jboss-ivt_1  | 12:44:46,638 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.wildfly.extension.io] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; 35&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYIO001: Worker &lt;span class=&quot;s1&quot;&gt;'default'&lt;/span&gt; has auto-configured to 4 core threads with 32 task threads based on your 2 available processors
jboss-ivt_1  | 12:44:46,691 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.jsf] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; 41&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYJSF0007: Activated the following JSF Implementations: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;main]
jboss-ivt_1  | 12:44:46,712 WARN  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.txn] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; 53&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYTX0013: Node identifier property is &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;to the default value. Please make sure it is unique.
jboss-ivt_1  | 12:44:46,914 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.wildfly.iiop.openjdk] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; 36&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYIIOP0001: Activating IIOP Subsystem
jboss-ivt_1  | 12:44:46,934 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.security] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; 52&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYSEC0002: Activating Security Subsystem
jboss-ivt_1  | 12:44:46,980 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.naming] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; 45&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYNAM0001: Activating Naming Subsystem
jboss-ivt_1  | 12:44:46,989 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.connector] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYJCA0009: Starting JCA Subsystem &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;WildFly/IronJacamar 1.3.3.Final-redhat-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
jboss-ivt_1  | 12:44:47,019 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.wildfly.extension.undertow] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; 54&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYUT0003: Undertow 1.3.21.Final-redhat-1 starting
jboss-ivt_1  | 12:44:47,023 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.wildfly.extension.undertow] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYUT0003: Undertow 1.3.21.Final-redhat-1 starting
jboss-ivt_1  | 12:44:47,088 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.security] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYSEC0001: Current PicketBox &lt;span class=&quot;nv&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4.9.6.Final-redhat-1
jboss-ivt_1  | 12:44:47,113 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.naming] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYNAM0003: Starting Naming Service
jboss-ivt_1  | 12:44:47,122 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.mail.extension] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYMAIL0001: Bound mail session &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;java:jboss/mail/Default]
jboss-ivt_1  | 12:44:47,303 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.ejb3] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYEJB0482: Strict pool mdb-strict-max-pool is using a max instance size of 8 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;per class&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, which is derived from the number of CPUs on this host.
jboss-ivt_1  | 12:44:47,310 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.ejb3] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYEJB0481: Strict pool slsb-strict-max-pool is using a max instance size of 32 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;per class&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, which is derived from thread worker pool sizing.
jboss-ivt_1  | 12:44:47,311 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.wildfly.extension.undertow] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; 54&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYUT0014: Creating file handler &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;path &lt;span class=&quot;s1&quot;&gt;'/opt/jboss/jboss-eap-7.0/welcome-content'&lt;/span&gt; with options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;directory-listing: &lt;span class=&quot;s1&quot;&gt;'false'&lt;/span&gt;, follow-symlink: &lt;span class=&quot;s1&quot;&gt;'false'&lt;/span&gt;, &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-sensitive&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'true'&lt;/span&gt;, safe-symlink-paths: &lt;span class=&quot;s1&quot;&gt;'[]'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
jboss-ivt_1  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 12:44:47,311 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.wildfly.extension.undertow] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; WFLYUT0012: Started server default-server.
jboss-ivt_1  | 12:44:47,316 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.wildfly.extension.undertow] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYUT0018: Host default-host starting
jboss-ivt_1  | 12:44:47,465 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.wildfly.extension.undertow] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYUT0006: Undertow HTTP listener default listening on &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0:0:0:0:0:0:0:0]:8080
jboss-ivt_1  | 12:44:47,647 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.wildfly.extension.messaging-activemq] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYMSGAMQ0075: AIO wasn t located on this platform, it will fall back to using pure Java NIO. Your platform is Linux, &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;LibAIO to &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;the AIO journal and achieve optimal performance.
jboss-ivt_1  | 12:44:47,698 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.server.deployment.scanner] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYDS0013: Started FileSystemDeploymentService &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;directory /opt/jboss/jboss-eap-7.0/standalone/deployments
jboss-ivt_1  | 12:44:47,724 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.server.deployment] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYSRV0027: Starting deployment of &lt;span class=&quot;s2&quot;&gt;&quot;wmq.jmsra.rar&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;runtime-name: &lt;span class=&quot;s2&quot;&gt;&quot;wmq.jmsra.rar&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
jboss-ivt_1  | 12:44:47,725 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.server.deployment] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYSRV0027: Starting deployment of &lt;span class=&quot;s2&quot;&gt;&quot;wmq.jmsra.ivt.ear&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;runtime-name: &lt;span class=&quot;s2&quot;&gt;&quot;wmq.jmsra.ivt.ear&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
jboss-ivt_1  | 12:44:47,826 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.apache.activemq.artemis.core.server] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; 56&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; AMQ221000: live Message Broker is starting with configuration Broker Configuration &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;clustered&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;,journalDirectory&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/opt/jboss/jboss-eap-7.0/standalone/data/activemq/journal,bindingsDirectory&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/opt/jboss/jboss-eap-7.0/standalone/data/activemq/bindings,largeMessagesDirectory&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/opt/jboss/jboss-eap-7.0/standalone/data/activemq/largemessages,pagingDirectory&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/opt/jboss/jboss-eap-7.0/standalone/data/activemq/paging&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
jboss-ivt_1  | 12:44:47,827 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.wildfly.iiop.openjdk] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYIIOP0009: CORBA ORB Service started
jboss-ivt_1  | 12:44:47,858 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.apache.activemq.artemis.core.server] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; 56&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; AMQ221013: Using NIO Journal
jboss-ivt_1  | 12:44:48,023 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.server.deployment] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYSRV0207: Starting subdeployment &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;runtime-name: &lt;span class=&quot;s2&quot;&gt;&quot;WMQ_IVT_MDB.jar&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
jboss-ivt_1  | 12:44:48,023 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.server.deployment] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYSRV0207: Starting subdeployment &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;runtime-name: &lt;span class=&quot;s2&quot;&gt;&quot;WMQ_IVT.war&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
jboss-ivt_1  | 12:44:48,254 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.apache.activemq.artemis.core.server] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; 56&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; AMQ221043: Protocol module found: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;artemis-server]. Adding protocol support &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;: CORE
jboss-ivt_1  | 12:44:48,263 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.apache.activemq.artemis.core.server] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; 56&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; AMQ221043: Protocol module found: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;artemis-hornetq-protocol]. Adding protocol support &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;: HORNETQ
jboss-ivt_1  | 12:44:50,003 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.wildfly.extension.messaging-activemq] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYMSGAMQ0016: Registered HTTP upgrade &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;activemq-remoting protocol handled by http-acceptor acceptor
jboss-ivt_1  | 12:44:50,020 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.wildfly.extension.messaging-activemq] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYMSGAMQ0016: Registered HTTP upgrade &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;activemq-remoting protocol handled by http-acceptor-throughput acceptor
jboss-ivt_1  | 12:44:50,021 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.wildfly.extension.messaging-activemq] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYMSGAMQ0016: Registered HTTP upgrade &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;activemq-remoting protocol handled by http-acceptor acceptor
jboss-ivt_1  | 12:44:50,017 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.wildfly.extension.messaging-activemq] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYMSGAMQ0016: Registered HTTP upgrade &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;activemq-remoting protocol handled by http-acceptor-throughput acceptor
jboss-ivt_1  | 12:44:50,243 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.apache.activemq.artemis.core.server] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; 56&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; AMQ221007: Server is now live
jboss-ivt_1  | 12:44:50,243 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.apache.activemq.artemis.core.server] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; 56&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; AMQ221001: Apache ActiveMQ Artemis Message Broker version 1.1.0.SP16-redhat-1 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;nodeID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;f4375749-5972-11e6-a7ea-75a84c3c44bb]
jboss-ivt_1  | 12:44:50,278 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.wildfly.extension.messaging-activemq] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; 56&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYMSGAMQ0002: Bound messaging object to jndi name java:/ConnectionFactory
jboss-ivt_1  | 12:44:50,296 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.apache.activemq.artemis.core.server] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; 58&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; AMQ221003: trying to deploy queue jms.queue.ExpiryQueue
jboss-ivt_1  | 12:44:50,333 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.apache.activemq.artemis.core.server] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; 59&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; AMQ221003: trying to deploy queue jms.queue.DLQ
jboss-ivt_1  | 12:44:50,337 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.wildfly.extension.messaging-activemq] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; 57&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYMSGAMQ0002: Bound messaging object to jndi name java:jboss/exported/jms/RemoteConnectionFactory
jboss-ivt_1  | 12:44:50,472 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.connector.deployment] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYJCA0007: Registered connection factory java:/JmsXA
jboss-ivt_1  | 12:44:50,615 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.apache.activemq.artemis.ra] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Resource adaptor started
jboss-ivt_1  | 12:44:50,616 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.connector.services.resourceadapters.ResourceAdapterActivatorService&lt;span class=&quot;nv&quot;&gt;$ResourceAdapterActivator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; IJ020002: Deployed: file://RaActivatoractivemq-ra
jboss-ivt_1  | 12:44:50,618 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.connector.deployment] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYJCA0002: Bound JCA ConnectionFactory &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;java:/JmsXA]
jboss-ivt_1  | 12:44:50,618 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.wildfly.extension.messaging-activemq] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYMSGAMQ0002: Bound messaging object to jndi name java:jboss/DefaultJMSConnectionFactory
jboss-ivt_1  | 12:44:50,898 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.connector.deployers.RADeployer] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; IJ020001: Required license terms &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;file:/opt/jboss/jboss-eap-7.0/standalone/tmp/vfs/temp/tempe03f18a52d83d131/content-572e26c965963bc3/contents/
jboss-ivt_1  | 12:44:51,110 WARN  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.connector.deployers.RADeployer] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; IJ020017: Invalid archive: file:/opt/jboss/jboss-eap-7.0/standalone/tmp/vfs/temp/tempe03f18a52d83d131/content-572e26c965963bc3/contents/
jboss-ivt_1  | 12:44:51,116 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.connector.deployers.RaXmlDeployer] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; IJ020001: Required license terms &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;file:/opt/jboss/jboss-eap-7.0/standalone/tmp/vfs/temp/tempe03f18a52d83d131/content-572e26c965963bc3/contents/
jboss-ivt_1  | 12:44:51,135 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.connector.deployment] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYJCA0007: Registered connection factory java:/JMS2CF
jboss-ivt_1  | 12:44:51,136 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.connector.deployment] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYJCA0007: Registered connection factory java:/jms/ivt/IVTCF
jboss-ivt_1  | 12:44:51,207 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.connector.deployment] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYJCA0006: Registered admin object at java:/jms/ivt/IVTQueue
jboss-ivt_1  | 12:44:51,213 WARN  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.connector.deployers.RaXmlDeployer] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; IJ020017: Invalid archive: file:/opt/jboss/jboss-eap-7.0/standalone/tmp/vfs/temp/tempe03f18a52d83d131/content-572e26c965963bc3/contents/
jboss-ivt_1  | 12:44:51,218 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.connector.deployers.RaXmlDeployer] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; IJ020002: Deployed: file:/opt/jboss/jboss-eap-7.0/standalone/tmp/vfs/temp/tempe03f18a52d83d131/content-572e26c965963bc3/contents/
jboss-ivt_1  | 12:44:51,221 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.connector.deployment] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYJCA0002: Bound JCA ConnectionFactory &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;java:/JMS2CF]
jboss-ivt_1  | 12:44:51,222 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.connector.deployment] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYJCA0002: Bound JCA AdminObject &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;java:/jms/ivt/IVTQueue]
jboss-ivt_1  | 12:44:51,222 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.connector.deployment] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYJCA0002: Bound JCA ConnectionFactory &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;java:/jms/ivt/IVTCF]
jboss-ivt_1  | 12:44:51,236 WARN  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.ejb3] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYEJB0006: ActivationConfigProperty DestinationLookup will be ignored since it is not allowed by resource adapter: wmq.jmsra.rar
jboss-ivt_1  | 12:44:51,237 WARN  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.ejb3] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYEJB0006: ActivationConfigProperty ConnectionFactoryLookup will be ignored since it is not allowed by resource adapter: wmq.jmsra.rar
jboss-ivt_1  | 12:44:51,335 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.ejb3] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYEJB0042: Started message driven bean &lt;span class=&quot;s1&quot;&gt;'WMQ_IVT_MDB'&lt;/span&gt; with &lt;span class=&quot;s1&quot;&gt;'wmq.jmsra.rar'&lt;/span&gt; resource adapter
jboss-ivt_1  | 12:44:51,365 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.hibernate.validator.internal.util.Version] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; 59&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; HV000001: Hibernate Validator 5.2.4.Final-redhat-1
jboss-ivt_1  | 12:44:51,501 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.wildfly.extension.undertow] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; 58&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYUT0021: Registered web context: /WMQ_IVT
jboss-ivt_1  | 12:44:52,084 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.server] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; 32&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYSRV0010: Deployed &lt;span class=&quot;s2&quot;&gt;&quot;wmq.jmsra.rar&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;runtime-name : &lt;span class=&quot;s2&quot;&gt;&quot;wmq.jmsra.rar&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
jboss-ivt_1  | 12:44:52,085 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.server] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; 32&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYSRV0010: Deployed &lt;span class=&quot;s2&quot;&gt;&quot;wmq.jmsra.ivt.ear&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;runtime-name : &lt;span class=&quot;s2&quot;&gt;&quot;wmq.jmsra.ivt.ear&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
jboss-ivt_1  | 12:44:52,240 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Controller Boot Thread&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYSRV0060: Http management interface listening on http://[0:0:0:0:0:0:0:0]:9990/management
jboss-ivt_1  | 12:44:52,245 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Controller Boot Thread&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYSRV0051: Admin console listening on http://[0:0:0:0:0:0:0:0]:9990
jboss-ivt_1  | 12:44:52,246 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Controller Boot Thread&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYSRV0025: JBoss EAP 7.0.0.GA &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;WildFly Core 2.1.2.Final-redhat-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; started &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;8403ms - Started 471 of 536 services &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;133 services are lazy, passive or on-demand&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;JBoss EAP 7&lt;/strong&gt; is very flexible. I used the first time the Deployment Overlay it is a very cool feature if you cannot modify the &lt;strong&gt;ear&lt;/strong&gt; or &lt;strong&gt;war&lt;/strong&gt; package. We also use the &lt;strong&gt;embed-server&lt;/strong&gt; to configure JBoss instance offline and during the docker build. I would like also thx &lt;em&gt;IBM Messaging team&lt;/em&gt; for &lt;a href=&quot;https://hub.docker.com/r/ibmcom/mq/&quot;&gt;WMQ Docker hub img&lt;/a&gt;, because this image was very useful to prove the correct JBoss and WMQ integration for this demo.&lt;/p&gt;

&lt;h3 id=&quot;useful-links&quot;&gt;Useful links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?product=appplatform&amp;amp;downloadType=distributions&quot;&gt;Download JBoss&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://wildscribe.github.io/Wildfly/10.0.0.Final/deployment-overlay/index.html&quot;&gt;Deployment overlay model reference&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://access.redhat.com/solutions/383393&quot;&gt;Deployment overlay tip&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.jboss.org/author/display/AS72/Deployment+Overlays&quot;&gt;Deployment overlay tutorial&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.akquinet.de/2013/06/08/deployment-overlays-a-new-feature-of-the-jboss-eap-6-1/&quot;&gt;Deployment overlay sample&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ibm-messaging/mq-docker&quot;&gt;WMQ Docker repo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://public.dhe.ibm.com/ibmdl/export/pub/software/websphere/messaging/mqadv/mqadv_dev90_linux_x86-64.tar.gz&quot;&gt;WMQ tgz&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ibm.com/developerworks/community/blogs/messaging/entry/getting_going_without_turning_off_mq_security?lang=en&quot;&gt;WMQ configuration&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/websphere/library/techarticles/1203_green/1203_green.html&quot;&gt;WMQ info&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://localhost:8080/WMQ_IVT&quot;&gt;Demo URL http://localhost:8080/WMQ_IVT/IVT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="en" /><category term="JBoss" /><category term="redhat" /><category term="EAP7" /><category term="WebsphereMQ" /><category term="Docker" /><summary type="html">Last year for a previous customer I wrote an article/post about WebsphereMQ Best Practice with JBoss EAP 6. Today we will make almost the same stuff but with JBoss EAP 7, WebsphereMQ Sample IVT application and running on Docker. I assume you know basic command about Docker.</summary></entry><entry><title type="html">JConsole &amp;amp; Java Mission Control with JBoss EAP 7</title><link href="http://0.0.0.0:4000/blog/2016/07/19/JConsole-JavaMissionControl-JBoss-EAP-7.html" rel="alternate" type="text/html" title="JConsole &amp; Java Mission Control with JBoss EAP 7" /><published>2016-07-19T09:00:00-05:00</published><updated>2016-07-19T09:00:00-05:00</updated><id>http://0.0.0.0:4000/blog/2016/07/19/JConsole-JavaMissionControl-JBoss-EAP-7</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2016/07/19/JConsole-JavaMissionControl-JBoss-EAP-7.html">&lt;p&gt;During Red Hat summit, &lt;a href=&quot;http://middlewareblog.redhat.com/2016/06/27/announcing-jboss-eap-7/#more-432&quot;&gt;Red Hat releases the new version of its JBoss Application Server&lt;/a&gt;. JBoss App Server provides a new JMX Remote Management protocol to connect with. A common JMX tool is &lt;a href=&quot;http://docs.oracle.com/javase/7/docs/technotes/guides/management/jconsole.html&quot;&gt;JConsole&lt;/a&gt; and we will see how to use it with remote mode. We also configure an other tool called &lt;a href=&quot;http://www.oracle.com/technetwork/java/javaseproducts/mission-control/java-mission-control-1998576.html&quot;&gt;Java Mission Control&lt;/a&gt; for a cooler JMX monitoring stuff.
Sorry my platform is a MacOS X, but I am sure your skill is enough to adapt into your environment.&lt;/p&gt;

&lt;h2 id=&quot;jconsole&quot;&gt;JConsole&lt;/h2&gt;

&lt;p&gt;JConsole is a graphical monitoring tool to monitor &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_virtual_machine&quot;&gt;Java Virtual Machine&lt;/a&gt; and Java applications both on a local or remote machine.
JConsole uses underlying features of Java Virtual Machine to provide information on performance and resource consumption of applications running on the Java platform using &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_Management_Extensions&quot;&gt;Java Management Extensions&lt;/a&gt; technology. JConsole comes as part of &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_Development_Kit&quot;&gt;Java Development Kit&lt;/a&gt; and the graphical console can be started using “jconsole” command. &lt;a href=&quot;https://en.wikipedia.org/wiki/JConsole&quot;&gt;from wikipedia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;JConsole is provided both with &lt;a href=&quot;http://openjdk.java.net/&quot;&gt;OpenJDK&lt;/a&gt; and &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/overview/index.html&quot;&gt;Oracle JDK&lt;/a&gt; virtual machine.&lt;/p&gt;

&lt;h3 id=&quot;jmx-connection&quot;&gt;JMX connection&lt;/h3&gt;

&lt;p&gt;JConsole can connect directly to local Java process (via PID) or, can also connect to remote application via a standard JMX protocol or a custom JMX protocol. Standard JMX protocol is not very flexible and should be not use directly, this protocol has got limitations about account management. &lt;strong&gt;JBoss EAP 7&lt;/strong&gt; provides more flexible protocol called &lt;strong&gt;remote+http&lt;/strong&gt;. JBoss uses &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-6.7&quot;&gt;HTTP Upgrade&lt;/a&gt; to change protocol from &lt;strong&gt;HTTP&lt;/strong&gt; to &lt;strong&gt;jboss-remoting&lt;/strong&gt; without changing TCP port at all.&lt;/p&gt;

&lt;p&gt;Here is a &lt;em&gt;tcpdump&lt;/em&gt; capture&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;GET / HTTP/1.1
Sec-JbossRemoting-Key: t/V5HWbok5e1KAYs22zDrQ&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
Upgrade: jboss-remoting
Host: localhost:8080
Connection: upgrade

HTTP/1.1 101 Switching Protocols
Connection: Upgrade
Upgrade: jboss-remoting
Sec-JbossRemoting-Accept: +F31ah8B270e5BrbWr6Ig90t+NM&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
Date: Tue, 19 Jul 2016 16:40:28 GMT

........localhost...3......endpoint....4.0.18.Final-redhat-1....
.&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.....&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;...R......localhost..JBOSS-LOCAL-USER...................
DIGEST-MD5....4.0.18.Final-redhat-1.....&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.....&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.................
DIGEST-MD5...k.realm&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ApplicationRealm&quot;&lt;/span&gt;,nonce&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2LD3fnFJ3Nbsjfj+k
XXXXXXXXXXXXXXXXXXXXXXX&quot;&lt;/span&gt;,charset&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;utf-8,algorithm&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;md5-sess.....ch
&lt;span class=&quot;nv&quot;&gt;arset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;utf-8,username&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;appli&quot;&lt;/span&gt;,realm&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ApplicationRealm&quot;&lt;/span&gt;,nonce&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2LD
3fnFJ3Nbsjfj+XXXXXXXXXXXXXXXXXXXXXXXX&quot;&lt;/span&gt;,nc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;00000001,cnonce&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bCz1B
XXXXXXXXXXXXXXXXX/fnQTL5S279++KbxG2&quot;&lt;/span&gt;,digest-uri&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;remoting/localh
ost&quot;&lt;/span&gt;,maxbuf&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;65536,response&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;e723bee2cffaddd9c1a3fa8925a106ad,qop&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
....&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;jconsole-from-jboss-eap&quot;&gt;JConsole from JBoss EAP&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;JBoss EAP 7&lt;/strong&gt; is shipped with a &lt;em&gt;JConsole&lt;/em&gt; wrapped script. This script injects into the JConsole classpath CLI lib and &lt;strong&gt;remote+http&lt;/strong&gt; protocol lib.
It is available into &lt;strong&gt;${JBOSS_HOME}/bin&lt;/strong&gt; directory.&lt;/p&gt;

&lt;h2 id=&quot;jconsole-connection-to-jboss-eap&quot;&gt;JConsole connection to JBoss EAP&lt;/h2&gt;

&lt;h3 id=&quot;with-managementrealm&quot;&gt;with ManagementRealm&lt;/h3&gt;

&lt;p&gt;Out of the box, JConsole could use &lt;strong&gt;remote+http&lt;/strong&gt; protocol for connecting to JBoss Management port &lt;strong&gt;9990&lt;/strong&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JBOSS_HOME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/bin/jconsole.sh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Configure correct JMX url (correct &lt;strong&gt;management&lt;/strong&gt; interface and &lt;strong&gt;management-http&lt;/strong&gt; port)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;service:jmx:remote+http://localhost:9990&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;and use &lt;em&gt;ManagementRealm&lt;/em&gt; account to connect with (don’t forget to use &lt;strong&gt;${JBOSS_HOME}/bin/add-user.sh&lt;/strong&gt; to configure account)&lt;/p&gt;

&lt;h3 id=&quot;with-applicationrealm&quot;&gt;with ApplicationRealm&lt;/h3&gt;

&lt;p&gt;You can use an account from &lt;em&gt;ApplicationRealm&lt;/em&gt; for connecting to &lt;strong&gt;JBoss EAP 7&lt;/strong&gt; server but you have to change port connection too.&lt;/p&gt;

&lt;p&gt;Change &lt;em&gt;standalone.xml&lt;/em&gt; with CLI command below&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/subsystem&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;jmx/remoting-connector&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;jmx:write-attribute&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;use-management-endpoint,value&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JBOSS_HOME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/bin/jconsole.sh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Configure correct JMX url (correct &lt;strong&gt;public&lt;/strong&gt; interface and &lt;strong&gt;http&lt;/strong&gt; port)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;service:jmx:remote+http://localhost:8080&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;and use &lt;em&gt;ApplicationRealm&lt;/em&gt; account to connect with (don’t forget to use &lt;strong&gt;${JBOSS_HOME}/bin/add-user.sh&lt;/strong&gt; to configure account)&lt;/p&gt;

&lt;div class=&quot;warn&quot;&gt;
Be careful, if you use this configuration you couldn't connect anymore via Management interface/port and ManagementRealm's account.
&lt;/div&gt;

&lt;h2 id=&quot;java-mission-control&quot;&gt;Java Mission Control&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Java Mission Control&lt;/strong&gt; can collect low level (CPU, I/O, R/W file, etc…) informations about &lt;strong&gt;JVM&lt;/strong&gt; and can record them (for offline diagnostic).
It can also collect &lt;strong&gt;JMX&lt;/strong&gt; information with JMX system.&lt;/p&gt;

&lt;p&gt;This tool comes with &lt;strong&gt;Oracle JDK&lt;/strong&gt; and is based on &lt;strong&gt;Eclipse&lt;/strong&gt; technology.&lt;/p&gt;

&lt;h3 id=&quot;configuration-jmc&quot;&gt;Configuration JMC&lt;/h3&gt;

&lt;p&gt;In order to use JMC with &lt;strong&gt;JBoss EAP 7&lt;/strong&gt;, we have to configure JMC classpath for providing correct &lt;strong&gt;remote+http&lt;/strong&gt; protocol lib.&lt;/p&gt;

&lt;p&gt;Edit &lt;strong&gt;jmc.ini&lt;/strong&gt; file&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Java&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Mission&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Control.app/Contents/MacOS/jmc.ini&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;and add line below at this end of file&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nt&quot;&gt;-Xbootclasspath&lt;/span&gt;/a:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JBOSS_HOME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/bin/client/jboss-client.jar&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;File should look like&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mbp:~]&lt;span class=&quot;nv&quot;&gt;$&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/lib/missioncontrol/Java&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Mission&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Control.app/Contents/MacOS/jmc.ini
&lt;span class=&quot;nt&quot;&gt;-startup&lt;/span&gt;
../../../plugins/org.eclipse.equinox.launcher_1.3.0.v20140415-2008.jar
&lt;span class=&quot;nt&quot;&gt;--launcher&lt;/span&gt;.library
../../../plugins/org.eclipse.equinox.launcher.cocoa.macosx.x86_64_1.1.200.v20141007-2033
&lt;span class=&quot;nt&quot;&gt;-ws&lt;/span&gt;
cocoa
&lt;span class=&quot;nt&quot;&gt;--launcher&lt;/span&gt;.appendVmargs
&lt;span class=&quot;nt&quot;&gt;-vm&lt;/span&gt;
../../../../../jre/bin/
&lt;span class=&quot;nt&quot;&gt;-vmargs&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-XX&lt;/span&gt;:+UseG1GC
&lt;span class=&quot;nt&quot;&gt;-XX&lt;/span&gt;:+UnlockCommercialFeatures
&lt;span class=&quot;nt&quot;&gt;-XX&lt;/span&gt;:+FlightRecorder
&lt;span class=&quot;nt&quot;&gt;-XX&lt;/span&gt;:FlightRecorderOptions&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;defaultrecording&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-Djava&lt;/span&gt;.net.preferIPv4Stack&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-XstartOnFirstThread&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-Dorg&lt;/span&gt;.eclipse.swt.internal.carbon.smallFonts
&lt;span class=&quot;nt&quot;&gt;-Xbootclasspath&lt;/span&gt;/a:/Users/gautric/Application/redhat/eap/jboss-eap-7.0/bin/client/jboss-client.jar&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;jmc-connection-to-jboss-eap&quot;&gt;JMC connection to JBoss EAP&lt;/h2&gt;

&lt;p&gt;After that you could start &lt;strong&gt;JMC&lt;/strong&gt; application and add a new connection :
&lt;img src=&quot;/img/jmc-1.png&quot; style=&quot;max-width:75%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Configure correctly JVM connection parameters&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;to configure custom url&lt;/li&gt;
  &lt;li&gt;to choice custom protocol &lt;em&gt;(check it first)&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;for account credential&lt;/li&gt;
  &lt;li&gt;to test connection&lt;/li&gt;
  &lt;li&gt;to save and connect&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/img/jmc-2.png&quot; style=&quot;max-width:75%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now you can now view live all informations about JVM and &lt;strong&gt;JBoss EAP 7&lt;/strong&gt; application&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jmc-3.png&quot; style=&quot;max-width:75%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can also check all JMX MBean.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jmc-4.png&quot; style=&quot;max-width:75%;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;JBoss EAP 7&lt;/strong&gt; simplifies remote JMX connection. With &lt;em&gt;port reduction&lt;/em&gt; and &lt;em&gt;HTTP upgrade&lt;/em&gt; features, &lt;strong&gt;JBoss EAP 7&lt;/strong&gt; monitoring fits perfectly containerization (aka Docker) context. Now both developers and admin system guys can monitor JMX or low level with minimal configuration into constraint environment.&lt;/p&gt;

&lt;p&gt;Please feel free to send me your feed back below.&lt;/p&gt;

&lt;h3 id=&quot;useful-link&quot;&gt;Useful link&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.jboss.org/author/display/WFLY10/JMX+subsystem+configuration&quot;&gt;JMX Wildlfy 10&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="en" /><category term="JBoss" /><category term="redhat" /><category term="EAP7" /><category term="jvm" /><category term="jmc" /><summary type="html">During Red Hat summit, Red Hat releases the new version of its JBoss Application Server. JBoss App Server provides a new JMX Remote Management protocol to connect with. A common JMX tool is JConsole and we will see how to use it with remote mode. We also configure an other tool called Java Mission Control for a cooler JMX monitoring stuff. Sorry my platform is a MacOS X, but I am sure your skill is enough to adapt into your environment.</summary></entry></feed>