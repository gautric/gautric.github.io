<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2024-01-15T14:35:03-06:00</updated><id>http://0.0.0.0:4000/feed.xml</id><title type="html">Greg I/Open</title><subtitle>Cloud Architecte, Greg Autric, Web, Cloud, IoT, Automation, Red Hat, OpenSource</subtitle><entry><title type="html">AWS SSM, Ansible et Raspberry Pi via SSH</title><link href="http://0.0.0.0:4000/blog/2024/01/15/AWS-SSM-and-RaspberryPi-SSH.html" rel="alternate" type="text/html" title="AWS SSM, Ansible et Raspberry Pi via SSH" /><published>2024-01-15T03:00:00-06:00</published><updated>2024-01-15T03:00:00-06:00</updated><id>http://0.0.0.0:4000/blog/2024/01/15/AWS-SSM-and-RaspberryPi-SSH</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2024/01/15/AWS-SSM-and-RaspberryPi-SSH.html">&lt;p&gt;Dans ce nouveau et premier post de 2024, d√©couvrez comment AWS Systems Manager (SSM) s‚Äôint√®gre de mani√®re utile avec le Raspberry Pi (test√© avec 3, zero et 5). Explorez les possibilit√©s de cette combinaison, id√©ale pour les projets d‚Äôinformatique personnelle d√©centralis√©e. Que vous soyez un passionn√© du Cloud, un amateur d‚ÄôIoT ou simplement curieux, cet article vous r√©serve des surprises ! 
Ce post sera particuli√®rement utile pour ceux qui cherchent √† acc√©der facilement √† leur Raspberry Pi sans avoir √† configurer le port forwarding sur leur box Internet, et ce, pour un co√ªt minime &lt;sup id=&quot;fnref:pricing&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:pricing&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. On utilisera la fonctionnalit√© Session Manager d‚ÄôAWS SSM. üçá&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Int√©gration de SSM dans sa flotte de RaspberryPi avec Ansible&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;aws-systems-manager-ssm&quot;&gt;AWS Systems Manager (SSM)&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/fr/systems-manager/&quot;&gt;AWS Systems Manager&lt;/a&gt; (SSM) se positionne comme un outil centralis√© de gestion d‚Äôinfrastructure, simplifiant la supervision et l‚Äôautomatisation des op√©rations pour les ressources AWS, notamment les instances EC2. Ses fonctionnalit√©s avanc√©es, telles que l‚Äôautomatisation des t√¢ches, la collecte de donn√©es op√©rationnelles en temps r√©el et la maintenance automatis√©e des correctifs, renforcent l‚Äôefficacit√© op√©rationnelle et la s√©curit√© dans le cloud. De mani√®re significative, SSM va au-del√† du cloud en permettant √©galement la gestion unifi√©e des instances on-premises, offrant ainsi une solution int√©gr√©e pour la gestion hybride des environnements, consolidant ainsi la surveillance, l‚Äôautomatisation et la conformit√© √† travers des infrastructures diversifi√©es.&lt;/p&gt;

&lt;h1 id=&quot;raspberry-pi-5&quot;&gt;Raspberry Pi 5&lt;/h1&gt;

&lt;p&gt;Le &lt;a href=&quot;https://www.raspberrypi.com/products/raspberry-pi-5/&quot;&gt;Raspberry Pi 5&lt;/a&gt; vient r√©volutionner la s√©rie embl√©matique en proposant une puissance de calcul am√©lior√©e, une connectivit√© plus rapide avec le Wi-Fi 6, et une efficacit√© √©nerg√©tique optimis√©e. Dot√© de ports USB-C et capable de supporter des r√©solutions d‚Äôaffichage sup√©rieures, ce dernier mod√®le promet une exp√©rience informatique encore plus performante pour les amateurs, les d√©veloppeurs et les passionn√©s d‚ÄôIoT. Une solution compacte, mais puissante, pr√™te √† ouvrir de nouvelles perspectives cr√©atives.&lt;/p&gt;

&lt;h1 id=&quot;ansible&quot;&gt;Ansible&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.ansible.com/ansible/latest/network/getting_started/first_playbook.html&quot;&gt;Ansible&lt;/a&gt;, un puissant outil open source de gestion de configuration, simplifie l‚Äôautomatisation des d√©ploiements, des mises √† jour et de la gestion des infrastructures informatiques. Bas√© sur un mod√®le d√©claratif simple et utilisant le langage YAML, Ansible permet aux administrateurs syst√®me de d√©finir l‚Äô√©tat d√©sir√© de leurs syst√®mes et d‚Äôorchestrer des t√¢ches complexes de mani√®re efficace, offrant ainsi une solution flexible et extensible pour la gestion d‚Äôinfrastructures √† grande √©chelle.&lt;/p&gt;

&lt;h1 id=&quot;pr√©sentation-du-projet&quot;&gt;Pr√©sentation du projet&lt;/h1&gt;

&lt;p&gt;Explorons √† pr√©sent les diff√©rentes t√¢ches Ansible qui permettront de d√©ployer l‚Äôagent AWS Systems Manager (SSM) sur l‚Äôensemble de la flotte de Raspberry Pi. Ces t√¢ches seront soigneusement con√ßues pour assurer un d√©ploiement efficace et uniforme de l‚Äôagent SSM, renfor√ßant ainsi la capacit√© de gestion √† distance de ces dispositifs au sein de l‚Äôinfrastructure.&lt;/p&gt;

&lt;h2 id=&quot;pr√©requis&quot;&gt;Pr√©requis&lt;/h2&gt;

&lt;p&gt;Avant de proc√©der √† l‚Äôex√©cution du playbook Ansible, assurez-vous de satisfaire les pr√©requis suivants :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;AWS CLI&lt;/strong&gt; : V√©rifiez que la AWS Command Line Interface (CLI) est install√©e sur la machine o√π Ansible sera ex√©cut√©. &lt;a href=&quot;https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html&quot;&gt;Vous pouvez t√©l√©charger la CLI AWS √† partir du site officiel d‚ÄôAmazon AWS et suivre les instructions d‚Äôinstallation&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Ansible&lt;/strong&gt; : Assurez-vous qu‚ÄôAnsible est install√© sur votre syst√®me. Vous pouvez l‚Äôinstaller via les gestionnaires de paquets de votre syst√®me d‚Äôexploitation ou en utilisant un gestionnaire de paquets Python comme pip. &lt;a href=&quot;https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html&quot;&gt;Consultez la documentation officielle d‚ÄôAnsible pour obtenir des instructions d‚Äôinstallation d√©taill√©es&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Compte AWS&lt;/strong&gt; : Vous devez disposer &lt;a href=&quot;https://console.aws.amazon.com/&quot;&gt;d‚Äôun compte AWS valide&lt;/a&gt; avec les permissions n√©cessaires pour cr√©er des activations AWS SSM. Assurez-vous que les informations d‚Äôidentification AWS (cl√© d‚Äôacc√®s et cl√© secr√®te) sont configur√©es correctement, soit via le fichier de configuration AWS (~/.aws/config et ~/.aws/credentials), soit via des variables d‚Äôenvironnement.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;R√¥le IAM service-role/AmazonEC2RunCommandRoleForManagedInstances&lt;/strong&gt; : Assurez-vous qu‚Äôun r√¥le IAM nomm√© &lt;a href=&quot;https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-service-role.html&quot;&gt;service-role/AmazonEC2RunCommandRoleForManagedInstances&lt;/a&gt; existe dans votre compte AWS. Ce r√¥le est requis pour ex√©cuter des commandes Systems Manager sur des instances EC2. Si le r√¥le n‚Äôexiste pas, cr√©ez-le en utilisant la console IAM AWS et attribuez les autorisations n√©cessaires.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Un ou plusieurs Raspberry Pi&lt;/strong&gt; : Assurez-vous que les cl√©s publiques SSH que vous utilisez pour vous connecter aux Raspberry Pi sont pr√©sentes sur chaque appareil.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;task-de-cr√©ation-des-codes-dactivation-ssm&quot;&gt;Task de cr√©ation des codes d‚Äôactivation SSM&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Create&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;AWS&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;SSM&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Activation&quot;&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;ansible.builtin.command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;na&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;aws&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ssm&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;create-activation&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;--iam-role&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{{aws_iam_role}}&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;--registration-limit&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ansible_play_hosts&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;--region&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{{aws_region}}&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;--tags&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Key=os,Value=raspbian&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;aws_ssm_activation&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;local&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;delegate_to&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;localhost&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;become_user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{{ansible_user_id}}&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;become_method&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;runas&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;run_once&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Cette task Ansible, intitul√©e &lt;strong&gt;‚ÄúCreate AWS SSM Activation‚Äù&lt;/strong&gt;, se charge de cr√©er une activation AWS Systems Manager (SSM) en utilisant le module &lt;em&gt;ansible.builtin.command&lt;/em&gt;. L‚Äôactivation est r√©alis√©e en invoquant la commande AWS CLI &lt;em&gt;aws ssm create-activation&lt;/em&gt; avec les param√®tres sp√©cifi√©s, tels que le r√¥le IAM, la limite d‚Äôinscription bas√©e sur le nombre d‚Äôh√¥tes Ansible, la r√©gion AWS, et des tags pour identifier l‚ÄôOS (dans ce cas, ‚Äúraspbian‚Äù).&lt;/p&gt;

&lt;p&gt;Le r√©sultat de cette op√©ration est stock√© dans la variable aws_ssm_activation. Ce playbook est con√ßu pour √™tre ex√©cut√© localement (connection: local), en utilisant la commande delegate_to: localhost. Il n‚Äôutilise pas l‚Äô√©l√©vation de privil√®ges (become) pour ex√©cuter la commande en tant qu‚Äôutilisateur sp√©cifi√©.&lt;/p&gt;

&lt;p&gt;Il est important de noter que l‚Äôoption run_once: true assure que cette t√¢che est ex√©cut√©e une seule fois, ind√©pendamment du nombre d‚Äôh√¥tes Ansible. En r√©sum√©, ce playbook automatise la cr√©ation d‚Äôune activation SSM avec des param√®tres sp√©cifiques dans un environnement AWS, contribuant ainsi √† la gestion centralis√©e des ressources.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Convert output to fact&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;set_fact&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;aws_ssm_activation_var&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;aws_ssm_activation.stdout&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;from_json&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;local&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;delegate_to&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;localhost&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;become_user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{{ansible_user_id}}&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;become_method&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;runas&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;run_once&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Nous prendrons en charge la conversion de la sortie (output) au format JSON vers un fact Ansible. Cette √©tape est cruciale pour permettre une manipulation et une analyse ult√©rieure efficace des donn√©es g√©n√©r√©es par nos t√¢ches Ansible.&lt;/p&gt;

&lt;h2 id=&quot;task-de-t√©l√©chargement-et-dinstallation-du-binaire-ssm&quot;&gt;Task de t√©l√©chargement et d‚Äôinstallation du binaire SSM&lt;/h2&gt;

&lt;p&gt;Les t√¢ches suivantes dans le playbook ont pour objectif de r√©cup√©rer le binaire d‚Äôinstallation du site AWS et de proc√©der √† son installation sur le Raspberry Pi. Ce processus est fondamental pour garantir que l‚Äôagent AWS Systems Manager (SSM) soit correctement d√©ploy√© sur chaque dispositif. La r√©cup√©ration du binaire se fait via des commandes Ansible, assurant ainsi un t√©l√©chargement s√ªr et efficace depuis la source officielle AWS. Une fois le binaire obtenu, la t√¢che suivante s‚Äôemploie √† ex√©cuter le processus d‚Äôinstallation sur chaque Raspberry Pi de la flotte, permettant ainsi d‚Äô√©tablir la connexion entre les dispositifs et AWS Systems Manager pour une gestion centralis√©e et √† distance. Ces √©tapes sont cruciales pour garantir la coh√©rence et l‚Äôefficacit√© de l‚Äôagent SSM sur l‚Äôensemble de la flotte de Raspberry Pi.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Download Amazon SSM Agent&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;ansible.builtin.get_url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{{aws_ssm_deb_url}}&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{{aws_ssm_deb_file}}&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0444'&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Install a Amazon SSM Agent .deb package&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;ansible.builtin.apt&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;deb&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{{aws_ssm_deb_file}}&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;task-denregistrement-du-raspberrypi-dans-linventory-aws-ssm&quot;&gt;Task d‚Äôenregistrement du RaspberryPi dans l‚Äôinventory AWS SSM&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Register&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Amazon&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;SSM&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Agent&quot;&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;ansible.builtin.shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;amazon-ssm-agent&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-register&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-y&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-id&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{{aws_ssm_activation_var.ActivationId}}&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-code&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{{aws_ssm_activation_var.ActivationCode}}&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-region&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{{aws_region}}&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;aws_ssm_registration&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Retrieve SSM Instance Id from registration output&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;set_fact&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;aws_ssm_instance_id&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;aws_ssm_registration.stdout&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;regex_search('(&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w+-&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w+)$',&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;multiline=True,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ignorecase=True)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;}}&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ces deux t√¢ches dans le playbook sont d√©di√©es √† l‚Äôenregistrement de l‚Äôagent Amazon SSM (Systems Manager) sur le Raspberry Pi et √† la r√©cup√©ration de l‚Äôidentifiant d‚Äôinstance SSM associ√©.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;em&gt;T√¢che d‚Äôenregistrement de l‚Äôagent Amazon SSM&lt;/em&gt; :
  La premi√®re t√¢che utilise le module ansible.builtin.shell pour ex√©cuter une commande en ligne de commande. Dans ce cas, elle lance la commande &lt;em&gt;‚Äúamazon-ssm-agent -register‚Äù&lt;/em&gt;, suivie de plusieurs options telles que &lt;em&gt;‚Äú-y‚Äù&lt;/em&gt; pour confirmer automatiquement l‚Äôenregistrement, &lt;em&gt;‚Äú-id‚Äù&lt;/em&gt; pour sp√©cifier l‚Äôidentifiant d‚Äôactivation obtenu pr√©c√©demment, &lt;em&gt;‚Äú-code‚Äù&lt;/em&gt; pour fournir le code d‚Äôactivation, et &lt;em&gt;‚Äú-region‚Äù&lt;/em&gt; pour pr√©ciser la r√©gion AWS. Le r√©sultat de cette op√©ration est enregistr√© dans la variable aws_ssm_registration.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;em&gt;T√¢che de r√©cup√©ration de l‚Äôidentifiant d‚Äôinstance SSM&lt;/em&gt; :
  La deuxi√®me t√¢che utilise le module set_fact pour d√©finir une nouvelle variable appel√©e &lt;em&gt;aws_ssm_instance_id&lt;/em&gt;. Elle utilise le filtre regex_search pour extraire l‚Äôidentifiant d‚Äôinstance SSM √† partir de la sortie de la t√¢che d‚Äôenregistrement. La regex &lt;em&gt;(\w+-\w+)$&lt;/em&gt; vise √† capturer le motif d‚Äôidentifiant d‚Äôinstance SSM dans la sortie, et la variable nouvellement cr√©√©e &lt;em&gt;aws_ssm_instance_id&lt;/em&gt; stocke cette information.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;L‚Äôidentifiant d‚Äôinstance SSM obtenu est ensuite utilis√© pour identifier de mani√®re unique cet agent dans l‚Äôenvironnement AWS, facilitant ainsi sa gestion et sa surveillance √† distance.&lt;/p&gt;

&lt;h2 id=&quot;playbook-ansible&quot;&gt;Playbook Ansible&lt;/h2&gt;

&lt;p&gt;Pour tirer parti de cette int√©gration, un r√©f√©rentiel GitHub est mis √† votre disposition √† l‚Äôadresse suivante : &lt;a href=&quot;https://github.com/gautric/ansible-raspberrypi&quot;&gt;ansible-raspberrypi&lt;/a&gt;. Ce r√©f√©rentiel a √©t√© cr√©√© dans le but de simplifier le d√©ploiement de l‚Äôagent AWS Systems Manager (SSM) au sein de votre flotte de Raspberry Pi.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;gautric@MacBookProM2 ansible-raspberrypi % ansible-playbook &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; hosts pi_aws_ssm.yml &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Si tout ce passe bien, vous devriez avoir le retour suivant dans votre console.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;PLAY &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;ssm_hosts] &lt;span class=&quot;k&quot;&gt;***********************************************************************************************************************************************************************************************************&lt;/span&gt;

TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Gathering Facts] &lt;span class=&quot;k&quot;&gt;*****************************************************************************************************************************************************************************************************&lt;/span&gt;
ok: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;raspberrypi.local]

TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;aws_ssm : Create AWS SSM Activation] &lt;span class=&quot;k&quot;&gt;*********************************************************************************************************************************************************************************&lt;/span&gt;
ok: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;raspberrypi.local -&amp;gt; localhost]

TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;aws_ssm : Convert output to fact] &lt;span class=&quot;k&quot;&gt;************************************************************************************************************************************************************************************&lt;/span&gt;
ok: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;raspberrypi.local -&amp;gt; localhost]

TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;aws_ssm : Download Amazon SSM Agent] &lt;span class=&quot;k&quot;&gt;*********************************************************************************************************************************************************************************&lt;/span&gt;
ok: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;raspberrypi.local]

TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;aws_ssm : Install a Amazon SSM Agent .deb package] &lt;span class=&quot;k&quot;&gt;*******************************************************************************************************************************************************************&lt;/span&gt;
ok: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;raspberrypi.local]

TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;aws_ssm : Stop Amazon SSM Agent] &lt;span class=&quot;k&quot;&gt;*************************************************************************************************************************************************************************************&lt;/span&gt;
ok: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;raspberrypi.local]

TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;aws_ssm : Register Amazon SSM Agent] &lt;span class=&quot;k&quot;&gt;*********************************************************************************************************************************************************************************&lt;/span&gt;
ok: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;raspberrypi.local]

TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;aws_ssm : Retrieve SSM Instance Id from registration output] &lt;span class=&quot;k&quot;&gt;*********************************************************************************************************************************************************&lt;/span&gt;
ok: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;raspberrypi.local]

TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;aws_ssm : Start Amazon SSM Agent] &lt;span class=&quot;k&quot;&gt;************************************************************************************************************************************************************************************&lt;/span&gt;
ok: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;raspberrypi.local]

TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;aws_ssm : Enable Amazon SSM Agent] &lt;span class=&quot;k&quot;&gt;***********************************************************************************************************************************************************************************&lt;/span&gt;
ok: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;raspberrypi.local]

TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;aws_ssm : Print SSM Instance Id] &lt;span class=&quot;k&quot;&gt;*************************************************************************************************************************************************************************************&lt;/span&gt;
ok: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;raspberrypi.local] &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;msg&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;mi-0123456789abcdef&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;aws_ssm : Print SSH Instance Id &lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*****************************************************************************************************************************************************************************&lt;/span&gt;
ok: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;raspberrypi.local] &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;msg&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;ssh pi@mi-0123456789abcdef&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

PLAY RECAP &lt;span class=&quot;k&quot;&gt;*****************************************************************************************************************************************************************************************************************&lt;/span&gt;
raspberrypi.local          : &lt;span class=&quot;nv&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;12   &lt;span class=&quot;nv&quot;&gt;changed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0    &lt;span class=&quot;nv&quot;&gt;unreachable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0    &lt;span class=&quot;nv&quot;&gt;failed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0    &lt;span class=&quot;nv&quot;&gt;skipped&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0    &lt;span class=&quot;nv&quot;&gt;rescued&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0    &lt;span class=&quot;nv&quot;&gt;ignored&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0   &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;photo-finish&quot;&gt;Photo finish&lt;/h3&gt;

&lt;p&gt;Une fois l‚Äôagent AWS Systems Manager d√©ploy√© sur votre flotte de Raspberry Pi, vous pouvez retrouver votre instance RaspberryPi directement dans votre console AWS. Cette int√©gration transparente offre une visibilit√© centralis√©e sur l‚Äô√©tat op√©rationnel de chaque dispositif, vous permettant de surveiller, de diagnostiquer et de prendre des mesures √† distance.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws-ssm.png&quot; alt=&quot;Configuration Realm&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;connexion-ssh-au-dessus-de-aws-ssm-session-manager&quot;&gt;Connexion SSH au dessus de AWS SSM Session Manager&lt;/h2&gt;

&lt;p&gt;Afin de pouvoir se connecter √† votre instance Raspberry Pi, il vous faudra &lt;a href=&quot;https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-managedinstances-advanced.html&quot;&gt;activer le mode Advanced&lt;/a&gt; d‚ÄôAWS SSM &lt;sup id=&quot;fnref:pricing:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:pricing&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. Ensuite, il sera possible de d√©marrer une session distante via la commande SSH l√©g√®rement configur√©e en utilisant une directive &lt;strong&gt;ProxyCommand&lt;/strong&gt; dans votre fichier &lt;em&gt;.ssh/config&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Voici la commande de la CLI AWS pour activer le mode Advanced de AWS SSM, qui vous permettra d‚Äôouvrir la session √† distance vers votre Raspberry Pi.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;aws ssm update-service-setting &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--setting-id&lt;/span&gt; arn:aws:ssm:eu-west-1:687441526170:servicesetting/ssm/managed-instance/activation-tier &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--setting-value&lt;/span&gt; advanced&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Le fichier &lt;em&gt;.ssh/config&lt;/em&gt; afin d‚Äôutiliser la feature Session Manager dans SSH.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;host i-&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; mi-&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
    ProxyCommand sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;aws ssm start-session --target %h --document-name AWS-StartSSHSession --parameters 'portNumber=%p'&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;La commande SSH vers votre instance Raspberry Pi.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;    &lt;span class=&quot;nv&quot;&gt;$&amp;gt;&lt;/span&gt; ssh pi@mi-0123456789abcdef&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Et voil√† ‚Ä¶&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;url&quot;&gt;URL&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/gautric/ansible-raspberrypi&quot;&gt;Repo Github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-service-role.html&quot;&gt;IAM Role pour SSM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-getting-started-enable-ssh-connections.html&quot;&gt;Allow and controlling permissions for SSH connections through Session Manager&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/systems-manager/pricing/#Session_Manager&quot;&gt;Pricing Session Manager Adv&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:pricing&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Attention avec les couts de AWS SSM en mode Adv. N‚Äôoubliez pas de revenir au mode Standard et donc free tier.¬†&lt;a href=&quot;#fnref:pricing&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;¬†&lt;a href=&quot;#fnref:pricing:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><category term="fr" /><category term="AWS" /><category term="RaspberryPi" /><category term="SSM" /><category term="Ansible" /><category term="SSH" /><summary type="html">Dans ce nouveau et premier post de 2024, d√©couvrez comment AWS Systems Manager (SSM) s‚Äôint√®gre de mani√®re utile avec le Raspberry Pi (test√© avec 3, zero et 5). Explorez les possibilit√©s de cette combinaison, id√©ale pour les projets d‚Äôinformatique personnelle d√©centralis√©e. Que vous soyez un passionn√© du Cloud, un amateur d‚ÄôIoT ou simplement curieux, cet article vous r√©serve des surprises ! Ce post sera particuli√®rement utile pour ceux qui cherchent √† acc√©der facilement √† leur Raspberry Pi sans avoir √† configurer le port forwarding sur leur box Internet, et ce, pour un co√ªt minime 1. On utilisera la fonctionnalit√© Session Manager d‚ÄôAWS SSM. üçá Attention avec les couts de AWS SSM en mode Adv. N‚Äôoubliez pas de revenir au mode Standard et donc free tier.¬†&amp;#8617;</summary></entry><entry><title type="html">Quarkus/Java 11-17 et GitHub Action feat. Matrix</title><link href="http://0.0.0.0:4000/blog/2022/06/08/GitHub-Matrix.html" rel="alternate" type="text/html" title="Quarkus/Java 11-17 et GitHub Action feat. Matrix" /><published>2022-06-08T10:00:00-05:00</published><updated>2022-06-08T10:00:00-05:00</updated><id>http://0.0.0.0:4000/blog/2022/06/08/GitHub-Matrix</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2022/06/08/GitHub-Matrix.html">&lt;p&gt;La construction des applications modernes et dites cloud natives passent obligatoirement par la case CI/CD. Les pipelines de type GitHub Action d‚Äôapplications permettent de standardiser les processus de constructions, de tests, de versionning ainsi que de d√©ploiement des applications. L‚Äôavantage des pipelines de constructions est le rapide feedback aux d√©veloppeurs des erreurs dans la cha√Æne de traitement. Ainsi, il est facile de modifier un √©l√©ment de configuration pour voir le r√©sultat. 
Les applications modernes n√©cessitent de pouvoir migrer des socles techniques de mani√®re transparente.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Compiler en Quarkus/Java 11 et 17 avec GitHub Action les Matrix&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;L‚Äôid√©e dans ce post est de montrer tr√®s simplement un exemple de double compilation Java 11 et Java 17. Ces versions de Java sont des versions LTS&lt;sup id=&quot;fnref:lts&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:lts&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; c‚Äôest-√†-dire qu‚Äôelles disposent d‚Äôun support long terme .&lt;/p&gt;

&lt;p&gt;Regardons rapidement le pipeline GitHub Action&lt;sup id=&quot;fnref:gha&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:gha&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; avec la possibilit√© de compiler sur deux versions de Java diff√©rentes. Comme toutes les GitHub Action le fichier doit se trouver dans le r√©pertoires .github/workflows de votre projet.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;eaas-ci-matrix&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;strategy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                        &lt;span class=&quot;s&quot;&gt;(1)&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Checkout source&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v3&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Set up JDK ${{ matrix.version }}&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/setup-java@v3&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;java-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ matrix.version }}&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;distribution&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;adopt'&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Build with Maven ${{ matrix.version }}&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mvn --batch-mode --update-snapshots verify&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Pour cela il faut simplement rajouter la section (1) dans la GitHub Action afin de configurer la matrice des versions de java avec lesquelles on souhaite compiler.&lt;/p&gt;

&lt;p&gt;Suite √† une modification (push) dans le repository, la GitHub Action va √™tre d√©clench√©e.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/gha-java-matrix.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;GitHub Action va automatiquement cr√©er autant de sous-pipeline que la matrice va pr√©voir.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/gha-java-11.png&quot; alt=&quot;Compilation Java 11&quot; /&gt;
Voici l‚Äôexemple d‚Äôune compilation en Java 11&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/gha-java-17.png&quot; alt=&quot;Compilation Java 17&quot; /&gt;
et une compilation en Java 17&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Avec cet exemple tr√®s simple, nous voyons qu‚Äôil est possible d‚Äôajouter rapidement des matrices de configuration afin de tester plusieurs cas en parall√®le via les GitHub Action. Cette feature incluse dans GitHub facilite et permet d‚Äôacc√©l√©rer les mont√©es de version par exemple. On pourra utiliser cette feature pour changer de socle, de brique tech, de librairie, de framework en toute s√©r√©nit√©.&lt;/p&gt;

&lt;h4 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h4&gt;
&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:lts&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;https://fr.wikipedia.org/wiki/Long-term_support¬†&lt;a href=&quot;#fnref:lts&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:gha&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;https://docs.github.com/en/actions¬†&lt;a href=&quot;#fnref:gha&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><category term="fr" /><category term="Java" /><category term="CI/CD" /><category term="Quarkus" /><summary type="html">La construction des applications modernes et dites cloud natives passent obligatoirement par la case CI/CD. Les pipelines de type GitHub Action d‚Äôapplications permettent de standardiser les processus de constructions, de tests, de versionning ainsi que de d√©ploiement des applications. L‚Äôavantage des pipelines de constructions est le rapide feedback aux d√©veloppeurs des erreurs dans la cha√Æne de traitement. Ainsi, il est facile de modifier un √©l√©ment de configuration pour voir le r√©sultat. Les applications modernes n√©cessitent de pouvoir migrer des socles techniques de mani√®re transparente.</summary></entry><entry><title type="html">Pattern D√©coupler la R√©ception et Utilisation des Signaux avec jBPM/Drools</title><link href="http://0.0.0.0:4000/blog/2021/09/26/Pattern-Signal-jBPM.html" rel="alternate" type="text/html" title="Pattern D√©coupler la R√©ception et Utilisation des Signaux avec jBPM/Drools" /><published>2021-09-26T10:00:00-05:00</published><updated>2021-09-26T10:00:00-05:00</updated><id>http://0.0.0.0:4000/blog/2021/09/26/Pattern-Signal-jBPM</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2021/09/26/Pattern-Signal-jBPM.html">&lt;p&gt;Pour mon activit√© professionnelle, je me d√©place&lt;sup id=&quot;fnref:2020&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2020&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; chez les clients afin d‚Äôexpertiser les solutions qu‚Äôils mettent en place dans leur syst√®me d‚Äôinformation et notamment le produit &lt;a href=&quot;https://developers.redhat.com/products/rhpam/overview&quot;&gt;RHPAM&lt;/a&gt;&lt;sup id=&quot;fnref:jbpm&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:jbpm&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;. Pour le compte d‚Äôun client donc, j‚Äôai travaill√© sur les processus metiers qu‚Äôil a mis en place chez lui. Ces processus de type BPMN permettent de g√©rer des processus de gestion sur lequels nous n‚Äôallons pas nous √©tendre ici. Nous allons juste extraire un patron de conception que j‚Äôai bien aim√© de par sa fonctionnalit√© ainsi que par son interessante impl√©mentation .&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;D√©couplage de la r√©ception du signal de son utilisation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Il est vrai qu‚Äôen anglais cela rendrait plut√¥t ‚ÄúDecoupling Signal Reception‚Äù.&lt;/p&gt;

&lt;h2 id=&quot;rappel-des-processus-bpmn&quot;&gt;Rappel des processus BPMN&lt;/h2&gt;

&lt;p&gt;Les Processus BPMN permettent de d√©crire des processus m√©tier de haut niveau sous la forme de graphique standardis√©s par Object Management Group (OMG) specification.
Ces processus m√©tiers facilitent la communication car ils peuvent √™tre √©crits par les m√©tiers via des outils de design de type NoCode et deploy√©s sans changement par les int√©grateurs sur des moteurs pr√©vus √† cet effet. Le standard BPMN normalise les processus m√©tiers avec des concepts largements √©prouv√©s au fil du temps (notion de timer, de signaux, de message, d‚Äôappel, etc‚Ä¶).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://access.redhat.com/webassets/avalon/d/Red_Hat_Process_Automation_Manager-7.3-Process_designer_Business_Process_Model_and_Notation_BPMN2_reference_guide-en-US/images/aee1d31b5af75c88df09df6e0f551b2c/subprocess.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;les-signaux-dans-bpmn&quot;&gt;Les signaux dans BPMN&lt;/h3&gt;

&lt;p&gt;Les signaux dans le standard BPMN servent √† communiquer des √©v√©nements m√©tiers aux processus.
Les processus peuvent √™tre √† la fois √©metteur ou r√©cepteur des √©v√©nements de type signal.
En fonction des besoins, les processus communiquent les uns avec les autres sur la base de signaux.
Les signaux peuvent √™tre √©xog√®nes au syst√®me BPM.&lt;/p&gt;

&lt;h4 id=&quot;nomeclature&quot;&gt;Nomeclature&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Voici le noeud pour d√©marrer une instance de processus apr√®s avoir recu un message.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://access.redhat.com/webassets/avalon/d/Red_Hat_Process_Automation_Manager-7.3-Process_designer_Business_Process_Model_and_Notation_BPMN2_reference_guide-en-US/images/9cc74191cdf22549a73ad8f904f8754d/bpmn-signal-start.png&quot; alt=&quot;Signal Start event&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pour √©couter puis continuer l‚Äô√©xecution d‚Äôune instance de processus apr√®s avoir recu le bon signal, on utilisera ce noeud.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://access.redhat.com/webassets/avalon/d/Red_Hat_Process_Automation_Manager-7.3-Process_designer_Business_Process_Model_and_Notation_BPMN2_reference_guide-en-US/images/3d9480f8f2c20c306c21f2d16a8c1db8/bpmn-intermediate-signal.png&quot; alt=&quot;Signal Catching Event&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;warn&quot;&gt;
Ce noeud est bloquant, l'instance de processus est en attente de la r√©ception du signal.
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;L‚Äôenvoi d‚Äôun signal en cours de traitement est possible avec le noeud suivant.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://access.redhat.com/webassets/avalon/d/Red_Hat_Process_Automation_Manager-7.3-Process_designer_Business_Process_Model_and_Notation_BPMN2_reference_guide-en-US/images/90694fc3ec2964e0f43245281ed87df1/bpmn-signal-throwing.png&quot; alt=&quot;Signal Throwing Event&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Et enfin le noeud permettant de finir une instance de processus tout en envoyant un signal.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://access.redhat.com/webassets/avalon/d/Red_Hat_Process_Automation_Manager-7.3-Process_designer_Business_Process_Model_and_Notation_BPMN2_reference_guide-en-US/images/f262354a95af508ef2fd529635b79a55/bpmn-end-signal.png&quot; alt=&quot;Signal End Event&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dans tous les cas, il est n√©cessaire de donner un nom de signal. Ce nom doit √™tre le plus parlant possible tout en √©vitant d‚Äô√™tre trop technique.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;RELANCE_CLIENT&lt;/li&gt;
  &lt;li&gt;NOTIFICATION_FOURNISSEUR&lt;/li&gt;
  &lt;li&gt;ERREUR_PROCEDURE&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;info&quot;&gt;
Avec jBPM/RHPAM, les noms des signaux peuvent √™tre variabilis√©s comme ceci : ALERTE_#{ID_CLIENT}
&lt;/div&gt;

&lt;h4 id=&quot;scope-des-signaux&quot;&gt;Scope des Signaux&lt;/h4&gt;

&lt;p&gt;En fonction du fournisseur BPM, le scope d‚Äô√©mission du message peut √™tre modul√©. Le scope correspond √† la port√©e du signal qui peut √™tre envoy√© &lt;em&gt;plus ou moins loin&lt;/em&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Instance de processus
    &lt;ul&gt;
      &lt;li&gt;Le signal est envoy√© au niveau d‚Äôinstance de processus&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Model de processus
    &lt;ul&gt;
      &lt;li&gt;Le signal est envoy√© au niveau de la d√©finition du model du processus courant&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Project/d√©ploiement
    &lt;ul&gt;
      &lt;li&gt;Le signal est envoy√© √† un ensemble des processus d‚Äôun ou plusieurs projets techniques.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Global
    &lt;ul&gt;
      &lt;li&gt;Le signal est envoy√© √† tous les processus du moteur&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Externe
    &lt;ul&gt;
      &lt;li&gt;Le signal est diffus√© plus largement √† l‚Äôexterieur de l‚Äôinstance du moteur de processus.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mal d√©finir le scope peut avoir un impact sur les performances en fonction des moteurs, car plus ou moins d‚Äôinstances de processus peuvent r√©ceptionner le signal.&lt;/p&gt;
&lt;div class=&quot;warn&quot;&gt;
Les scopes ne sont pas forcement tous impl√©ment√©s dans les solutions.
&lt;/div&gt;

&lt;h4 id=&quot;interaction&quot;&gt;Interaction&lt;/h4&gt;

&lt;p&gt;Les diff√©rentes impl√©mentations des moteurs BPM fournissent des interfaces afin de dialoguer via des signaux aux instances de processus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;IHM
    &lt;ul&gt;
      &lt;li&gt;Le logiciel fourni une interface graphique (web, desktop) afin d‚Äô√©mettre le signal √† un ou plusieurs processus.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;API REST
    &lt;ul&gt;
      &lt;li&gt;Une API REST (ou SOAP) est propos√©e et permet d‚Äôinteragir via un appel REST/HTTP/JMS&lt;sup id=&quot;fnref:api&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:api&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; au moteur de processus.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;API code
    &lt;ul&gt;
      &lt;li&gt;Selon le logiciel BPM, celui-ci est muni d‚Äôune (ou plusieurs) librairie(s)&lt;sup id=&quot;fnref:lt&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:lt&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt; technique.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Voici un tutorial (en anglais) d‚Äôun de mes coll√®gue &lt;a href=&quot;https://github.com/dmarrazzo&quot;&gt;Donato Marrazzo&lt;/a&gt; pr√©sentant l‚Äôutilisation des signaux avec jBPM/RHPAM&lt;/p&gt;
&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/hAH9kDfMFHQ&quot; frameborder=&quot;1&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;d√©couplage-de-signaux&quot;&gt;D√©couplage de signaux&lt;/h2&gt;

&lt;p&gt;Lors de l‚Äôactivation d‚Äôun signal ‚ÄúSignal Step‚Äù, le processus va se mettre en ‚Äú√©coute‚Äù pour r√©ceptionner le signal.
Il se peut que le signal, pour des besoins m√©tiers, soit lanc√© (bien) avant l‚Äôactivation du noeud signal, donc le processus peut manquer la r√©ception du signal, le signal sera donc perdu et le processus restera toujours bloqu√©. 
Il est bien sur possible d‚Äôavoir une branche incluant un d√©lai afin de cr√©er un branche de sortie et donc d√©bloquer le processus. Mais en toute logique, le branche de d√©lestage ne sera pas la branche nominale.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jbpm-signal-processus.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mais quant est-il si l‚Äôon souhaite tout de m√™me recevoir le signal √† n‚Äôimporte quel moment&lt;sup id=&quot;fnref:duree&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:duree&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;, notamment si les actions avant la r√©ception du signal sont longues ‚ÄúLong running Sub-Process‚Äù, et tout de m√™me r√©agir √† l‚Äô√©v√©nement signal.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://access.redhat.com/webassets/avalon/d/Red_Hat_Process_Automation_Manager-7.3-Process_designer_Business_Process_Model_and_Notation_BPMN2_reference_guide-en-US/images/3d9480f8f2c20c306c21f2d16a8c1db8/bpmn-intermediate-signal.png&quot; alt=&quot;Signal Catching Event&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Car comme nous l‚Äôavons vu pr√©cedement, la r√©ception du signal sera possible d√®s que le moteur BPM arrivera sur le noeud ‚ÄúCatching Signal‚Äù, pas avant. Il nous faut donc essayer de trouver un nouveau pattern afin de d√©coupler la r√©cepetion du signal.&lt;/p&gt;

&lt;h3 id=&quot;sous-processus&quot;&gt;Sous-Processus&lt;/h3&gt;

&lt;p&gt;Pour cela nous allons cr√©er un sous-processus attenant au processus principal. L‚Äôid√©e principale de ce sous-processus se mettre ne √©coute de l‚Äô√©venement signal m√™me si on ne va pas utiliser cette information tout de suite dans le pocessus principal.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jbpm-signal-subprocess.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Avec ce sous processus nous allons simplement recevoir le signal via le noeud ‚ÄúSignal Start Event‚Äù, √† n‚Äôimporte quel moment du cycle de vie du processus.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://access.redhat.com/webassets/avalon/d/Red_Hat_Process_Automation_Manager-7.3-Process_designer_Business_Process_Model_and_Notation_BPMN2_reference_guide-en-US/images/9cc74191cdf22549a73ad8f904f8754d/bpmn-signal-start.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Le deuxi√®me noeud ‚ÄúScript Node‚Äù va stocker l‚Äô√©v√©nement signal dans la session Drools.
et comme la session Drools est difficilement auditable nous copions aussi l‚Äô√©v√©nement dans une variable de processus &lt;sup id=&quot;fnref:var&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:var&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Fact insertion into Drools Session&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;kcontext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKieRuntime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SUB_PROCESS_SIGNAL&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Coping variable of the signal event into process variables &lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;kcontext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setVariable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SubProcessSignalFlag&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Received&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Drools est le moteur de r√®gle int√©gr√© √† jBPM. Il fourni √† la fois un langage de programmation pour concevoir des r√®gles m√©tiers et un moteur inf√©rence qui r√©agi automatique √† chaque changement de contexte. Ici notre contexte sera la session Drools de l‚Äôinstance de processus dans laquelle on insere une nouvel objet &lt;sup id=&quot;fnref:obj&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:obj&quot; class=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Ensuite, on termine simplement le sous-processus et on rend la main.&lt;/p&gt;

&lt;p&gt;Avec ce sous-processus de r√©ception de signal, nous stocker dans la session (Drools) et/ou une variable de processus. L‚Äô√©venement signal est bien sauvegrader dans l‚Äôinstance de processus. Il va falloir maintenant exploiter cet information disponible dans les infos du processus.&lt;/p&gt;

&lt;h3 id=&quot;branche-de-traitement&quot;&gt;Branche de traitement&lt;/h3&gt;

&lt;p&gt;Afin d‚Äôexploiter l‚Äô√©v√©nement signal stock√© dans les infos de l‚Äôinstance de processus, nous allons modifier notre processus.
Voici maintenant le m√©canisme d‚Äôutilisation de l‚Äô√©v√©nement signal.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jbpm-signal-drools-flow.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nous remplacons l‚Äôattende du signal par une condition particuli√®re. Cette condition, dans notre cas, est stock√©e dans la session Drools.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jbpm-signal-drools-impl.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Le noeud ‚ÄúDrools Step‚Äù configure le ‚ÄúConditinal Event‚Äù sous la forme d‚Äôune r√®gle Drools. Ici, ce noeud v√©rifie la pr√©sence de l‚Äôobjet String dans la session, cette cha√Æne de carat√®re devra √™tre √©gale √† ‚ÄúSUB_PROCESS_SIGNAL‚Äù pour valider la condition.&lt;/p&gt;

&lt;p&gt;La session Drools, mise √† jour via le sous-processus de r√©ception du signal, est utilis√©e quand il le faut par l‚Äôinstance de processus.
L‚Äôavantage de l‚Äôutilisation du conditionnal event est qu‚Äôil peut √™tre rafraichi √† tout moment si la session change, donc la session peut √™tre mise √† jour avant ou pendant l‚Äôactivation du noeud et donc faire avancer l‚Äôinstance de processus comme il se doit.&lt;/p&gt;

&lt;h2 id=&quot;final&quot;&gt;Final&lt;/h2&gt;

&lt;p&gt;Voici donc, le sch√©ma complet du processus impl√©mentant le pattern que nous venont de voir. Ce sch√©ma g√©n√©rique ne g√®re pour l‚Äôinstant un signal et un type de condition, mais il est tout √† fait possible d‚Äôavoir une impl√©mentation plus complexe en fonction du besoin m√©tier (plusieurs signaux, plusieurs variables, plusieurs conditions).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jbpm-signal-full-processus.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;warn&quot;&gt;
Ce pattern poss√®de n√©ammoins le d√©faut de perdre la signification, dans la branche de traitement, de la source du &quot;Conditinal Event&quot;. En effet, le signal est r√©ceptionn√© dans un sous-processus d√©di√©, il est donc important de bien documenter l'√©l√©ment d√©clancheur du &quot;Conditinal Event&quot;.
&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Ce pattern permet de r√©pondre au besoin de d√©couplage de la r√©ception du signal de son utilisation plus tard dans le processus. Il n‚Äôy a plus besoin donc de bloquer le processus principal sur le signal et donc il est possible d‚Äôeffectuer des traitements relativement long tout en continuant √† utiliser les signaux.
Cela apporte plus de flexibilit√© dans le design de conception des processus sans trop perdre dans lisibilit√© des mod√®les.&lt;/p&gt;

&lt;!-- ### Links

* [The Full project](https://github.com/gautric/bpmn-pattern) but you have to do some cleanup. --&gt;

&lt;h4 id=&quot;remerciements&quot;&gt;Remerciements&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Un grand remerciement √† T. B., mon contact client qui se reconnaitra.&lt;/li&gt;
  &lt;li&gt;√Ä &lt;a href=&quot;https://fr.linkedin.com/in/snoussi&quot;&gt;Rachid Snoussi&lt;/a&gt; pour la relecture.&lt;/li&gt;
  &lt;li&gt;Thx &lt;a href=&quot;http://dmarrazzo.github.io/&quot;&gt;Donato Marrazzo&lt;/a&gt; for your tutorial.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h4&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:2020&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Sur site ou bien √† distance depuis mars 2020 :-(.¬†&lt;a href=&quot;#fnref:2020&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:jbpm&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;RHPAM est un produit Red Hat, jBPM est le projet communautaire √† la base de RHPAM.¬†&lt;a href=&quot;#fnref:jbpm&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:api&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;peut d√©pendre du fournisseur¬†&lt;a href=&quot;#fnref:api&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:lt&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;pour diff√©rents langages de programmation Java, C/C++, Python, JS etc‚Ä¶¬†&lt;a href=&quot;#fnref:lt&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:duree&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;pendant la dur√©e du processus uniquement.¬†&lt;a href=&quot;#fnref:duree&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:var&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;On peut bien entendu utiliser les fonctions de ‚ÄúData Assignments‚Äù pour le stockage de l‚Äô√©v√©nement signal dans la table d‚Äôaudit (activer le m√©canisme d‚Äôaudit de jBPM) ou bien les listeners afin de tracer le signal via un code sp√©cifique.¬†&lt;a href=&quot;#fnref:var&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:obj&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Objet plus ou moins complexe.¬†&lt;a href=&quot;#fnref:obj&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><category term="fr" /><category term="jBPM" /><category term="Drools" /><category term="Pattern" /><category term="Signal" /><category term="Reception" /><summary type="html">Pour mon activit√© professionnelle, je me d√©place1 chez les clients afin d‚Äôexpertiser les solutions qu‚Äôils mettent en place dans leur syst√®me d‚Äôinformation et notamment le produit RHPAM2. Pour le compte d‚Äôun client donc, j‚Äôai travaill√© sur les processus metiers qu‚Äôil a mis en place chez lui. Ces processus de type BPMN permettent de g√©rer des processus de gestion sur lequels nous n‚Äôallons pas nous √©tendre ici. Nous allons juste extraire un patron de conception que j‚Äôai bien aim√© de par sa fonctionnalit√© ainsi que par son interessante impl√©mentation . Sur site ou bien √† distance depuis mars 2020 :-(.¬†&amp;#8617; RHPAM est un produit Red Hat, jBPM est le projet communautaire √† la base de RHPAM.¬†&amp;#8617;</summary></entry><entry><title type="html">How to manage Exception inside a jBPM WorkItemHandler custom component</title><link href="http://0.0.0.0:4000/blog/2020/10/28/How-to-manage-Exception-inside-jBPM.html" rel="alternate" type="text/html" title="How to manage Exception inside a jBPM WorkItemHandler custom component" /><published>2020-10-28T10:00:00-05:00</published><updated>2020-10-28T10:00:00-05:00</updated><id>http://0.0.0.0:4000/blog/2020/10/28/How-to-manage-Exception-inside-jBPM</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2020/10/28/How-to-manage-Exception-inside-jBPM.html">&lt;p&gt;When we develop a BPMN process we have to handle correctly Error. An Error can be raised by any component during the processus instance and specially into a Work Item Handler node. This kind of node in jBPM is a Java component implementing the WorkItemHandler interface. Usually in Java program we manage error via Exception mechanism.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;How to manage Exception inside jBPM WorkItemHandler custom component.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To illustrate how to use Exception/Error I propose to create a sample error process.&lt;/p&gt;

&lt;h2 id=&quot;a-quick-sample&quot;&gt;A quick sample&lt;/h2&gt;

&lt;p&gt;Let‚Äôs create a very common process with Work Item Handler (WIH).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jbpm-error-exception.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This WIH has to implement &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;org.kie.api.runtime.process.WorkItemHandler&lt;/code&gt; jBPM‚Äôs interface and its two methods &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;executeWorkItem&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;abortWorkItem&lt;/code&gt;. The first method is the nominal execution. the second one is called by jBPM to reset the workitem handler action.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;executeWorkItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;WorkItem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WorkItemManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;manager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;no&quot;&gt;LOG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Nominal {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WorkItemHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;jbpm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;abortWorkItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;WorkItem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WorkItemManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;manager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;no&quot;&gt;LOG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Abort {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WorkItemHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As you can see this implementation throws the exception &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;net.a.g.jbpm.pattern.util.Exception&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;java-exception-to-bpmn-error-in-jbpm-engine&quot;&gt;Java Exception to BPMN Error in jBPM engine&lt;/h2&gt;

&lt;p&gt;In BPMN, we just have to use/copy paste the full qualified exception name to be handled. 
jBPM engine gonna catch this exception and create an internal signal. This signal reroutes the process instance to the error branch.
The signal looks like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Error-${internalUniqueId}-${exceptionClassName}&lt;/code&gt;, and in our case &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Error-_72474602-751C-43FD-9D4F-2598A16468D1-net.a.g.jbpm.pattern.util.Exception&lt;/code&gt; (don‚Äôt care about the middle UUID it is internal and automatic).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jbpm-error-exception-handling.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can map the error instance to a process variable and reuse it inside the rest next nodes as usual.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jbpm-error-exception-mapping.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;info&quot;&gt;
In most case and in a real life, we should wrap all exceptions into normalized ones.
&lt;/div&gt;

&lt;h2 id=&quot;unit-test-to-prove-integration&quot;&gt;Unit Test to prove integration&lt;/h2&gt;

&lt;p&gt;As usual, no test no proof. Here is a common sample test. We have to register our WIH into the KieSession. We also created an listerner to illustrate all steps.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ExceptionToErrorTest&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JbpmJUnitBaseTestCase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LOG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LoggerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ExceptionToErrorTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;ExceptionToErrorTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LOG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;jBPM unit test sample&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RuntimeManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runtimeManager&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;createRuntimeManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;net/a/g/jbpm/pattern/ExceptionToErrorProcess.bpmn&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RuntimeEngine&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runtimeEngine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getRuntimeEngine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;KieSession&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kieSession&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runtimeEngine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKieSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;kieSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWorkItemManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;registerWorkItemHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WorkItemHandler&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WorkItemHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;kieSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ProcessEventListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

			&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt;  &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LOG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LoggerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;net.a.g.jbpm.pattern.ProcessEventListener&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

			&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;beforeProcessStarted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ProcessStartedEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;no&quot;&gt;LOG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Start Processus : {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getProcessInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getProcessName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

			&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;beforeNodeTriggered&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ProcessNodeTriggeredEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;no&quot;&gt;LOG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Node Called : {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNodeInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNodeName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


			&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;afterProcessStarted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ProcessStartedEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;no&quot;&gt;LOG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;End Processus : {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getProcessInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getProcessName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OMIT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;


        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ProcessInstance&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;processInstance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kieSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;startProcess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ExceptionToErrorProcess&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;assertProcessInstanceNotActive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;processInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kieSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertNodeTriggered&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;processInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ScriptTask&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;assertNodeTriggered&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;processInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Error End&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;runtimeManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;disposeRuntimeEngine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;runtimeEngine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;runtimeManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And here is the result.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-log&quot; data-lang=&quot;log&quot;&gt;[INFO] Running net.a.g.jbpm.pattern.ExceptionToErrorTest
16:42:26.543 [main] DEBUG org.jbpm.services.task.identity.AbstractUserGroupInfo - Callback properties will be loaded from classpath:/usergroups.properties
16:42:26.550 [main] DEBUG org.jbpm.services.task.identity.JBossUserGroupCallbackImpl - Loaded properties {doctor=users,PM, Administrator=Administrators, frontDesk=users,PM, manager=managers,HR, mary=admins,managers,users,HR, admin=admins,managers,users,webdesigners,functionalanalysts, sales-rep=admin,managers,users,sales, john=admins,managers,users,PM, salaboy=admins,users, krisv=admins,managers,users}
16:42:26.551 [main] DEBUG org.jbpm.test.JbpmJUnitBaseTestCase - Configuring entire test case to have data source enabled false and session persistence enabled false with persistence unit name org.jbpm.persistence.jpa
16:42:26.560 [main] DEBUG net.a.g.jbpm.pattern.ExceptionToErrorTest - jBPM unit test sample
16:42:26.622 [main] DEBUG org.kie.api.internal.utils.ServiceDiscoveryImpl - Loading kie.conf from  jar:file:/Users/gautric/.m2/repository/org/kie/kie-internal/7.44.0.Final/kie-internal-7.44.0.Final.jar!/META-INF/kie.conf in classloader jdk.internal.loader.ClassLoaders$AppClassLoader@277050dc

... OMIT ...

16:42:28.835 [main] DEBUG org.kie.internal.runtime.manager.deploy.DeploymentDescriptorManager - No descriptor found returning default instance
16:42:28.874 [main] DEBUG org.jbpm.runtime.manager.impl.error.ExecutionErrorManagerImpl - Error handling filters [TaskExecutionErrorFilter [accepts=CannotAddTaskException, ignores=PermissionDeniedException], ProcessExecutionErrorFilter [accepts=WorkflowRuntimeException, ignores=], DBExecutionErrorFilter [accepts=SQLException,HibernateException, ignores=]]
16:42:28.874 [main] DEBUG org.jbpm.runtime.manager.impl.error.ExecutionErrorManagerImpl - Execution error storage org.jbpm.runtime.manager.impl.error.DefaultExecutionErrorStorage@2cc03cd1
16:42:28.875 [main] DEBUG org.jbpm.runtime.manager.impl.error.ExecutionErrorManagerImpl - Error event listeners java.util.ServiceLoader[org.kie.internal.runtime.error.ExecutionErrorListener]
16:42:28.876 [main] INFO org.jbpm.runtime.manager.impl.AbstractRuntimeManager - SingletonRuntimeManager is created for default-singleton
16:42:28.970 [main] INFO net.a.g.jbpm.pattern.ProcessEventListener - Start Processus : ExceptionToErrorProcess
16:42:28.980 [main] INFO net.a.g.jbpm.pattern.ProcessEventListener - Node Called : Nominal Start
16:42:28.982 [main] INFO net.a.g.jbpm.pattern.ProcessEventListener - Node Called : WorkItemHandler
16:42:28.987 [main] INFO net.a.g.jbpm.pattern.wih.WorkItemHandler - Nominal class net.a.g.jbpm.pattern.wih.WorkItemHandler
16:42:28.991 [main] DEBUG org.jbpm.workflow.instance.impl.WorkflowProcessInstanceImpl - Signal Error-_72474602-751C-43FD-9D4F-2598A16468D1-net.a.g.jbpm.pattern.util.Exception received with data Exception [uuid=9aecb8c7-99af-4d41-b8fa-df97f3ae1242] in process instance 1
16:42:28.994 [main] INFO net.a.g.jbpm.pattern.wih.WorkItemHandler - Abort class net.a.g.jbpm.pattern.wih.WorkItemHandler
16:42:28.995 [main] INFO net.a.g.jbpm.pattern.ProcessEventListener - Node Called : ScriptTask
16:42:28.995 [main] ERROR net.a.g.jbpm.pattern.ScriptTask - Task Error Branch Exception [uuid=9aecb8c7-99af-4d41-b8fa-df97f3ae1242]
16:42:28.995 [main] INFO net.a.g.jbpm.pattern.ProcessEventListener - Node Called : Error End
16:42:28.996 [main] INFO net.a.g.jbpm.pattern.ProcessEventListener - End Processus : ExceptionToErrorProcess
16:42:28.997 [main] DEBUG org.drools.core.common.DefaultAgenda - State was INACTIVE is now DISPOSED
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.821 s - in net.a.g.jbpm.pattern.ExceptionToErrorTest&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As you can see an internal signal is raised and received by the jBPM engine :&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;16:42:28.991 [main] DEBUG org.jbpm.workflow.instance.impl.WorkflowProcessInstanceImpl - Signal Error-_72474602-751C-43FD-9D4F-2598A16468D1-net.a.g.jbpm.pattern.util.Exception received with data Exception [uuid=9aecb8c7-99af-4d41-b8fa-df97f3ae1242] in process instance 1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We passed also through &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ScriptTask&lt;/code&gt;  Node and finish the process with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Error End&lt;/code&gt; meaning we finish the process with an BPMN Error Termination as expected.&lt;/p&gt;

&lt;p&gt;It means that internally jBPMN engine handle Error as specific signal. The signal starts with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Error&lt;/code&gt; code, followed by the UUID‚Äôs node and finishes the full qualified name of the exception.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Managing Java Exception with jBPMN is simple and intuitive. Of course, you can deal with the whole Java Exception API to have a very flexible, scalable mecahism. Feel free to test my sample, I let all links below,  feedbacks will be also appreciate.&lt;/p&gt;

&lt;h3 id=&quot;links&quot;&gt;Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/gautric/bpmn-pattern&quot;&gt;The Full project&lt;/a&gt; but you have to do some cleanup.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/gautric/bpmn-pattern/blob/master/src/main/resources/net/a/g/jbpm/pattern/ExceptionToErrorProcess.bpmn&quot;&gt;ExceptionToErrorProcess.bpmn&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/gautric/bpmn-pattern/blob/master/src/main/java/net/a/g/jbpm/pattern/wih/WorkItemHandler.java&quot;&gt;Custom WorkItemHandler.java&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/gautric/bpmn-pattern/blob/master/src/main/java/net/a/g/jbpm/pattern/util/Exception.java&quot;&gt;Custom Exception.java&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;hhttps://github.com/gautric/bpmn-pattern/blob/master/src/test/java/net/a/g/jbpm/pattern/ExceptionToErrorTest.java&quot;&gt;The Full Test Case.java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="fr" /><category term="jBPM" /><category term="WorkItemHandler" /><category term="Exception" /><summary type="html">When we develop a BPMN process we have to handle correctly Error. An Error can be raised by any component during the processus instance and specially into a Work Item Handler node. This kind of node in jBPM is a Java component implementing the WorkItemHandler interface. Usually in Java program we manage error via Exception mechanism.</summary></entry><entry><title type="html">Keycloak, les clefs Yubico et le standard Webauthn</title><link href="http://0.0.0.0:4000/blog/2020/10/26/Keycloak-Yubico-WebAuthn.html" rel="alternate" type="text/html" title="Keycloak, les clefs Yubico et le standard Webauthn" /><published>2020-10-26T10:00:00-05:00</published><updated>2020-10-26T10:00:00-05:00</updated><id>http://0.0.0.0:4000/blog/2020/10/26/Keycloak-Yubico-WebAuthn</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2020/10/26/Keycloak-Yubico-WebAuthn.html">&lt;p&gt;Depuis quelque temps j‚Äôinterviens chez mes clients afin de mener des √©tudes d‚Äôarchitecture autour de Keycloak/RHSSO. Comme son nom l‚Äôindique, il s‚Äôagit d‚Äôune solution de &lt;a href=&quot;https://en.wikipedia.org/wiki/Single_sign-on&quot;&gt;SSO&lt;/a&gt; c‚Äôest √† dire d‚Äôun syst√®me unique d‚Äôauthentification et d‚Äôauthorisation. Le projet Keycloak a debut√© en 2014 et est donc relativement mature, la communaut√© autour de ce projet est tr√®s importante.&lt;/p&gt;

&lt;p&gt;Il y a quelques temps d√©j√†, j‚Äôai achet√© et configur√© des clefs Yubico afin de faire du &lt;a href=&quot;https://en.wikipedia.org/wiki/Multi-factor_authentication&quot;&gt;2FA&lt;/a&gt; avec mes principaux comptes en ligne. Les principaux acteurs du web (Google, Facebook, AWS, etc‚Ä¶) proposent ce type d‚Äôauthentification qui apporte une s√©curit√© suppl√©mentaire des comptes en ligne.&lt;/p&gt;

&lt;p&gt;Keycloack depuis fin 2019 dispose d‚Äôune int√©gration du standard Webauthn du W3C. Nous allons voir comment faire cette configuration dans le produit.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Int√©gration/Configuration d‚Äôune authentification Webauthn avec Keycloak&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;le-standard-webauthn&quot;&gt;Le standard WebAuthn&lt;/h2&gt;

&lt;p&gt;Le standard WebAuthn est une g√©n√©ralisation d‚Äôun autre standard le FIDO. Ces deux standards ont pour but de proposer une authentification forte des utilisateurs lors de leurs connexions en ligne. Il existe d√©j√† des systemes de double authentification via SMS par exemple, mais il est possible, avec un peu de moyen, de hacker/casser soit techniquement soit socialement ce type d‚Äôauthentification.&lt;/p&gt;

&lt;p&gt;Auparavant le standard FIDO √©tait tr√®s ax√© sur des clefs mat√©rielles via USB beaucoup plus difficile √† casser (par clonage par ex) et une API dans le browser, WebAuthn supporte quant √† lui d‚Äôautre type de device comme les montres connect√©es, les t√©l√©phones portables et d‚Äôautres types de protocole comme le BLE et/ou le NFC. WebAuthn apporte aussi au browser une API standard en Javascript qui est maintenant support√©e dans la plupart des navigateurs (Chrome, Firefox, etc‚Ä¶).&lt;/p&gt;

&lt;p&gt;Lorsque d‚Äôun utilisateur se connecte √† son compte en ligne le service via le browser demande √† l‚Äôutilisateur d‚Äôinserer sa clef (ici : Yubikey) dans son ordinateur (utiliser sa clef NFC si il s‚Äôagit d‚Äôun telephone ou d‚Äôune tablette). Le browser dialogue donc avec le systeme d‚Äôauthentification afin de verifier un challenge de s√©curit√©, le tout est renvoy√© au service pour verification finale avant l‚Äôacc√®s au dit service. L‚Äôavantage est que l‚Äôon peut utiliser la m√™me clef d‚Äôun service en ligne √† l‚Äôautre, car le standard d√©fini que le challenge doit etre fait par nom de domaine.&lt;/p&gt;

&lt;p&gt;Un des avantages de ce standard est son faible co√ªt de deploiement √† la fois pour l‚Äôutilisateur final que pour le service en ligne, grace √† la standardisation il existe un certain nombre d‚Äôacteurs et de fournisseur de solution WebAuthn compatible. Une clef Yubico est aux alentours d‚Äôune cinquantaine d‚Äôeuros piece, donc pour un Architecte IT comme moi cela est tr√®s raisonnable. Le service en ligne peut facilement int√©grer cette fonctionnalit√© dans le processus d‚Äôauthentification de ses utilisateurs, comme nous allons le voir dans le chapitre suivant.&lt;/p&gt;

&lt;h2 id=&quot;installation-de-keycloak&quot;&gt;Installation de Keycloak&lt;/h2&gt;

&lt;p&gt;L‚Äôinstallation de Keycloak est tout aussi simple que l‚Äôinstallation d‚Äôun serveur Wildfly/JBoss EAP, il suffit simplement &lt;a href=&quot;https://www.keycloak.org/downloads&quot;&gt;t√©l√©charger le zip serveur&lt;/a&gt; puis de le dezipper dans le repertoire de son choix.&lt;/p&gt;

&lt;h3 id=&quot;utilisateur-root&quot;&gt;Utilisateur root&lt;/h3&gt;
&lt;p&gt;Ajouter l‚Äôutilisateur root pour la gestion des Realm (Royaume) dans Keycloak via la commande suivante :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$&amp;gt;&lt;/span&gt; bin/add-user-keycloak.sh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;En production, on passera par un Realm (Royaume) n‚Äôutilisant pas le syst√®me de fichier de stockage des utilisateurs/mots de passe mais plut√¥t un annuaire LDAP disponible dans la plupart des syst√®mes d‚Äôinformation.&lt;/p&gt;

&lt;h3 id=&quot;d√©marrer-keycloakrhsso&quot;&gt;D√©marrer Keycloak/RHSSO&lt;/h3&gt;
&lt;p&gt;Le d√©marrage de Keycloak se fait comme un Wildfly/JBoss EAP via la commande &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;standalone.sh&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$&amp;gt;&lt;/span&gt; bin/standalone.sh &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; 0.0.0.0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Il est bien s√ªr possible d‚Äôutiliser toute les fonctionnalit√©s de Wildlfy/JBoss EAP en terme d‚Äôadministration centralis√©e avec le mode domain, le clustering des sessions HTTP via la solution Infinispan int√©gr√©e ou bien le mod_cluster/Apache qui facilite le cycle de vie et l‚Äôadministration des clusters Apache/JBoss.&lt;/p&gt;

&lt;h2 id=&quot;configuration-du-realm-client-et-flow&quot;&gt;Configuration du Realm, Client et Flow&lt;/h2&gt;

&lt;p&gt;Configurer maintenant le Realm qui va contenir l‚Äôensemble des utilisateurs et des clients (applications).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-configure-realm.png&quot; alt=&quot;Configuration Realm&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pour la demo, nous utilisons une application cliente de type Javascript donc n‚Äôoubliez pas de configurer en mode &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public&lt;/code&gt; l‚Äôoption &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Access Type&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-configure-client.png&quot; alt=&quot;Configuration Client&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dans Browser Flow il suffit de rajouter le &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WebAuthn Authenticator&lt;/code&gt; executor dans le flow normal.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-configure-flow.png&quot; alt=&quot;Configuration Flow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dans la configuration du WebAuthn, n‚Äôoubliez pas de configurer le &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Relying Party Entity Name&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-configure-2fa.png&quot; alt=&quot;Configuration 2fa&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;enregistrement-dun-utilisateur&quot;&gt;Enregistrement d‚Äôun utilisateur&lt;/h2&gt;

&lt;p&gt;Passons maintenant √† l‚Äôenregistrement d‚Äôun utilisateur.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-register-user.png&quot; alt=&quot;Register User&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Le browser demande ensuite l‚Äôenregistrement de la clef pour l‚Äôauthentification future (cf la dialogue box avec l‚Äôempreinte digitale).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-register-key.png&quot; alt=&quot;Register Key&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Il suffit d‚Äôinserer ca clef Yubico FIDO2 compatible WebAuthn.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-yubico.jpg&quot; alt=&quot;Yubico Key&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ensuite il est possible de configurer un label pour ce processus d‚Äôauthentification &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WebAuthn Yubico Blue&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-register-key-label.png&quot; alt=&quot;Register Key Label&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;authentification-de-lutilisateur&quot;&gt;Authentification de l‚Äôutilisateur&lt;/h2&gt;

&lt;p&gt;L‚Äôauthentification de l‚Äôutilisateur est maintenant possible.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-authn-client.png&quot; alt=&quot;Authn User&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dans ce cas le browser demande cette fois une authentification via la clef Yubico (cf la dialogue box avec l‚Äôempreinte digitale).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-authn-client-key.png&quot; alt=&quot;Authn User Key&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dans le cas o√π l‚Äôutilisateur s‚Äôest tromp√© de clef ou bien √† oubli√© ca clef, voici le message d‚Äôerreur&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-authn-client-key-failed.png&quot; alt=&quot;Authn User Key Failed&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mais dans le cas o√π tout ce passe bien l‚Äôutilisateur sera correctement authentifi√© et redirig√© vers l‚Äôapplication cliente.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-authn-client-ok.png&quot; alt=&quot;User Authentification Ok&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;information-utilisateur&quot;&gt;Information utilisateur&lt;/h2&gt;

&lt;p&gt;Si l‚Äôon retourne sur la console d‚Äôadministration web des utilisateurs dans Keycloak/RHSSO, on peut verifier que l‚Äôenregistrement de la clef Yubico a bien √©tait fait. L‚Äôenregistrement contient notamment la clef publique de la clef Yubico.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kc-2fa-user-detail.png&quot; alt=&quot;User Detail&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Nous avons vu que la configuration et authentification via le standard WebAuthn est relativement simple avec Keycloak. Alors n‚Äôhesitez pas √† am√©liorer l‚Äôexperience de vos utilisateurs ainsi que la s√©curit√© de leur compte en activant tr√®s simplement cette option dans Keycloak/RHSSO.&lt;/p&gt;

&lt;h3 id=&quot;nb&quot;&gt;NB&lt;/h3&gt;

&lt;p&gt;Les fichiers de configuration seront disponibles bient√¥t dans un repo github.&lt;/p&gt;</content><author><name></name></author><category term="fr" /><category term="Keycloak" /><category term="Yubico" /><category term="2fa" /><category term="webauthn" /><summary type="html">Depuis quelque temps j‚Äôinterviens chez mes clients afin de mener des √©tudes d‚Äôarchitecture autour de Keycloak/RHSSO. Comme son nom l‚Äôindique, il s‚Äôagit d‚Äôune solution de SSO c‚Äôest √† dire d‚Äôun syst√®me unique d‚Äôauthentification et d‚Äôauthorisation. Le projet Keycloak a debut√© en 2014 et est donc relativement mature, la communaut√© autour de ce projet est tr√®s importante.</summary></entry><entry><title type="html">√âxecution d‚Äôun moteur de KYC en DMN avec Kogito</title><link href="http://0.0.0.0:4000/blog/2020/06/06/Execution-d'un-KYC-en-DMN.html" rel="alternate" type="text/html" title="√âxecution d'un moteur de KYC en DMN avec Kogito" /><published>2020-06-06T10:00:00-05:00</published><updated>2020-06-06T10:00:00-05:00</updated><id>http://0.0.0.0:4000/blog/2020/06/06/Execution-d'un-KYC-en-DMN</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2020/06/06/Execution-d'un-KYC-en-DMN.html">&lt;p&gt;Dans le pr√©cedent &lt;a href=&quot;/blog/2020/06/04/Le-standard-DMN-un-KYC-en-exemple.html&quot;&gt;post sur ce blog&lt;/a&gt; nous avons vu rapidement comment cr√©er sa d√©finition et modelisation des r√®gle d‚Äôun KYC bas√© sur le standard &lt;a href=&quot;https://fr.wikipedia.org/wiki/Decision_Model_and_Notation&quot;&gt;DMN&lt;/a&gt;. Nous allons voir comment faire tourner cet exemple et √©xecuter sur un moteur impl√©mentant le standard DMN.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;√âxecution d‚Äôun moteur KYC en DMN avec Kogito&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;introdution-kogito&quot;&gt;Introdution Kogito&lt;/h1&gt;

&lt;p&gt;Faisons un focus rapide sur &lt;a href=&quot;https://kogito.kie.org/&quot;&gt;Kogito&lt;/a&gt;. Kogito est un moteur de r√®gle orient√© cloud.
Ce moteur de r√®gle reprend en grande partie tout le coeur et le developpement de &lt;a href=&quot;https://www.drools.org/&quot;&gt;Drools&lt;/a&gt; et &lt;a href=&quot;https://jbpm.org/&quot;&gt;jBPM&lt;/a&gt; mais propose des fonctionnalit√©s purement Cloud notamment le fait qu‚Äôil est pr√©vu d‚Äô√™tre √©xecuter dans un container de type OCI / Docker et deploy√© sur un cluster Cloud K8S / Openshift par exemple.&lt;/p&gt;

&lt;h2 id=&quot;business-domain-first-approach&quot;&gt;Business Domain first approach&lt;/h2&gt;

&lt;p&gt;Un apport de Kogito au moteur Drools, c‚Äôest qu‚Äôil g√©n√©re automatiquement l‚ÄôAPI REST des r√®gles DMN. Dans notre exemple nous allons copier/coller le fichier DMN KYC du post pr√©c√©dent et le faire tourner tel quel avec Kogito. Kogito va proposer une API &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;KYC&lt;/code&gt; acceptant le model des &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Input&lt;/code&gt;. Il sera donc possible de faire un appel REST / HTTP avec des donn√©es m√©tiers sans tout le liant technique que nous aurions pu avoir avec l‚Äôimpl√©mentation purement Drools. Nous allons avoir donc une API orient√©e m√©tier d√©pourvue de sp√©cificit√© technique.&lt;/p&gt;

&lt;h1 id=&quot;execution-du-projet&quot;&gt;Execution du projet&lt;/h1&gt;

&lt;p&gt;Afin de pourvoir √©xecuter le modele de r√®gle KYC dans moteur Kogito il va falloir cloner le repository disponible sur Github.&lt;/p&gt;

&lt;h2 id=&quot;compilation&quot;&gt;Compilation&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; git clone   &lt;span class=&quot;nt&quot;&gt;--depth&lt;/span&gt; 1  &lt;span class=&quot;nt&quot;&gt;--branch&lt;/span&gt; blog  https://github.com/gautric/dmn-knative.git
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;dmn-knative&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;execution&quot;&gt;Execution&lt;/h2&gt;

&lt;p&gt;Nous allons copier le fichier KYC.dmn que nous avons fait dans le post pr√©c√©dent.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; curl &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; https://raw.githubusercontent.com/gautric/dmn-knative/master/src/main/resources/KYC.dmn &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; src/main/resources/KYC.dmn 2&amp;gt; /dev/null 

&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; mvn clean package quarkus:dev 

... OMIT ...

__  ____  __  _____   ___  __ ____  ______ 
 &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;/ __ &lt;span class=&quot;se&quot;&gt;\/&lt;/span&gt; / / / _ | / _ &lt;span class=&quot;se&quot;&gt;\/&lt;/span&gt; //_/ / / / __/ 
 -/ /_/ / /_/ / __ |/ , _/ ,&amp;lt; / /_/ /&lt;span class=&quot;se&quot;&gt;\ \ &lt;/span&gt;  
&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;__&lt;span class=&quot;se&quot;&gt;\_\_&lt;/span&gt;___/_/ |_/_/|_/_/|_|&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;___/___/   
2020-06-05 17:22:27,522 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;io.quarkus] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; dmn-knative 1.0-SNAPSHOT &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;powered by Quarkus 1.3.2.Final&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; started &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;3.600s. Listening on: http://0.0.0.0:8080
2020-06-05 17:22:27,525 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;io.quarkus] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Profile dev activated. Live Coding activated.
2020-06-05 17:22:27,526 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;io.quarkus] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Installed features: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;cdi, kogito, resteasy, resteasy-jackson, smallrye-openapi, swagger-ui]&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;swagger&quot;&gt;Swagger&lt;/h2&gt;

&lt;p&gt;D√®s que vous avez correctment la sortie standard pr√©c√©dente, il est possible d‚Äôacc√©der √† l‚ÄôURL suivante : &lt;a href=&quot;http://localhost:8080/&quot;&gt;http://localhost:8080/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vous allez atterrir sur la page swagger du moteur Kogito, une API KYC est disponible et peut √™tre utilis√©e directement via cette page ou bien un appel CURL.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kogito_dmn.png&quot; alt=&quot;Kogito DMN&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;lappel-curl&quot;&gt;L‚Äôappel CURL&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DMN_URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://localhost:8080

&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Content-Type: application/json&quot;&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DMN_URL&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/KYC  &lt;span class=&quot;nt&quot;&gt;--data-binary&lt;/span&gt; @- &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;EOF&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;  2&amp;gt; /dev/null | jq
{
  &quot;Amount&quot;: 250000,
  &quot;PEP&quot;: false,
  &quot;Fiscal Residency&quot;: &quot;JP&quot;
}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Attention la commande pr√©c√©dente utilise l‚Äôoutil &lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;jq&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vous devriez obtenir le r√©sultat suivant :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Amount Rule&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MEDIUM&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;KYC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Fiscal Residency Rule&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;LOW&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Amount&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;250000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;PEP Rule&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;LOW&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;PEP&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Level&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;function Level( input )&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Fiscal Residency&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;JP&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Nous voyons qu‚Äôavec Kogito le d√©tail de tous les calculs interm√©diaires des &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; est disponible, jusqu‚Äôau calcul final au niveau de la valeur KYC ici dans notre exemple ci-dessus. Cela est int√©ressant √† la fois pour du debugging ou bien pour une probl√©matique d‚Äôauditabilit√© du moteur.&lt;/p&gt;

&lt;h2 id=&quot;exemples&quot;&gt;Exemples&lt;/h2&gt;

&lt;p&gt;Des exemples sont disponibles dans le r√©pertoire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;data&lt;/code&gt; du projet que l‚Äôon vient de cloner.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Avec cette exemple, nous voyons que la complexit√© technique d‚Äôutiliser un moteur DMN est tr√®s faible via Kogito qui propose directement une API m√©tier. Il n‚Äôy a plus d‚Äôexcuse pour ne pas utiliser √† minima le standard &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DMN&lt;/code&gt; dans vos applications. Le projet Kogito est encore r√©cent mais rien ne vous empeche de proposer des am√©liorations et/ou suggestions.&lt;/p&gt;</content><author><name></name></author><category term="fr" /><category term="DMN" /><category term="Kogito" /><category term="KYC" /><summary type="html">Dans le pr√©cedent post sur ce blog nous avons vu rapidement comment cr√©er sa d√©finition et modelisation des r√®gle d‚Äôun KYC bas√© sur le standard DMN. Nous allons voir comment faire tourner cet exemple et √©xecuter sur un moteur impl√©mentant le standard DMN.</summary></entry><entry><title type="html">Le standard DMN, un KYC en exemple</title><link href="http://0.0.0.0:4000/blog/2020/06/04/Le-standard-DMN-un-KYC-en-exemple.html" rel="alternate" type="text/html" title="Le standard DMN, un KYC en exemple" /><published>2020-06-04T10:00:00-05:00</published><updated>2020-06-04T10:00:00-05:00</updated><id>http://0.0.0.0:4000/blog/2020/06/04/Le-standard-DMN-un-KYC-en-exemple</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2020/06/04/Le-standard-DMN-un-KYC-en-exemple.html">&lt;p&gt;Pendant un certain temps les moteurs de r√®gles √©taient fortement d√©pendant des fournisseurs de solution. Mais depuis que le standard DMN pour Decision Model and Notation est maintenant disponible l‚Äôensemble des √©diteurs Opensource ou Closesource fournisse une impl√©mentation de ce standard.
Nous allons voir avec un exemple rapide comment utiliser DMN.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Le standard DMN, un KYC en exemple&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;introdution&quot;&gt;Introdution&lt;/h1&gt;

&lt;p&gt;DMN est une norme de l‚Äô&lt;a href=&quot;https://www.omg.org/&quot;&gt;OMG&lt;/a&gt;. Cette norme a pour objectif de standardiser la mod√©lisation et le r√©f√©rentiel des r√®gles de d√©cision dans les applications ayant des besoins de scoring, d‚Äô√©valuation et/ou d‚Äôaide √† la d√©cision.&lt;/p&gt;

&lt;p&gt;La norme se propose de faciliter le d√©veloppement des r√®gles avec des patterns de r√®gles bien connues, comme par exemple les tables de d√©cision. Elle propose un langage de programmation standardiser appel√© FEEL &lt;em&gt;Friendly Enough Expression Language&lt;/em&gt;. Ce langage se veut tr√®s proche des macros Excel, facilitant l‚Äôappropriation du DMN par des √©quipes m√©tiers.&lt;/p&gt;

&lt;p&gt;DMN est aussi une norme d‚Äô√©l√©ments graphique. Chaque √©l√©ment graphique correspond √† un pattern qui poss√®de des entr√©es, un traitement et une sortie. Les √©l√©ments graphique sont reli√©s entre eux dans un &lt;em&gt;arbre&lt;/em&gt; de d√©pendance d‚Äôex√©cution des r√®gles. Au fur et √† mesure de l‚Äôex√©cution des r√®gles on op√®re une r√©duction du nombre d‚Äô√©l√©ment pour arriver au dernier √©l√©ment qui contiendra la d√©cision finale.&lt;/p&gt;

&lt;p&gt;Le standard DMN est disponible en suivant le lien : &lt;a href=&quot;http://www.omg.org/spec/DMN/1.0/&quot;&gt;http://www.omg.org/spec/DMN/1.0/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;tck&quot;&gt;TCK&lt;/h2&gt;

&lt;p&gt;Il existe un outil en ligne listant l‚Äôensemble des impl√©mentation actuellement disponible et leur degr√© de maturit√©.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://dmn-tck.github.io/tck/&quot;&gt;https://dmn-tck.github.io/tck/&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;un-exemple--kyc&quot;&gt;Un Exemple : KYC&lt;/h1&gt;

&lt;p&gt;Dans notre exemple nous allons proc√©der √† l‚Äô√©valuation d‚Äôun nouveau client bancaire. Ce processus d‚Äô√©valuation est commun√©ment appeler KYC pour Know Your Customer. Ce processus va calculer un score en fonction de donn√©es en entr√©e. Le score sera par la suite interpr√©t√© par le conseiller bancaire afin accepter ou pas le nouveau client dans son fichier. Il se peut que la note du score n√©cessite simplement l‚Äôapprobation √† un niveau sup√©rieur.&lt;/p&gt;

&lt;h2 id=&quot;les-input&quot;&gt;Les Input&lt;/h2&gt;

&lt;p&gt;Afin de pouvoir calculer le score il est n√©cessaire d‚Äôavoir les inputs. Pour cela nous allons avoir besoin de trois entr√©es :&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;PEP&lt;/em&gt;&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Pour Political Exposed People&lt;/li&gt;
      &lt;li&gt;de type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;boolean&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;Amount&lt;/em&gt;&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Pour la quantit√© de son apport&lt;/li&gt;
      &lt;li&gt;de type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;number&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;Fiscal Residency&lt;/em&gt;&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Pour la localisation de sa r√©sidence fiscal&lt;/li&gt;
      &lt;li&gt;de type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Dans le contexte DMN il suffit simplement d‚Äôutiliser le type de &lt;em&gt;box&lt;/em&gt; suivantes :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dmn_input.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Il est bien s√ªr possible de d√©finir des types d‚Äôentr√©e plus complexe.&lt;/p&gt;

&lt;h2 id=&quot;les-decision&quot;&gt;Les Decision&lt;/h2&gt;

&lt;p&gt;Le principal √©l√©ment du DMN est le concept de Decision. Cette &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; va calculer un r√©sultat en fonction d‚Äôune ou plusieurs entr√©e.
On utilise pour cela les &lt;em&gt;box&lt;/em&gt; suivantes dans le modeleur.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dmn_decision_box.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On lie ensuite les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Input&lt;/code&gt; avec les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dmn_decision.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ensuite, il est possible de lier les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; entre elles, afin de remonter les sorties des premi√®res &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; dans une autre &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dmn_decision_link.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ici &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Input&lt;/code&gt; &lt;em&gt;PEP&lt;/em&gt; est utilis√© par la &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; &lt;em&gt;PEP Rule&lt;/em&gt;, qui sera lui utilis√© dans la &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; &lt;em&gt;KYC&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;type-de-d√©cision&quot;&gt;Type de d√©cision&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Literal expression
    &lt;ul&gt;
      &lt;li&gt;Il s‚Äôagit d‚Äôune formule/code FEEL&lt;/li&gt;
      &lt;li&gt;par ex : A - B,  SUM(A, B, C)&lt;/li&gt;
      &lt;li&gt;ex: &lt;img src=&quot;/img/dmn_explang.png&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Decision Table
    &lt;ul&gt;
      &lt;li&gt;Il s‚Äôagit d‚Äôune liste de r√®gle m√©tier qui seront ex√©cut√©es&lt;/li&gt;
      &lt;li&gt;ex: &lt;img src=&quot;/img/dmn_decisiontable.png&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Context
    &lt;ul&gt;
      &lt;li&gt;Il s‚Äôagit d‚Äôune liste de variables associ√©es √† des valeurs&lt;/li&gt;
      &lt;li&gt;Chaque valeur de la liste peut etre le resultat d‚Äôune  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Literal expression&lt;/code&gt;, d‚Äôune &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision Table&lt;/code&gt; ou d‚Äôune &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BKM&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;ex: &lt;img src=&quot;/img/dmn_context.png&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;les-business-knowledge-model&quot;&gt;Les Business Knowledge Model&lt;/h2&gt;

&lt;p&gt;Les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Business Knowledge Model&lt;/code&gt; fournissent au modeleur la possibilit√© de r√©utiliser des briques logiques. Pour un d√©veloppeur, les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BKM&lt;/code&gt; peuvent √™tre vues comme des fonctions r√©utilisable dans une ou plusieurs &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt;, notamment car elles s‚Äôappellent directement dans les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; et qu‚Äôelles poss√®dent des param√®tres d‚Äôentr√©es.&lt;/p&gt;

&lt;p&gt;Comme pour les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; il existe trois types de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BKM&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dmn_bkm.png&quot; alt=&quot;DMN BKM&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dans notre cas nous allons utiliser une &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision Table&lt;/code&gt; pour calculer le score pour chaque r√®gle.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dmn_function.png&quot; alt=&quot;DMN Function&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On relie ensuite le &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BKM&lt;/code&gt; avec la &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dmn_bkm_full.png&quot; alt=&quot;Full DMN BKM&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;result&quot;&gt;Result&lt;/h2&gt;

&lt;p&gt;C‚Äôest la &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; KYC qui va contenir le r√©sultat de ce petit moteur de r√®gle. Dans notre cas, nous faisons la somme des trois appel √† la &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BKM&lt;/code&gt; Level de chaque retour des &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; rule. Bien sur, cette fonction peut √™tre plus ou moins compliqu√©e car elle utilise le langage de programmation FEEL &lt;em&gt;(Friendly Enough Expression Language)&lt;/em&gt;. Il s‚Äôagit d‚Äôun langage qui ressemble un peu aux macros Excel.
.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dmn_result.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pour r√©sumer, les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Input&lt;/code&gt; sont donc utilis√©s dans les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt;, ces &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; sont reli√©es √† des &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BKM&lt;/code&gt; ou bien d‚Äôautres &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; qui au fur et √† mesure se termine vers une seule &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt;.
Comme on l‚Äôa vue pr√©c√©demment, la &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; finale peut avoir plusieurs type de retour.
Par convention on partira du bas pour les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Input&lt;/code&gt; puis √©tage par √©tage on empilera les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decision&lt;/code&gt; jusqu‚Äô√† les r√©duire en une seule.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;J‚Äôesp√®re que cette br√®ve introduction √† &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DMN&lt;/code&gt; vous aura convaincu de l‚Äôutiliser dans vos projets de moteur de r√®gles. Le fait de standardiser les sp√©cifications du moteur de r√®gles permettra par exemple de pouvoir changer de fournisseur de moteur de r√®gle. En fonction des fournisseur, une documentation peut √™tre automatiquement g√©n√©r√©e facilitant le fond documentaire des projets et l‚Äôinteraction avec les analystes business.&lt;/p&gt;

&lt;p&gt;Nous verrons dans un prochain post comment ex√©cuter le moteur de KYC.&lt;/p&gt;

&lt;p&gt;Vous pouvez voir directement &lt;a href=&quot;https://kiegroup.github.io/kogito-online/?file=https://github.com/gautric/dmn-knative/blob/master/src/main/resources/KYC.dmn#/editor/dmn&quot;&gt;le resultat du DMN avec cet √©diteur en ligne&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="fr" /><category term="DMN" /><category term="KYC" /><category term="standard" /><summary type="html">Pendant un certain temps les moteurs de r√®gles √©taient fortement d√©pendant des fournisseurs de solution. Mais depuis que le standard DMN pour Decision Model and Notation est maintenant disponible l‚Äôensemble des √©diteurs Opensource ou Closesource fournisse une impl√©mentation de ce standard. Nous allons voir avec un exemple rapide comment utiliser DMN.</summary></entry><entry><title type="html">MQTTiser l‚ÄôAPI Autolib avec Node-Red</title><link href="http://0.0.0.0:4000/blog/2018/04/21/MQTTiser-l-API-Autolib-avec-Node-Red.html" rel="alternate" type="text/html" title="MQTTiser l'API Autolib avec Node-Red" /><published>2018-04-21T10:00:00-05:00</published><updated>2018-04-21T10:00:00-05:00</updated><id>http://0.0.0.0:4000/blog/2018/04/21/MQTTiser-l-API-Autolib-avec-Node-Red</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2018/04/21/MQTTiser-l-API-Autolib-avec-Node-Red.html">&lt;p&gt;Apr√®s un petit temps de silence, pour des raisons personnelles et notamment l‚Äôarriv√© d‚Äôun petit Thomas, voici un nouveau post. √âtant un utlisateur occassionnel d‚Äô&lt;a href=&quot;https://fr.wikipedia.org/wiki/Autolib%27_(Paris)&quot;&gt;Autolib&lt;/a&gt; j‚Äôai besoin d‚Äôavoir en flux continu l‚Äô√©tat des stations √† cot√© de chez moi (nb de voiture, nb de place). Autour de chez moi, j‚Äôai plusieurs stations Autolib et je dois consulter r√©gulierement l‚Äôapplication iPhone en fonction de mes besoins. Afin de me simplifier la vie j‚Äôai install√© et configur√© chez moi la solution &lt;a href=&quot;https://www.home-assistant.io&quot;&gt;HomeAssistant&lt;/a&gt;, j‚Äôutilisais pour cela l‚Äô&lt;a href=&quot;https://opendata.paris.fr/page/home/&quot;&gt;API de Paris&lt;/a&gt; en mode &lt;a href=&quot;https://fr.wikipedia.org/wiki/REST&quot;&gt;REST&lt;/a&gt;/&lt;a href=&quot;https://en.wikipedia.org/wiki/HTTP&quot;&gt;HTTP&lt;/a&gt;.
Malheureusement, le nombre de requetes est limit√©e et plus on doit superviser de stations (voiture, place libre) plus on doit faire d‚Äôappels REST, HomeAssistant est un tr√®s bon produit mais un peu limit√© en terme de scripting du composant &lt;a href=&quot;https://www.home-assistant.io/components/rest_command/&quot;&gt;RESTful&lt;/a&gt;.
Je me suis dit, pourquoi ne pas :&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;MQTTiser l‚ÄôAPI Autolib avec Node-Red&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;architecture&quot;&gt;Architecture&lt;/h2&gt;

&lt;p&gt;Voila en r√©sum√© l‚Äôarchitecture de la solution que l‚Äôon va mettre en place.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/mqtt-archi.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Description du sch√©ma de principe :
    &lt;ul&gt;
      &lt;li&gt;Un flux/flow Node-Red va consommer r√©gulierement la &lt;em&gt;DataParis API&lt;/em&gt;.&lt;/li&gt;
      &lt;li&gt;Le retour est pars√© et d√©coup√© pour chacune des &lt;em&gt;stations Autolib&lt;/em&gt;.&lt;/li&gt;
      &lt;li&gt;Chaque message est envoy√© dans le &lt;em&gt;topic MQTT&lt;/em&gt; correspond √† sa station.&lt;/li&gt;
      &lt;li&gt;Le client &lt;em&gt;HomeAssistant&lt;/em&gt; s‚Äôabonne ensuite aux topics des stations souhait√©es.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;api-de-paris&quot;&gt;API de Paris&lt;/h2&gt;

&lt;p&gt;L‚ÄôAPI de Paris propose un grand nombre d‚Äô&lt;a href=&quot;https://opendata.paris.fr/explore/&quot;&gt;Objets&lt;/a&gt; sur lequels il est possible de requeter (PLU, liste des pr√©noms, Titularisations). La plupart du temps ces donn√©es sont des donn√©es froides, ceux sont des extracts de base de donn√©es interne √† la Ville de Paris . Seules deux sources de donn√©es sont temps r√©el c‚Äôest √† dire qu‚Äôelles sont mise √† jour lors de chaque appel, il s‚Äôagit du status des stations &lt;a href=&quot;https://opendata.paris.fr/explore/dataset/velib-disponibilite-en-temps-reel/information/&quot;&gt;Velib&lt;/a&gt; et des stations &lt;a href=&quot;https://opendata.paris.fr/explore/dataset/autolib-disponibilite-temps-reel/information/&quot;&gt;Autolib&lt;/a&gt;.
Dans notre cas, nous allons utiliser cette derni√®re :&lt;/p&gt;

&lt;p&gt;Cette API indique en temps r√©el l‚Äô√©tat des 1119 stations avec la requete HTTP suivante (on se limitera ici √† 2 stations) :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;curl https://opendata.paris.fr/api/records/1.0/search/?dataset&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;autolib-disponibilite-temps-reel&amp;amp;rows&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;nhits&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1119&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;parameters&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dataset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;autolib-disponibilite-temps-reel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;timezone&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;UTC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;rows&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;format&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;json&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;records&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;datasetid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;autolib-disponibilite-temps-reel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;recordid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a1c22a2c66ac55e6de9b0badcf5fe4f71c33e652&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;fields&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ok&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;city&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Paris&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;kind&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;STATION&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;station_type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;station&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;charging_status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;operational&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;rental_status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;operational&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;cars_counter_bluecar&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;cars&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;public_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Paris/Ordener/65&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;geo_point&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;48.8913517&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.3507171&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;charge_slots&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;postal_code&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;75018&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;cars_counter_utilib_1.4&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;subscription_status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;nonexistent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;slots&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;paris-ordener-65&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;address&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;65 rue Ordener&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;cars_counter_utilib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;geometry&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Point&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;coordinates&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.3507171&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;48.8913517&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;datasetid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;autolib-disponibilite-temps-reel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;recordid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;8b1396096c4c2761ec5120ffdd3fd824b18a824d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;fields&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ok&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;city&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Paris&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;kind&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;STATION&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;station_type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;station&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;charging_status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;operational&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;rental_status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;operational&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;cars_counter_bluecar&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;cars&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;public_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Paris/Raymond Losserand/229&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;geo_point&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;48.828&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.306022&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;charge_slots&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;postal_code&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;75014&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;cars_counter_utilib_1.4&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;subscription_status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;nonexistent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;slots&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;paris-raymondlosserand-229&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;address&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;229 Rue Raymond Losserand&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;cars_counter_utilib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;geometry&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Point&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;coordinates&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.306022&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;48.828&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Il n‚Äôest pas difficile de comprendre le sch√©ma et le resultat obtenu, l‚Äôensemble des informations n√©cessaire √† note besoin sont l√† :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;cars :
    &lt;ul&gt;
      &lt;li&gt;nombre de voiture dispo sur la station.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;slots :
    &lt;ul&gt;
      &lt;li&gt;nombre de place libre sur la station.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nous avons aussi des informations de type descriptifs (nom de la station, coordonn√©es GPS, etc‚Ä¶). Elles pourront etre utilis√©s dans d‚Äôautres cas d‚Äôusage bien s√ªr, sur une carte par exemple.&lt;/p&gt;

&lt;h2 id=&quot;mqtt&quot;&gt;MQTT&lt;/h2&gt;

&lt;p&gt;Le Protocole MQTT est un protocole MoM dans le domaine de l‚ÄôIoT. Ce protocole est largement utilis√© dans le monde de l‚ÄôInternet des Objets car il est ouvert, leger et consommant peu de ressources reseau. Dans la version 3.x, il n‚Äôimplemente pas de gestion de Transaction, et se limite au mode Topic ou autrement appel√© Publish/Subscribe. Plusieurs niveaux de QoS sont d√©finisable tant sur le message, sur le topic que sur le broker lui-m√™me. Plusieurs features sont int√©ressantes notamment la notion d‚Äôadressage hierarchique des topics, il est possible de s‚Äôabonner dans ce cas l√† √† tout un sous-groupe de topic :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;/nasdaq/#&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Pour tout les indices du nasdaq&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;/meteo/fr/92/#&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Pour toute les villes du d√©partements du 92.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Utilis√© au dessus de TCP/IP et bind√© sur le port 1883, il est standardis√© par l‚Äô&lt;a href=&quot;https://www.oasis-open.org/&quot;&gt;OASIS&lt;/a&gt;, l‚Äô&lt;a href=&quot;https://www.iso.org&quot;&gt;ISO&lt;/a&gt; et &lt;a href=&quot;http://www.iana.org/&quot;&gt;IANA&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;broker-mqtt&quot;&gt;Broker MQTT&lt;/h3&gt;

&lt;p&gt;Plusieurs Broker MQTT existent sur le march√©, nous allons en voir deux OpenSource d√©velopp√© sur des langages diff√©rents. Nous allons comme cela test√© leur interoperabilit√©.&lt;/p&gt;

&lt;h4 id=&quot;mosquitto&quot;&gt;&lt;a href=&quot;https://mosquitto.org/&quot;&gt;Mosquitto&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;D√©velopp√© par la Fondation Eclispe, il est √©crit en C. Il possede une bon support de la communaut√© et est r√©guli√®rement mis √† jour.
Disponible sur l‚Äôensemble des environement Unix like, il est distribu√© par les systemes de packaging de chaque OS.&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Version&lt;/td&gt;
      &lt;td&gt;1.4.15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Date&lt;/td&gt;
      &lt;td&gt;Fev 2018&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;License&lt;/td&gt;
      &lt;td&gt;EPL/EDL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Langage&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;warn&quot;&gt;
Je n'ai pas encore trouv√© de syst√®me de supervision un peu serieux, je suis preneur par vos retours.
&lt;/div&gt;
&lt;p&gt;Dans ce post nous allons simplement utilis√© le client mosquitto qui est tr√®s facile d‚Äôutilisation.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mosquitto_sub &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &amp;lt;&lt;span class=&quot;nb&quot;&gt;id &lt;/span&gt;client&amp;gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; &amp;lt;host&amp;gt; &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; &amp;lt;topic&amp;gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;

mosquitto_sub &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; mosquitto_client &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; localhost &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/autolib/boulognebillancourt/#&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;info&quot;&gt;
Mosquitto est disponible en mode container Docker.
&lt;/div&gt;

&lt;h4 id=&quot;activemq-artemis&quot;&gt;ActiveMQ Artemis&lt;/h4&gt;

&lt;p&gt;La fondation Apache quand √† elle propose le project commumautaire &lt;a href=&quot;https://activemq.apache.org/artemis/&quot;&gt;Apache ActiveMQ Artemis&lt;/a&gt;. Il s‚Äôagit du petit fr√®re du projet &lt;a href=&quot;https://activemq.apache.org/&quot;&gt;Apache ActiveMQ&lt;/a&gt;. Comme souvent dans les projet de la Fondation, le projet est developp√© en Java. Au contraire de Mosquitto qui est mono protocole, Artemis support un grand nombre de protocole ouvert comme : &lt;a href=&quot;http://www.amqp.org/&quot;&gt;AMQP v1.0&lt;/a&gt;, MQTT, &lt;a href=&quot;https://stomp.github.io/&quot;&gt;STOMP&lt;/a&gt;, &lt;a href=&quot;http://activemq.apache.org/openwire.html&quot;&gt;OpenWire&lt;/a&gt;. Il est compatible &lt;a href=&quot;https://jcp.org/en/jsr/detail?id=170&quot;&gt;JMS 1.0&lt;/a&gt; et &lt;a href=&quot;https://jcp.org/en/jsr/detail?id=368&quot;&gt;2.0&lt;/a&gt; pour les utilisateurs de l‚ÄôAPI JMS. Il est aussi facilement clusterisable afin de garantir une haute disponible.&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Version&lt;/td&gt;
      &lt;td&gt;2.5.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Date&lt;/td&gt;
      &lt;td&gt;Mars 2018&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;License&lt;/td&gt;
      &lt;td&gt;Apache 2.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Langage&lt;/td&gt;
      &lt;td&gt;Java&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;info&quot;&gt;
ActiveMQ Artemis vient en standard avec un outil de monitoring
&lt;/div&gt;

&lt;h2 id=&quot;node-red&quot;&gt;Node-red&lt;/h2&gt;

&lt;p&gt;Le project Node-Red est un outil de creation et d‚Äôexecution &lt;a href=&quot;http://www.enterpriseintegrationpatterns.com/&quot;&gt;EIP&lt;/a&gt; d√©di√© √† l‚ÄôIoT et execut√© sur la plateforme &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;NodeJs&lt;/a&gt;. C‚Äôest un outil l√©ger tout en disposant d‚Äôune IHM complete de cr√©ation de flow. L‚ÄôIHM permet de cr√©er des flows de traitement en assemblant et reliant des composants d‚Äôentr√©e et/ou sortie en eux via des liens.&lt;/p&gt;

&lt;p&gt;Voici une liste non exhaustive des composants disponible :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;mqtt in/out.&lt;/li&gt;
  &lt;li&gt;email in/out.&lt;/li&gt;
  &lt;li&gt;file in/out.&lt;/li&gt;
  &lt;li&gt;http/tcp/udp in/out.&lt;/li&gt;
  &lt;li&gt;timer, switch, change, range, join, sort, batch, function, debug, log.&lt;/li&gt;
  &lt;li&gt;csv, html, json, yaml, xml, html.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lorsque le flow est valid√©, il suffit simplement de le deployer pour l‚Äôexecuter directement.&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Version&lt;/td&gt;
      &lt;td&gt;v0.18.4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Date&lt;/td&gt;
      &lt;td&gt;Jan 2018&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;License&lt;/td&gt;
      &lt;td&gt;Apache 2.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Langage&lt;/td&gt;
      &lt;td&gt;JavaScript&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;info&quot;&gt;
Node-Red s'execute tr√®s bien sur un RaspberryPi
&lt;/div&gt;

&lt;h2 id=&quot;flow-autolib&quot;&gt;Flow Autolib&lt;/h2&gt;

&lt;p&gt;Pour notre use-case, nous allons faire un appel toute les 20s (cf info) sur l‚ÄôAPI de Paris, on verifie rapidement que l‚Äôon recupere bien un retour HTTP/200.
On d√©coupe ensuite la liste des stations message par message. Puis on cr√©e dynamiquement pour chaque message et donc chaque station, le bon adressage de Topic pour l‚Äôenvoie au broker MQTT. Le composant RBE est simplement l√† pour faire transiter le message que si il y a effectivement un changement de contenu.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/mqtt-autolib-flow.png&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;info&quot;&gt;
L'API de Paris est limit√©e 5000 req/j.
Cela fait dans une journ√©e, pas plus d'une requete toute les 17s.
Donc pour etre large, j'ai pris toutes les 20s.
&lt;/div&gt;

&lt;p&gt;Le code du flow est disponible sur le repository suivant :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gautric/mqtt-4-autolib&quot;&gt;https://github.com/gautric/mqtt-4-autolib/blob/master/flows_mbp.g.a.net.json&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;r√©sultat&quot;&gt;R√©sultat&lt;/h2&gt;

&lt;h3 id=&quot;monitoring-activemq&quot;&gt;Monitoring ActiveMQ&lt;/h3&gt;

&lt;p&gt;Nous voyons bien dans l‚Äôoutil de monitoring les divers topics qui dependent directement des stations Autolib, nous voyons aussi la connexion de deux clients MQTT, l‚Äôun √©tant le Node-Red, l‚Äôautre le client Mosquitto.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/mqtt-artemis-monitoring.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;J‚Äôai configur√© les messages MQTT afin d‚Äôetre en mode retain √† minima, c‚Äôest pour cela que l‚Äôon retrouve un prefix technique √† l‚Äôadressage des topics des stations Autolib. Cette fonctionnalit√© permettra de conserver une derni√®re valeur si HomeAssistant tombe ou bien le flux Node-Red.&lt;/p&gt;

&lt;h3 id=&quot;dashboard-homeassistant&quot;&gt;Dashboard HomeAssistant&lt;/h3&gt;

&lt;p&gt;Mon Dashboard HomeAssistant commence √† √™tre bien complet avec plusieurs onglets pour chaque cas d‚Äôusage. J‚Äôai un onglet en particuler qui affiche l‚Äôensemble des informations de transport dont Autolib, la RATP ainsi que le traffic des voitures en IDF.&lt;/p&gt;

&lt;h4 id=&quot;configuration&quot;&gt;Configuration&lt;/h4&gt;

&lt;p&gt;Apr√®s avoir envoy√© les messages dans le broker ActiveMQ Artemis, il faut que le Dashboard HomeAssistant puisse lire correctement les donn√©es. Pour cela, il suffira de rajouter dans sa liste dans le fichier sensor.yaml, les sensors de type MQTT. Il suffit de comprendre le sch√©ma du message recu et de r√©cuperer le bon √©l√©ment du message.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mqtt&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Autolib&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Boulogne-Billancourt/Henri&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Martin/2&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Cars&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;state_topic&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/autolib/boulognebillancourt/henrimartin/2&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;value_template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;\{\{value_json.fields.cars\}\}'&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;unit_of_measurement&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mqtt&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Autolib&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Boulogne-Billancourt/Henri&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Martin/2&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Slots&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;state_topic&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/autolib/boulognebillancourt/henrimartin/2&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;value_template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;\{\{value_json.fields.slots\}\}'&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;unit_of_measurement&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;.....&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mqtt&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Autolib&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Last&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Update&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;state_topic&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/autolib/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;lastCall&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;unit_of_measurement&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;screenshot&quot;&gt;ScreenShot&lt;/h4&gt;

&lt;p&gt;Et pour finir, voici le r√©sultant dans le Dashboard HomeAssistant. J‚Äôai rajout√© un petit hook dans le flow nominal afin d‚Äôavoir l‚Äôheure de la derni√®re mise √† jour des donn√©es. Il s‚Äôagit de verifier si tout ce passe bien.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/mqtt-homeassistant.png&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;mosquitto-client&quot;&gt;Mosquitto Client&lt;/h4&gt;

&lt;p&gt;L‚Äôutilisation du client mosquitto est interop√©rable facilement avec le broker ActiveMQ Artemis.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mosquitto_sub &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; mosquitto_client &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; localhost &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/autolib/boulognebillancourt/#&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;

/autolib/boulognebillancourt/henrimartin/2 &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;datasetid&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;autolib-disponibilite-temps-reel&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;recordid&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;a165c1342525a1c27a24eb1cdf781eddf6aaa149&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;fields&quot;&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;status&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;ok&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;city&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Boulogne-Billancourt&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;kind&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;STATION&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;station_type&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;station&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;charging_status&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;nonexistent&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;rental_status&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;operational&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;cars_counter_bluecar&quot;&lt;/span&gt;:1,&lt;span class=&quot;s2&quot;&gt;&quot;cars&quot;&lt;/span&gt;:1,&lt;span class=&quot;s2&quot;&gt;&quot;public_name&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Boulogne-Billancourt/Henri Martin/2&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;geo_point&quot;&lt;/span&gt;:[48.8365078,2.2524132],&lt;span class=&quot;s2&quot;&gt;&quot;charge_slots&quot;&lt;/span&gt;:0,&lt;span class=&quot;s2&quot;&gt;&quot;postal_code&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;92100&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;cars_counter_utilib_1.4&quot;&lt;/span&gt;:0,&lt;span class=&quot;s2&quot;&gt;&quot;subscription_status&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;nonexistent&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;slots&quot;&lt;/span&gt;:1,&lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;boulognebillancourt-henrimartin-2&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;address&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;2 rue Henri Martin&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;cars_counter_utilib&quot;&lt;/span&gt;:0&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;geometry&quot;&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Point&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;coordinates&quot;&lt;/span&gt;:[2.2524132,48.8365078]&lt;span class=&quot;o&quot;&gt;}}&lt;/span&gt;

/autolib/boulognebillancourt/reine/12 &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;datasetid&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;autolib-disponibilite-temps-reel&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;recordid&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;885e5ba23a48e4c519ed9eded9422628dec6ef14&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;fields&quot;&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;status&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;ok&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;city&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Boulogne-Billancourt&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;kind&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;STATION&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;station_type&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;station&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;charging_status&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;nonexistent&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;rental_status&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;operational&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;cars_counter_bluecar&quot;&lt;/span&gt;:4,&lt;span class=&quot;s2&quot;&gt;&quot;cars&quot;&lt;/span&gt;:4,&lt;span class=&quot;s2&quot;&gt;&quot;public_name&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Boulogne-Billancourt/Reine/12&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;geo_point&quot;&lt;/span&gt;:[48.8388074,2.2505008],&lt;span class=&quot;s2&quot;&gt;&quot;charge_slots&quot;&lt;/span&gt;:0,&lt;span class=&quot;s2&quot;&gt;&quot;postal_code&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;92100&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;cars_counter_utilib_1.4&quot;&lt;/span&gt;:0,&lt;span class=&quot;s2&quot;&gt;&quot;subscription_status&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;nonexistent&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;slots&quot;&lt;/span&gt;:1,&lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;boulognebillancourt-reine-12&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;address&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;12 bis Route de la Reine&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;cars_counter_utilib&quot;&lt;/span&gt;:0&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;geometry&quot;&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Point&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;coordinates&quot;&lt;/span&gt;:[2.2505008,48.8388074]&lt;span class=&quot;o&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;En conclusion, pourquoi faire simple quand on peut faire compliquer. En fait, j‚Äôutilise un broker MQTT pour un autre cas d‚Äôusage dans ma domotique, donc je rentabilise bien l‚Äôutilisation de mon broker. Pour √™tre totalement transparent, le broker Mosquitto est largement suffisant pour ma domotique, Artemis bien que beaucoup plus complet et un peu overkill pour mon usage. Je voulais simplement remercier la limite de l‚ÄôAPI de Paris qui m‚Äôa permis de faire un petit projet d‚Äôint√©gration bien sympa je trouve et toujours dans la philosophie standard ouvert, interoperabilit√© et projets commumnutaires OpenSource.&lt;/p&gt;

&lt;p&gt;En esperant, vous avoir int√©ress√© par ce post, n‚Äôh√©sitez pas √† me faire vos retours,&lt;/p&gt;</content><author><name></name></author><category term="fr" /><category term="MQTT" /><category term="node-red" /><category term="flow" /><category term="api" /><category term="Paris" /><category term="Autolib" /><summary type="html">Apr√®s un petit temps de silence, pour des raisons personnelles et notamment l‚Äôarriv√© d‚Äôun petit Thomas, voici un nouveau post. √âtant un utlisateur occassionnel d‚ÄôAutolib j‚Äôai besoin d‚Äôavoir en flux continu l‚Äô√©tat des stations √† cot√© de chez moi (nb de voiture, nb de place). Autour de chez moi, j‚Äôai plusieurs stations Autolib et je dois consulter r√©gulierement l‚Äôapplication iPhone en fonction de mes besoins. Afin de me simplifier la vie j‚Äôai install√© et configur√© chez moi la solution HomeAssistant, j‚Äôutilisais pour cela l‚ÄôAPI de Paris en mode REST/HTTP. Malheureusement, le nombre de requetes est limit√©e et plus on doit superviser de stations (voiture, place libre) plus on doit faire d‚Äôappels REST, HomeAssistant est un tr√®s bon produit mais un peu limit√© en terme de scripting du composant RESTful. Je me suis dit, pourquoi ne pas :</summary></entry><entry><title type="html">Camel XML XPath XSLT Aggregator</title><link href="http://0.0.0.0:4000/blog/2016/12/03/Camel-XML-XsltAggregationStrategy.html" rel="alternate" type="text/html" title="Camel XML XPath XSLT Aggregator" /><published>2016-12-03T09:00:00-06:00</published><updated>2016-12-03T09:00:00-06:00</updated><id>http://0.0.0.0:4000/blog/2016/12/03/Camel-XML-XsltAggregationStrategy</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2016/12/03/Camel-XML-XsltAggregationStrategy.html">&lt;p&gt;This mouth I went to &lt;a href=&quot;https://en.wikipedia.org/wiki/Greece&quot;&gt;Greece&lt;/a&gt; for a customer of mine. I worked at Athens on &lt;a href=&quot;http://camel.apache.org/&quot;&gt;Camel&lt;/a&gt; integration with Mainframe legacy stuff.
Customer would like to use XML message format during the full Camel route process. His wish was to reuse some Camel routes as new service components.
Fortunately, Camel framework meets all of this requirements out of the box. We will this in this simple sample how to do it.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;a Camel sample with XML messages and XSL transformation&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;camel-framework&quot;&gt;Camel framework&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://camel.apache.org/&quot;&gt;Camel project&lt;/a&gt; is managed by the Apache foundation. Camel empowers you to define routing and mediation rules in a variety of domain-specific languages, including a Java-based Fluent API, Spring or Blueprint XML Configuration files, and a Scala DSL. This means you get smart completion of routing rules in your IDE, whether in a Java, Scala or XML editor. &lt;em&gt;(&lt;a href=&quot;http://camel.apache.org/&quot;&gt;extract of the Camel website&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Apache Camel uses URIs to work directly with any kind of Transport or messaging model such as HTTP, ActiveMQ, JMS, JBI, SCA, MINA or CXF, as well as pluggable Components and Data Format options. Apache Camel is a small library with minimal dependencies for easy embedding in any Java application. Apache Camel lets you work with the same API regardless which kind of Transport is used - so learn the API once and you can interact with all the Components provided out-of-box. &lt;em&gt;(&lt;a href=&quot;http://camel.apache.org/&quot;&gt;extract of the Camel website&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;message&quot;&gt;Message&lt;/h3&gt;

&lt;p&gt;A Camel message contains headers and body part. &lt;strong&gt;Headers&lt;/strong&gt; can be use to add some new informations (meta data) for the camel current process or next components. &lt;strong&gt;Body&lt;/strong&gt; is the payload of the Camel message. During Camel process, the payload could change on each step and sometime payload is replace by a new one.&lt;/p&gt;

&lt;h3 id=&quot;aggregator-strategy&quot;&gt;Aggregator Strategy&lt;/h3&gt;

&lt;p&gt;Camel provides enrich pattern with aggregator strategy. With this component both messages (old and new one) can be merge to a new one. Developers can implement his own version of aggregator. In this example, we will see how to use the XSLT Aggregator into a Camel route.&lt;/p&gt;

&lt;h2 id=&quot;use-case&quot;&gt;Use case&lt;/h2&gt;

&lt;h3 id=&quot;customer-and-product&quot;&gt;Customer and product&lt;/h3&gt;

&lt;p&gt;The use case is very simple, we send a message to enrich customer information and product information. The route receives a message via the file system, checks xml validity and calls two services to retrieve more customer and product informations. Because we would like to keep the full payload anytime and avoid any payload backup into header we have to use enrich pattern. Route last step is to write the final result to a new file.&lt;/p&gt;

&lt;h3 id=&quot;route&quot;&gt;Route&lt;/h3&gt;

&lt;p&gt;Here is the main route. You can notice &lt;em&gt;&amp;lt;enrich&amp;gt;&lt;/em&gt; elements for calling service.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;route&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;service&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;from&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;file:target/in?noop=true&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;to&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;validator:service.xsd&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;convertBodyTo&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;String&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;to&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;log:net.a.g.camel&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;enrich&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;strategyRef=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;xasCM&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;constant&amp;gt;&lt;/span&gt;direct:customerService&lt;span class=&quot;nt&quot;&gt;&amp;lt;/constant&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/enrich&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;to&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;log:net.a.g.camel&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;enrich&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;strategyRef=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;xasPM&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;constant&amp;gt;&lt;/span&gt;direct:productService&lt;span class=&quot;nt&quot;&gt;&amp;lt;/constant&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/enrich&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;to&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;log:net.a.g.camel&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;to&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;validator:service.xsd&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;to&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;file:target/out&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/route&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;service&quot;&gt;Service&lt;/h3&gt;

&lt;p&gt;Here is the service route to retrieve informations. You can notice &lt;em&gt;&amp;lt;xpath&amp;gt;&lt;/em&gt; elements for extract the only information we need for the service. We just mock the end of service with a constant payload to send back. In real life, you could call a database or a soap/rest service for sure.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;        &lt;span class=&quot;nt&quot;&gt;&amp;lt;route&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;customer&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;from&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;direct:customerService&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;to&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;log:net.a.g.camel&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;setBody&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;xpath&amp;gt;&lt;/span&gt;//s:customer&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xpath&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/setBody&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;to&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;log:net.a.g.camel&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;transform&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;constant&amp;gt;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;![CDATA[&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
                  &lt;span class=&quot;nt&quot;&gt;&amp;lt;s:customer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:s=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;urn://example.org/service/2016/11&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                      &lt;span class=&quot;nt&quot;&gt;&amp;lt;s:firstName&amp;gt;&lt;/span&gt;Jean&lt;span class=&quot;nt&quot;&gt;&amp;lt;/s:firstName&amp;gt;&lt;/span&gt;
                      &lt;span class=&quot;nt&quot;&gt;&amp;lt;s:lastName&amp;gt;&lt;/span&gt;Paul&lt;span class=&quot;nt&quot;&gt;&amp;lt;/s:lastName&amp;gt;&lt;/span&gt;
                      &lt;span class=&quot;nt&quot;&gt;&amp;lt;s:title&amp;gt;&lt;/span&gt;M.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/s:title&amp;gt;&lt;/span&gt;
                  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/s:customer&amp;gt;&lt;/span&gt;]]&amp;gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/constant&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/transform&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/route&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;nt&quot;&gt;&amp;lt;route&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;product&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;from&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;direct:productService&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;to&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;log:net.a.g.camel&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;setBody&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;xpath&amp;gt;&lt;/span&gt;//s:product&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xpath&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/setBody&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;to&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;log:net.a.g.camel&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;transform&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;constant&amp;gt;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;![CDATA[&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
                  &lt;span class=&quot;nt&quot;&gt;&amp;lt;s:product&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:s=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;urn://example.org/service/2016/11&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                          &lt;span class=&quot;nt&quot;&gt;&amp;lt;s:id&amp;gt;&lt;/span&gt;123&lt;span class=&quot;nt&quot;&gt;&amp;lt;/s:id&amp;gt;&lt;/span&gt;
                          &lt;span class=&quot;nt&quot;&gt;&amp;lt;s:amount&amp;gt;&lt;/span&gt;122&lt;span class=&quot;nt&quot;&gt;&amp;lt;/s:amount&amp;gt;&lt;/span&gt;
                          &lt;span class=&quot;nt&quot;&gt;&amp;lt;s:price&amp;gt;&lt;/span&gt;8495&lt;span class=&quot;nt&quot;&gt;&amp;lt;/s:price&amp;gt;&lt;/span&gt;
                          &lt;span class=&quot;nt&quot;&gt;&amp;lt;s:name&amp;gt;&lt;/span&gt;LOUKOUM&lt;span class=&quot;nt&quot;&gt;&amp;lt;/s:name&amp;gt;&lt;/span&gt;
                   &lt;span class=&quot;nt&quot;&gt;&amp;lt;/s:product&amp;gt;&lt;/span&gt;]]&amp;gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/constant&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/transform&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/route&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;xslt&quot;&gt;XSLT&lt;/h3&gt;

&lt;p&gt;Here is the XSLT Aggregator for merging the pre-call service message with the new message from the return of the service. By default, Camel passes the old message to XSLT and adds new message as a XSLT parameter &lt;em&gt;new-exchange&lt;/em&gt;. The XSL is very simple, we use identity algorithm to copy all previous message (the first xsl:template block) and when we need to inject new data we fork to an other algorithm (the second xsl:template block). The merging stuff is very simple even if it is a demo.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;  &lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:stylesheet&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsl=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/1999/XSL/Transform&quot;&lt;/span&gt;
  	&lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2.0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:s=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;urn://example.org/service/2016/11&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

  	&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:param&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;new-exchange&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

  	&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;match=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@* | node()&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  		&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:copy&amp;gt;&lt;/span&gt;
  			&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:apply-templates&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;select=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@* | node()&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xsl:copy&amp;gt;&lt;/span&gt;
  	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;

  	&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;match=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;s:customer&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  		&lt;span class=&quot;nt&quot;&gt;&amp;lt;s:customer&amp;gt;&lt;/span&gt;
  			&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:copy-of&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;select=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;s:id&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  			&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:copy-of&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;select=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$new-exchange//s:firstName&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  			&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:copy-of&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;select=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$new-exchange//s:lastName&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  			&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:copy-of&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;select=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$new-exchange//s:title&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  			&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:copy-of&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;select=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;s:country&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/s:customer&amp;gt;&lt;/span&gt;
  	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/xsl:stylesheet&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Into the main route, you need to add the strategy in &lt;em&gt;&amp;lt;xpath&amp;gt;&lt;/em&gt; element, in this case we just use &lt;em&gt;&lt;a href=&quot;https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/apache/camel/util/toolbox/XsltAggregationStrategy.java&quot;&gt;XsltAggregationStrategy&lt;/a&gt;&lt;/em&gt;, it comes with &lt;em&gt;camel-core&lt;/em&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;bean&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;xasCM&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.apache.camel.util.toolbox.XsltAggregationStrategy&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;constructor-arg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;index=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;customerMerge.xslt&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The camel framework is very useful and pleasant to work with. Its flexibility brings a very cool leverage to implements more complex stuff in the real life. The &lt;em&gt;XsltAggregationStrategy&lt;/em&gt; can help you to use XML during the whole camel route. Using camel route as service is very helpful to add more malleable development, you can reuse service anytime. You must keep in mind XML schema (IN/OUT message) validation and the versioning management.&lt;/p&gt;

&lt;h3 id=&quot;links&quot;&gt;Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://camel.apache.org/&quot;&gt;Camel project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://camel.apache.org/content-enricher.html&quot;&gt;Enrich&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/apache/camel/util/toolbox/XsltAggregationStrategy.java&quot;&gt;XsltAggregationStrategy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.w3.org/TR/xslt&quot;&gt;XSLT 1.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.w3.org/TR/xslt20&quot;&gt;XSLT 2.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://camel.apache.org/direct.html&quot;&gt;Direct&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="en" /><category term="Camel" /><category term="XML" /><category term="XPath" /><category term="XSLT" /><category term="Aggregator" /><category term="Route" /><summary type="html">This mouth I went to Greece for a customer of mine. I worked at Athens on Camel integration with Mainframe legacy stuff. Customer would like to use XML message format during the full Camel route process. His wish was to reuse some Camel routes as new service components. Fortunately, Camel framework meets all of this requirements out of the box. We will this in this simple sample how to do it.</summary></entry><entry><title type="html">Setup a Hotspot Wifi w/ Ansible into a RaspberryPi 3</title><link href="http://0.0.0.0:4000/blog/2016/09/27/RaspberryPi-Ansible-Wifi-Hotspot.html" rel="alternate" type="text/html" title="Setup a Hotspot Wifi w/ Ansible into a RaspberryPi 3" /><published>2016-09-27T10:00:00-05:00</published><updated>2016-09-27T10:00:00-05:00</updated><id>http://0.0.0.0:4000/blog/2016/09/27/RaspberryPi-Ansible-Wifi-Hotspot</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2016/09/27/RaspberryPi-Ansible-Wifi-Hotspot.html">&lt;p&gt;This September, RaspberryPi foundation has sold &lt;a href=&quot;https://www.raspberrypi.org/blog/ten-millionth-raspberry-pi-new-kit/&quot;&gt;ten (10) Millions of unit&lt;/a&gt;. This small computer is amazing, you can setup very quickly several cool IoT projects. Since 2012, I bought all versions &lt;a href=&quot;https://en.wikipedia.org/wiki/Raspberry_Pi#Specifications&quot;&gt;(B 256Mo, B 512Mo, B+, 2B, 3B)&lt;/a&gt; of RaspberryPi. I am a big fan of this product and you can find into &lt;a href=&quot;/blog/&quot;&gt;this blog&lt;/a&gt; some projects I‚Äôve made on top of this little computer.
RaspberryPi version 3 comes with a wifi builtin interface, and this wifi interface can be configured as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Hotspot_(Wi-Fi)&quot;&gt;Wifi Hotspot&lt;/a&gt;. I use it every day at home or at office. Today, I will show you how to configure a Wifi Hotspot with &lt;a href=&quot;https://www.ansible.com/&quot;&gt;Ansible&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Howto setup a Hotspot Wifi w/ Ansible into a RaspberryPi 3&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;For this lab, you need the following software :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a RaspberryPi version 3
    &lt;ul&gt;
      &lt;li&gt;with &lt;a href=&quot;https://www.raspbian.org/&quot;&gt;Raspbian&lt;/a&gt; and a ssh connection for pi user.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Ansible installed  into our system.
    &lt;ul&gt;
      &lt;li&gt;for MacOS : via &lt;a href=&quot;https://trac.macports.org/browser/trunk/dports/sysutils/ansible/Portfile&quot;&gt;Macport&lt;/a&gt;, &lt;a href=&quot;http://brew.sh/index.html&quot;&gt;Homebrew&lt;/a&gt; or pip&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;clone-git-project&quot;&gt;Clone git project&lt;/h2&gt;

&lt;p&gt;First of all, clone the git repo project.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone git@github.com:gautric/ansible-raspberrypi.git
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ansible-raspberrypi&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;ansible-playbook&quot;&gt;Ansible playbook&lt;/h2&gt;

&lt;p&gt;To install and configure our Wifi Hotspot, we gonna use a YAML file used by Ansible. This file is realy simple to understand.
It‚Äôs a list of tasks, and each task will perform only one action like :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;installing package&lt;/li&gt;
  &lt;li&gt;coping file&lt;/li&gt;
  &lt;li&gt;enabling service&lt;/li&gt;
  &lt;li&gt;restart device&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By default Raspbian comes with &lt;em&gt;pi&lt;/em&gt; user w/ correct &lt;strong&gt;sudo&lt;/strong&gt; grant. In this playbook, Ansible uses &lt;strong&gt;pi&lt;/strong&gt; user &lt;em&gt;(remote_user: pi)&lt;/em&gt; and performs all commands with &lt;strong&gt;sudo&lt;/strong&gt; &lt;em&gt;(become: true)&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&quot;warn&quot;&gt;
As you can see wpa_passphrase and ssid must be defined. You will see how to do it with command line directly.
&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Configure WIFI Hotspot for RaspberryPi &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;raspberrypi&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;remote_user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pi&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;vars&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;wpa_passphrase&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;XXXXXXX&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wlan0&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ssid&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;YYYYYYYY&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ip_server&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;10.0.0.1&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;netmask&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;255.255.255.0&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ip_dhcp_low&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;10.0.0.2&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ip_dhcp_high&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;10.0.0.15&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hostapd install&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;apt&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name=hostapd state=present force=yes&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dnsmasq install&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;apt&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name=dnsmasq state=present force=yes&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dnsmasq.conf&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;template/dnsmasq.conf.j2&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/dnsmasq.conf&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;backup&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hostapd.conf&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;template/hostapd.conf.j2&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/hostapd/hostapd.conf&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;backup&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hostapd&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;template/hostapd.j2&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/default/hostapd&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;backup&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rc.local&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;template/rc.local.j2&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/rc.local&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;backup&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dnsmasq service&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name=dnsmasq enabled=yes state=started&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hostapd service&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name=hostapd enabled=yes state=started&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;restart machine&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;sleep 2 &amp;amp;&amp;amp; shutdown -r noww&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;async&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;poll&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;ignore_errors&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We can also create template. Ansible will inject values into the template and copy the final file to destination.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;={{&lt;/span&gt; interface &lt;span class=&quot;o&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;hw_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;g
&lt;span class=&quot;nv&quot;&gt;channel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;10
&lt;span class=&quot;nv&quot;&gt;auth_algs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
&lt;span class=&quot;nv&quot;&gt;macaddr_acl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0
&lt;span class=&quot;nv&quot;&gt;wpa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2
&lt;span class=&quot;nv&quot;&gt;wpa_key_mgmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;WPA-PSK
&lt;span class=&quot;nv&quot;&gt;wpa_pairwise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;CCMP
&lt;span class=&quot;nv&quot;&gt;rsn_pairwise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;CCMP
&lt;span class=&quot;nv&quot;&gt;wpa_passphrase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;={{&lt;/span&gt; wpa_passphrase &lt;span class=&quot;o&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;ssid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;={{&lt;/span&gt; ssid &lt;span class=&quot;o&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;ansible-execution&quot;&gt;Ansible Execution&lt;/h2&gt;

&lt;p&gt;To deploy configuration, Ansible provides &lt;strong&gt;ansible-playbook&lt;/strong&gt; command line. You must configure &lt;strong&gt;hosts&lt;/strong&gt; file, it includes all RaspberryPi hosts.&lt;/p&gt;

&lt;h3 id=&quot;ansible-command-line&quot;&gt;Ansible command line&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$&amp;gt;&lt;/span&gt; ansible-playbook pi_wifi.yml &lt;span class=&quot;nt&quot;&gt;--inventory-file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;./hosts &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; pi  &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ssid=RASPBERRY wpa_passphrase=1234567891011&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;warn&quot;&gt;
Please change wpa_passphrase and ssid correctly.
&lt;/div&gt;

&lt;h3 id=&quot;ansible-command-line-output&quot;&gt;Ansible command line output&lt;/h3&gt;

&lt;p&gt;The command line output should look like the same.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$&amp;gt;&lt;/span&gt; ansible-playbook pi_wifi.yml &lt;span class=&quot;nt&quot;&gt;--inventory-file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;./hosts &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; pi  &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--diff&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ssid=RASPBERRY wpa_passphrase=12345&quot;&lt;/span&gt;
No config file found&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; using defaults

PLAY &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;raspberrypi] &lt;span class=&quot;k&quot;&gt;*************************************************************&lt;/span&gt;

TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;setup] &lt;span class=&quot;k&quot;&gt;*******************************************************************&lt;/span&gt;
ok: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.0.11]

TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;hostapd &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*********************************************************&lt;/span&gt;
ok: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.0.11] &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cache_update_time&quot;&lt;/span&gt;: 0, &lt;span class=&quot;s2&quot;&gt;&quot;cache_updated&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;changed&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;dnsmasq &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*********************************************************&lt;/span&gt;
changed: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.0.11] &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cache_update_time&quot;&lt;/span&gt;: 0, &lt;span class=&quot;s2&quot;&gt;&quot;cache_updated&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;changed&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;stderr&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;stdout&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;Reading package lists...&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Building dependency tree...&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Reading state information...&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;The following extra packages will be installed:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;  dns-root-data dnsmasq-base libmnl0 libnetfilter-conntrack3&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;The following NEW packages will be installed:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;  dns-root-data dnsmasq dnsmasq-base libmnl0 libnetfilter-conntrack3&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;0 upgraded, 5 newly installed, 0 to remove and 0 not upgraded.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Inst libmnl0 (1.0.3-5 Raspbian:stable [armhf])&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Inst libnetfilter-conntrack3 (1.0.4-1 Raspbian:stable [armhf])&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Inst dns-root-data (2014060201+2 Raspbian:stable [all])&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Inst dnsmasq-base (2.72-3+deb8u1 Raspbian:stable [armhf])&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Inst dnsmasq (2.72-3+deb8u1 Raspbian:stable [all])&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Conf libmnl0 (1.0.3-5 Raspbian:stable [armhf])&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Conf libnetfilter-conntrack3 (1.0.4-1 Raspbian:stable [armhf])&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Conf dns-root-data (2014060201+2 Raspbian:stable [all])&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Conf dnsmasq-base (2.72-3+deb8u1 Raspbian:stable [armhf])&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Conf dnsmasq (2.72-3+deb8u1 Raspbian:stable [all])&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;stdout_lines&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Reading package lists...&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Building dependency tree...&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Reading state information...&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;The following extra packages will be installed:&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;  dns-root-data dnsmasq-base libmnl0 libnetfilter-conntrack3&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;The following NEW packages will be installed:&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;  dns-root-data dnsmasq dnsmasq-base libmnl0 libnetfilter-conntrack3&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;0 upgraded, 5 newly installed, 0 to remove and 0 not upgraded.&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Inst libmnl0 (1.0.3-5 Raspbian:stable [armhf])&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Inst libnetfilter-conntrack3 (1.0.4-1 Raspbian:stable [armhf])&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Inst dns-root-data (2014060201+2 Raspbian:stable [all])&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Inst dnsmasq-base (2.72-3+deb8u1 Raspbian:stable [armhf])&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Inst dnsmasq (2.72-3+deb8u1 Raspbian:stable [all])&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Conf libmnl0 (1.0.3-5 Raspbian:stable [armhf])&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Conf libnetfilter-conntrack3 (1.0.4-1 Raspbian:stable [armhf])&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Conf dns-root-data (2014060201+2 Raspbian:stable [all])&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Conf dnsmasq-base (2.72-3+deb8u1 Raspbian:stable [armhf])&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Conf dnsmasq (2.72-3+deb8u1 Raspbian:stable [all])&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]}&lt;/span&gt;
The following extra packages will be installed:
  dns-root-data dnsmasq-base libmnl0 libnetfilter-conntrack3
The following NEW packages will be installed:
  dns-root-data dnsmasq dnsmasq-base libmnl0 libnetfilter-conntrack3
0 upgraded, 5 newly installed, 0 to remove and 0 not upgraded.

TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;dnsmasq.conf] &lt;span class=&quot;k&quot;&gt;************************************************************&lt;/span&gt;
changed: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.0.11] &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;changed&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; before
+++ after: dynamically generated
@@ &lt;span class=&quot;nt&quot;&gt;-0&lt;/span&gt;,0 +1,2 @@
+interface&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wlan0
+dhcp-range&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;10.0.0.2,10.0.0.5,255.255.255.0,12h


TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;hostapd.conf] &lt;span class=&quot;k&quot;&gt;************************************************************&lt;/span&gt;
changed: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.0.11] &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;changed&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; before
+++ after: dynamically generated
@@ &lt;span class=&quot;nt&quot;&gt;-0&lt;/span&gt;,0 +1,11 @@
+interface&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wlan0
+hw_mode&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;g
+channel&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;10
+auth_algs&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
+macaddr_acl&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0
+wpa&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2
+wpa_key_mgmt&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;WPA-PSK
+wpa_pairwise&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;CCMP
+rsn_pairwise&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;CCMP
+wpa_passphrase&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1234567891011
+ssid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;RASPBERRY


TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;hostapd] &lt;span class=&quot;k&quot;&gt;*****************************************************************&lt;/span&gt;
changed: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.0.11] &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;changed&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; before: /etc/default/hostapd
+++ after: dynamically generated
@@ &lt;span class=&quot;nt&quot;&gt;-7&lt;/span&gt;,12 +7,12 @@
 &lt;span class=&quot;c&quot;&gt;# file and hostapd will be started during system boot. An example configuration&lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;# file can be found at /usr/share/doc/hostapd/examples/hostapd.conf.gz&lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
-#DAEMON_CONF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
+DAEMON_CONF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/etc/hostapd/hostapd.conf&quot;&lt;/span&gt;

 &lt;span class=&quot;c&quot;&gt;# Additional daemon options to be appended to hostapd command:-&lt;/span&gt;
-# 	&lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;   show more debug messages &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-dd&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;even more&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
-# 	&lt;span class=&quot;nt&quot;&gt;-K&lt;/span&gt;   include key data &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;debug messages
-# 	&lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt;   include timestamps &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;some debug messages
+#         &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;   show more debug messages &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-dd&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;even more&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
+#         &lt;span class=&quot;nt&quot;&gt;-K&lt;/span&gt;   include key data &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;debug messages
+#         &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt;   include timestamps &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;some debug messages
 &lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;# Note that -B (daemon mode) and -P (pidfile) options are automatically&lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;# configured by the init.d script and must not be added to DAEMON_OPTS.&lt;/span&gt;


TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;rc.local] &lt;span class=&quot;k&quot;&gt;****************************************************************&lt;/span&gt;
changed: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.0.11] &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;changed&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; before: /etc/rc.local
+++ after: dynamically generated
@@ &lt;span class=&quot;nt&quot;&gt;-17&lt;/span&gt;,4 +17,12 @@
   &lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;My IP address is %s&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_IP&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

+ifconfig wlan0 down
+ifconfig wlan0 10.0.0.1 netmask 255.255.255.0 up
+#ifconfig wlan0 inet6 add fc00::7262:7069:0003/7
+iwconfig wlan0 power off
+
+service dnsmasq restart
+service hostapd restart
+
 &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0


TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;dnsmasq service] &lt;span class=&quot;k&quot;&gt;*********************************************************&lt;/span&gt;
changed: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.0.11] &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;changed&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

TASK &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;hostapd service] &lt;span class=&quot;k&quot;&gt;*********************************************************&lt;/span&gt;
changed: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.0.11] &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;changed&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;msg&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;service state changed&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

PLAY RECAP &lt;span class=&quot;k&quot;&gt;*********************************************************************&lt;/span&gt;
192.168.0.11               : &lt;span class=&quot;nv&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;10   &lt;span class=&quot;nv&quot;&gt;changed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8    &lt;span class=&quot;nv&quot;&gt;unreachable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0    &lt;span class=&quot;nv&quot;&gt;failed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;
&lt;em&gt;Et voila !!!&lt;/em&gt; If you reboot your raspberrypi, you should find a new Wifi Hotspot called &lt;strong&gt;RASPBERRY&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I‚Äôve created this Ansible playbook very quickly. The Ansible integration with a RaspberryPi is very easy because you just need a SSH connection to connect with. I think, I will continue to use Ansible with some of my RaspberryPi devices.&lt;/p&gt;

&lt;h3 id=&quot;useful-links&quot;&gt;Useful links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ansible.com/&quot;&gt;Ansible&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://galaxy.ansible.com/&quot;&gt;Galaxy Ansible&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="en" /><category term="RaspberryPi" /><category term="Ansible" /><category term="Wifi" /><category term="HOWTO" /><category term="Hotspot" /><summary type="html">This September, RaspberryPi foundation has sold ten (10) Millions of unit. This small computer is amazing, you can setup very quickly several cool IoT projects. Since 2012, I bought all versions (B 256Mo, B 512Mo, B+, 2B, 3B) of RaspberryPi. I am a big fan of this product and you can find into this blog some projects I‚Äôve made on top of this little computer. RaspberryPi version 3 comes with a wifi builtin interface, and this wifi interface can be configured as a Wifi Hotspot. I use it every day at home or at office. Today, I will show you how to configure a Wifi Hotspot with Ansible.</summary></entry></feed>