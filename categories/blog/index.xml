<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blog on Greg. I/O</title>
    <link>https://gautric.github.io/categories/blog/</link>
    <description>Recent content in blog on Greg. I/O</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Jan 2024 09:00:00 +0000</lastBuildDate>
    <atom:link href="https://gautric.github.io/categories/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS SSM, Ansible et Raspberry Pi via SSH</title>
      <link>https://gautric.github.io/blog/2024/01/15/AWS-SSM-and-RaspberryPi-SSH.html</link>
      <pubDate>Mon, 15 Jan 2024 09:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2024/01/15/AWS-SSM-and-RaspberryPi-SSH.html</guid>
      <description>Dans ce nouveau et premier post de 2024, découvrez comment AWS Systems Manager (SSM) s&amp;rsquo;intègre de manière utile avec le Raspberry Pi (testé avec 3, zero et 5). Explorez les possibilités de cette combinaison, idéale pour les projets d&amp;rsquo;informatique personnelle décentralisée. Que vous soyez un passionné du Cloud, un amateur d&amp;rsquo;IoT ou simplement curieux, cet article vous réserve des surprises ! Ce post sera particulièrement utile pour ceux qui cherchent à accéder facilement à leur Raspberry Pi sans avoir à configurer le port forwarding sur leur box Internet, et ce, pour un coût minime [^pricing].</description>
    </item>
    <item>
      <title>Quarkus/Java 11-17 et GitHub Action feat. Matrix</title>
      <link>https://gautric.github.io/blog/2022/06/08/GitHub-Matrix.html</link>
      <pubDate>Wed, 08 Jun 2022 15:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2022/06/08/GitHub-Matrix.html</guid>
      <description>La construction des applications modernes et dites cloud natives passent obligatoirement par la case CI/CD. Les pipelines de type GitHub Action d’applications permettent de standardiser les processus de constructions, de tests, de versionning ainsi que de déploiement des applications. L’avantage des pipelines de constructions est le rapide feedback aux développeurs des erreurs dans la chaîne de traitement. Ainsi, il est facile de modifier un élément de configuration pour voir le résultat.</description>
    </item>
    <item>
      <title>Pattern Découpler la Réception et Utilisation des Signaux avec jBPM/Drools</title>
      <link>https://gautric.github.io/blog/2021/09/26/Pattern-Signal-jBPM.html</link>
      <pubDate>Sun, 26 Sep 2021 15:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2021/09/26/Pattern-Signal-jBPM.html</guid>
      <description>Pour mon activité professionnelle, je me déplace1 chez les clients afin d&amp;rsquo;expertiser les solutions qu&amp;rsquo;ils mettent en place dans leur système d&amp;rsquo;information et notamment le produit RHPAM2. Pour le compte d&amp;rsquo;un client donc, j&amp;rsquo;ai travaillé sur les processus metiers qu&amp;rsquo;il a mis en place chez lui. Ces processus de type BPMN permettent de gérer des processus de gestion sur lequels nous n&amp;rsquo;allons pas nous étendre ici. Nous allons juste extraire un patron de conception que j&amp;rsquo;ai bien aimé de par sa fonctionnalité ainsi que par son interessante implémentation .</description>
    </item>
    <item>
      <title>How to manage Exception inside a jBPM WorkItemHandler custom component</title>
      <link>https://gautric.github.io/blog/2020/10/28/How-to-manage-Exception-inside-jBPM.html</link>
      <pubDate>Wed, 28 Oct 2020 15:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2020/10/28/How-to-manage-Exception-inside-jBPM.html</guid>
      <description>When we develop a BPMN process we have to handle correctly Error. An Error can be raised by any component during the processus instance and specially into a Work Item Handler node. This kind of node in jBPM is a Java component implementing the WorkItemHandler interface. Usually in Java program we manage error via Exception mechanism.
How to manage Exception inside jBPM WorkItemHandler custom component.
To illustrate how to use Exception/Error I propose to create a sample error process.</description>
    </item>
    <item>
      <title>Éxecution d&#39;un moteur de KYC en DMN avec Kogito</title>
      <link>https://gautric.github.io/blog/2020/06/06/Execution-d&#39;un-KYC-en-DMN.html</link>
      <pubDate>Sat, 06 Jun 2020 15:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2020/06/06/Execution-d&#39;un-KYC-en-DMN.html</guid>
      <description>Dans le précedent post sur ce blog nous avons vu rapidement comment créer sa définition et modelisation des règle d&amp;rsquo;un KYC basé sur le standard DMN. Nous allons voir comment faire tourner cet exemple et éxecuter sur un moteur implémentant le standard DMN.
Éxecution d&amp;rsquo;un moteur KYC en DMN avec Kogito
Introdution Kogito Faisons un focus rapide sur Kogito. Kogito est un moteur de règle orienté cloud. Ce moteur de règle reprend en grande partie tout le coeur et le developpement de Drools et jBPM mais propose des fonctionnalités purement Cloud notamment le fait qu&amp;rsquo;il est prévu d&amp;rsquo;être éxecuter dans un container de type OCI / Docker et deployé sur un cluster Cloud K8S / Openshift par exemple.</description>
    </item>
    <item>
      <title>Le standard DMN, un KYC en exemple</title>
      <link>https://gautric.github.io/blog/2020/06/04/Le-standard-DMN-un-KYC-en-exemple.html</link>
      <pubDate>Thu, 04 Jun 2020 15:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2020/06/04/Le-standard-DMN-un-KYC-en-exemple.html</guid>
      <description>Pendant un certain temps les moteurs de règles étaient fortement dépendant des fournisseurs de solution. Mais depuis que le standard DMN pour Decision Model and Notation est maintenant disponible l&amp;rsquo;ensemble des éditeurs Opensource ou Closesource fournisse une implémentation de ce standard. Nous allons voir avec un exemple rapide comment utiliser DMN.
Le standard DMN, un KYC en exemple
Introdution DMN est une norme de l&amp;rsquo;OMG. Cette norme a pour objectif de standardiser la modélisation et le référentiel des règles de décision dans les applications ayant des besoins de scoring, d&amp;rsquo;évaluation et/ou d&amp;rsquo;aide à la décision.</description>
    </item>
    <item>
      <title>MQTTiser l&#39;API Autolib avec Node-Red</title>
      <link>https://gautric.github.io/blog/2018/04/21/MQTTiser-l-API-Autolib-avec-Node-Red.html</link>
      <pubDate>Sat, 21 Apr 2018 15:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2018/04/21/MQTTiser-l-API-Autolib-avec-Node-Red.html</guid>
      <description>Après un petit temps de silence, pour des raisons personnelles et notamment l&amp;rsquo;arrivé d&amp;rsquo;un petit Thomas, voici un nouveau post. Étant un utlisateur occassionnel d&amp;rsquo;Autolib j&amp;rsquo;ai besoin d&amp;rsquo;avoir en flux continu l&amp;rsquo;état des stations à coté de chez moi (nb de voiture, nb de place). Autour de chez moi, j&amp;rsquo;ai plusieurs stations Autolib et je dois consulter régulierement l&amp;rsquo;application iPhone en fonction de mes besoins. Afin de me simplifier la vie j&amp;rsquo;ai installé et configuré chez moi la solution HomeAssistant, j&amp;rsquo;utilisais pour cela l&amp;rsquo;API de Paris en mode REST/HTTP.</description>
    </item>
    <item>
      <title>Camel XML XPath XSLT Aggregator</title>
      <link>https://gautric.github.io/blog/2016/12/03/Camel-XML-XsltAggregationStrategy.html</link>
      <pubDate>Sat, 03 Dec 2016 15:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2016/12/03/Camel-XML-XsltAggregationStrategy.html</guid>
      <description>This month I went to Greece for a customer of mine. I worked at Athens on Camel integration with Mainframe legacy stuff. Customer would like to use XML message format during the full Camel route process. His wish was to reuse some Camel routes as new service components. Fortunately, Camel framework meets all of this requirements out of the box. We will this in this simple sample how to do it.</description>
    </item>
    <item>
      <title>Setup a Hotspot Wifi w/ Ansible into a RaspberryPi 3</title>
      <link>https://gautric.github.io/blog/2016/09/27/RaspberryPi-Ansible-Wifi-Hotspot.html</link>
      <pubDate>Tue, 27 Sep 2016 15:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2016/09/27/RaspberryPi-Ansible-Wifi-Hotspot.html</guid>
      <description>This September, RaspberryPi foundation has sold ten (10) Millions of unit. This small computer is amazing, you can setup very quickly several cool IoT projects. Since 2012, I bought all versions (B 256Mo, B 512Mo, B+, 2B, 3B) of RaspberryPi. I am a big fan of this product and you can find into this blog some projects I&amp;rsquo;ve made on top of this little computer. RaspberryPi version 3 comes with a wifi builtin interface, and this wifi interface can be configured as a Wifi Hotspot.</description>
    </item>
    <item>
      <title>JBoss EAP 7 connected to WebsphereMQ running on Docker</title>
      <link>https://gautric.github.io/blog/2016/08/03/WebsphereMQ-JBoss-EAP-7-Docker.html</link>
      <pubDate>Wed, 03 Aug 2016 14:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2016/08/03/WebsphereMQ-JBoss-EAP-7-Docker.html</guid>
      <description>Last year for a previous customer I wrote an article/post about WebsphereMQ Best Practice with JBoss EAP 6. Today we will make almost the same stuff but with JBoss EAP 7, WebsphereMQ Sample IVT application and running on Docker. I assume you know basic command about Docker.
Howto run JBoss EAP 7 connected to WebsphereMQ both running on Docker
Prerequisites For this lab, you need the following software :
package of JBoss EAP 7 http://www.</description>
    </item>
    <item>
      <title>JConsole &amp; Java Mission Control with JBoss EAP 7</title>
      <link>https://gautric.github.io/blog/2016/07/19/JConsole-JavaMissionControl-JBoss-EAP-7.html</link>
      <pubDate>Tue, 19 Jul 2016 14:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2016/07/19/JConsole-JavaMissionControl-JBoss-EAP-7.html</guid>
      <description>During Red Hat summit, Red Hat releases the new version of its JBoss Application Server. JBoss App Server provides a new JMX Remote Management protocol to connect with. A common JMX tool is JConsole and we will see how to use it with remote mode. We also configure an other tool called Java Mission Control for a cooler JMX monitoring stuff. Sorry my platform is a MacOS X, but I am sure your skill is enough to adapt into your environment.</description>
    </item>
    <item>
      <title>Lancement de JBoss EAP 7</title>
      <link>https://gautric.github.io/blog/2016/06/27/Lancement-JBoss-EAP-7.html</link>
      <pubDate>Mon, 27 Jun 2016 14:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2016/06/27/Lancement-JBoss-EAP-7.html</guid>
      <description>Cela fait exactement 5 ans que je travaille pour Red Hat et pour mon cadeau d&amp;rsquo;anniversaire Red Hat vient de sortir sa nouvelle version de son serveur d&amp;rsquo;application phare à savoir JBoss EAP 7. Cette nouvelle version de JBoss EAP 7 presente certaine evolutions interessantes par rapport à la version 6, tout en gradant la philosophie et l&amp;rsquo;architecture générale du serveur d&amp;rsquo;application. Nous allons voir dans ce post les principaux elements qui me semblent le plus interessant à retenir de cette nouvelle version.</description>
    </item>
    <item>
      <title>UNESCO Challenge, point UNESCO, Malte / Malta</title>
      <link>https://gautric.github.io/blog/2016/06/14/UNESCO-challenge-point-UNESCO-Malte.html</link>
      <pubDate>Tue, 14 Jun 2016 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2016/06/14/UNESCO-challenge-point-UNESCO-Malte.html</guid>
      <description>Récemment, je suis parti à Malte avec Madame, ce petit pays en taille possède un riche patrimoine culturel. Celui-ci démarre du Néolithique (-5000 -4000 avant JC) pour aller jusqu&amp;rsquo;à nos jours. Cela m&amp;rsquo;a beaucoup impressionné car étonnement il y a beaucoup de sites Néolithique relativement bien conservés et surtout bien valorisés. L&amp;rsquo;un des étendu sur Malte est le site &amp;ldquo;Temples mégalithiques de Malte&amp;rdquo; qui est reparti sur les deux grandes îles de Malte (Malte et Gozo).</description>
    </item>
    <item>
      <title>Camel is going into Eclipse Kura</title>
      <link>https://gautric.github.io/blog/2016/03/18/apache-camel-eclipse-kura.html</link>
      <pubDate>Fri, 18 Mar 2016 14:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2016/03/18/apache-camel-eclipse-kura.html</guid>
      <description>Today, I am going to talk about a good news, it is a technical post but without any code/material or stuff like that (thx God). The Eclipse Kura Project has accepted GitHub Pull Request and now includes a new cool component to develop branch. This new component is Camel Framework from Apache Foundation. Henryk Konsek a colleague of mine is the principal guy behind this new. The Camel and Kura integration starts from the first Camel Kura component available since Camel version 2.</description>
    </item>
    <item>
      <title>Device IO and i2cdetect implementation</title>
      <link>https://gautric.github.io/blog/2016/03/09/rhiot-Device-IO-API-i2cdetect-impl.html</link>
      <pubDate>Wed, 09 Mar 2016 14:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2016/03/09/rhiot-Device-IO-API-i2cdetect-impl.html</guid>
      <description>Today, we gonna implement a quick tool available into RaspberryPi with Java Device IO API. i2cdetect is a simple i2c device scanner for your RaspberryPi, it browse all i2c address to find which i2c device is connected. This tutorial show how to recompile DeviceIO API and program too.
i2cdetect with the Java Device I/O API implementation .
Requisites One RaspberryPi tested w/ RPi B+ should works with all version an I2C Device Sense Hat for example Compile Device IO Download Device IO API and compile it.</description>
    </item>
    <item>
      <title>Rhiot Kura Device IO GPIO and I2C</title>
      <link>https://gautric.github.io/blog/2016/02/29/rhiot-kura-OSGi-Device-IO-API.html</link>
      <pubDate>Mon, 29 Feb 2016 14:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2016/02/29/rhiot-kura-OSGi-Device-IO-API.html</guid>
      <description>Recently, a colleague of mine calls me to implements a small demo. I decide to develop a new component for Rhiot project. This component is the DeviceIO I2C Camel, I reuse a previous work from Camel-pi4j I&amp;rsquo;ve already develop for Rhiot project too. We gonna see how to use this component into Kura Platform via Camel Framework. For this demo we need some hardware devices, a RaspberryPi and a ActiveMQ broker too.</description>
    </item>
    <item>
      <title>UNESCO Challenge, point UNESCO, Maritime Greenwich, Prime Meridian</title>
      <link>https://gautric.github.io/blog/2016/01/29/UNESCO-Challenge-Maritime-Greenwich-Prime-Meridian.html</link>
      <pubDate>Fri, 29 Jan 2016 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2016/01/29/UNESCO-Challenge-Maritime-Greenwich-Prime-Meridian.html</guid>
      <description>En ce debut d&amp;rsquo;année 2016, je me suis rendu à Londres afin d&amp;rsquo;aller visiter des amis Londoniens. Nous avons pris le temps d&amp;rsquo;aller voir le Meridien de Greenwich qui est le meridien 0°. Ce Meridien est devenu très important depuis qu&amp;rsquo;il est devenu la référence mondiale topographique à la Conférence internationale de Washington de 1884. Il est utilisé avec l&amp;rsquo;aide d&amp;rsquo;une horloge correctement synchronisée par les navigateurs du monde entier afin de connaitre leur longitude extacte sur le globe terrestre.</description>
    </item>
    <item>
      <title>Rhiot over Kura over Docker over RaspberryPi ;-)</title>
      <link>https://gautric.github.io/blog/2015/12/28/rhiot-kura-docker-raspberrypi.html</link>
      <pubDate>Mon, 28 Dec 2015 14:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/12/28/rhiot-kura-docker-raspberrypi.html</guid>
      <description>During this cool Christmas day, Santa Claus brings us lot of presents (I hope for you), I received 2 RaspberryPi Zero, Thx you brother ;-). I will show you a cool stuff after this special day. We gonna test how to use Rhiot project into Kura Eclipse Platform running inside Docker container deployed into a real RaspberryPi Zero device (in this order). If you don&amp;rsquo;t have yet a RaspberryPi (B+, 2 or zero) device you can use my previous post.</description>
    </item>
    <item>
      <title>Kura over Docker</title>
      <link>https://gautric.github.io/blog/2015/12/23/kura-OSGi-docker-debian.html</link>
      <pubDate>Wed, 23 Dec 2015 14:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/12/23/kura-OSGi-docker-debian.html</guid>
      <description>Rhiot project decides recently to support mainly Kura Eclipse Platform. Our project will provides some code and extension for Kura like Camel integration and lots of other stuff. We have some new Camel component dedicated for Kura Platform (gpio, cloud, wifi). We want use this platform because it is OSGi compliant sotfware, focused to IoT universe, supported by Eclipse Foundation and Eurotech. Kura runs on RaspberryPi, but if you don&amp;rsquo;t have yet a RaspberryPi device we will show how to run Kura into Docker.</description>
    </item>
    <item>
      <title>Rhiot Kura Gateway Sample (Emulator &amp; RaspberryPi) </title>
      <link>https://gautric.github.io/blog/2015/12/03/rhiot-kura-OSGi-full-sample.html</link>
      <pubDate>Thu, 03 Dec 2015 14:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/12/03/rhiot-kura-OSGi-full-sample.html</guid>
      <description>For a while, I develop during my free time for Rhiot project with my Red Hat colleague Henryk. We started to develop several Camel components like (kura, pi4j, bluetooth) with others volunteers. Now we focus to develop and integrate those components for Kura Platform. Kura is an OSGi Platform designed for IoT, it can run on RaspberryPi, BeagleBone or Intel Edison device. Kura Platform has got lot of embedded services for IoT context (GPIO, USB, I2C, Cloud Service, etc&amp;hellip;) In this post we will see :</description>
    </item>
    <item>
      <title>RHIoT RaspberryPi Sense-Hat display</title>
      <link>https://gautric.github.io/blog/2015/11/24/rhiot-framebuffer-raspberrypi-sense-hat.html</link>
      <pubDate>Tue, 24 Nov 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/11/24/rhiot-framebuffer-raspberrypi-sense-hat.html</guid>
      <description>Recently, I bought the new an official Sense-HAT from RaspberryPi foundation. This HAT add-on for the RaspberryPi device includes lots of cool thing. Sense-HAT comes with an 8x8 RGB565 pixel display, a Joystick, a Gyroscope, Accelerometer, Magnetometer, Temperature, Barometric pressure and Humidity sensors. All sensors are i2c compliant, with the rhiot camel-pi4j component it is very easy to retrieve all data from sensors and push them outside. Rhiot team had also developed the first implementation of rhiot camel-framebuffer component, now it is possible to push image directly to 8x8 pixel screen : NB the matrix is 8x8 RGB565 LED (2 bytes per pixels).</description>
    </item>
    <item>
      <title>RHIoT Webcam and websocket components on MacbookPro in Groovy</title>
      <link>https://gautric.github.io/blog/2015/10/23/rhiot-camel-webcam-websocket-macbookpro.html</link>
      <pubDate>Fri, 23 Oct 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/10/23/rhiot-camel-webcam-websocket-macbookpro.html</guid>
      <description>Yesterday, we&amp;rsquo;ve played with our MacBook Pro&amp;rsquo;s webcam. Today, we gonna see how to send images through a websocket directly in this page !!! or via a JavaFx program. We gonna re-use the previous post and integrate camel Websocket component. Let&amp;rsquo;s play with Groovy language &amp;hellip;
Webcam image to Websocket w/ Rhiot &amp;amp; Camel projects on MacbookPro
Let&amp;rsquo;s start to broadcast yourself.
Requisites Have a mac tested MacBook Pro Retina, 13-inch, Mid 2014 Groovy Mac port installed Groovy Version: 2.</description>
    </item>
    <item>
      <title>RHIoT 0.1.2 Webcam component on MacOS X in Groovy</title>
      <link>https://gautric.github.io/blog/2015/10/22/rhiot-0.1.2-camel-webcam-macos-x.html</link>
      <pubDate>Thu, 22 Oct 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/10/22/rhiot-0.1.2-camel-webcam-macos-x.html</guid>
      <description>My tech leader on RHIoT project (ex-camellabs) Henryk had just release the last version of RHIoT project : 0.1.2. Lot of new stuffs are included in this new release, more details available here. I found in list a cool stuff to test. We gonna check if our new commiter @levackt from ZA worked well ;-)
Webcam camel component on Mac OSX with Groovy language
Let&amp;rsquo;s start to broadcast yourself.
Requisites Have a mac tested MacBook Pro Retina, 13-inch, Mid 2014 Groovy Mac port installed Groovy Version: 2.</description>
    </item>
    <item>
      <title>SSH to MacOS X (El Capitan) through iCloud tunnel</title>
      <link>https://gautric.github.io/blog/2015/10/03/macos-x-el-capitan-ssh-tunnel-icould.html</link>
      <pubDate>Sat, 03 Oct 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/10/03/macos-x-el-capitan-ssh-tunnel-icould.html</guid>
      <description>After my wedding and a honey moon in Sicilia, I am back home to blog about some cool tech stuff. Yesterday, I update my favorite laptop it&amp;rsquo;s a MacbookPro [ja keyboard] (Retina, 13-inch, Mid 2014) with the new MacOS X 10.11 El Capitan version. I also like MacOS software because it includes bash, ssh and lot of cool Linux/Unix commands. I have got also an MacMini at home behind my Internet box.</description>
    </item>
    <item>
      <title>UNESCO Challenge, 国際連合教育科学文化機関の認定地, Iwami Ginzan Silver Mine, 石見銀山</title>
      <link>https://gautric.github.io/blog/2015/08/24/%E5%9B%BD%E9%9A%9B%E9%80%A3%E5%90%88%E6%95%99%E8%82%B2%E7%A7%91%E5%AD%A6%E6%96%87%E5%8C%96%E6%A9%9F%E9%96%A2%E3%81%AE%E8%AA%8D%E5%AE%9A%E5%9C%B0-%E7%9F%B3%E8%A6%8B%E9%8A%80%E5%B1%B1.html</link>
      <pubDate>Mon, 24 Aug 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/08/24/%E5%9B%BD%E9%9A%9B%E9%80%A3%E5%90%88%E6%95%99%E8%82%B2%E7%A7%91%E5%AD%A6%E6%96%87%E5%8C%96%E6%A9%9F%E9%96%A2%E3%81%AE%E8%AA%8D%E5%AE%9A%E5%9C%B0-%E7%9F%B3%E8%A6%8B%E9%8A%80%E5%B1%B1.html</guid>
      <description>数年前、私は友人と あるゲームを 始めました。それは、ユネスコチャレンジというゲームです。このゲームは、各々の人生において、いくつの世界遺産を回れるかというものです。 ゲームのルールは、建物、島、町、山、文化において、ユネスコが認定しているということです。そして訪問の証拠として、その地のユネスコ認定の看板を写真に撮ることです。 最後に、一度訪れた場所は、再度訪れても、カウントされないことです。　私は8月の半ばから日本に来ています。そして、先日、新たに世界遺産を訪れました。それは石見銀山です。
石見銀山
石見銀山 ユネスコによる要約 Title (ja) 石見銀山 Title (en) Iwami Ginzan Silver Mine and its Cultural Landscape Id 1246 Record date 2007 Visit Date 2015-08-21 Interest High 証 サイト 石見銀山のユネスコのサイト </description>
    </item>
    <item>
      <title>UNESCO Challenge, point UNESCO, Le Havre</title>
      <link>https://gautric.github.io/blog/2015/08/04/UNESCO-challenge-point-UNESCO-Havre.html</link>
      <pubDate>Tue, 04 Aug 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/08/04/UNESCO-challenge-point-UNESCO-Havre.html</guid>
      <description>Few years ago, my friends and I started a game we called the UNESCO challenge/Point UNESCO (fr). The goal of this game is very simple, we try to visit every World Heritage Site (WHS), one visit == one UNESCO point. Sites could be a building, a city, a complex, a land, a monument, a mountain, etc.. and they are selected by UNESCO as being of special cultural or physical significance. We have to take the picture of signboard by UNESCO as a proof of our visit.</description>
    </item>
    <item>
      <title>Wildfly 9.0 w/ Docker, Offline CLI and HTTP/2</title>
      <link>https://gautric.github.io/blog/2015/07/09/wildfly-docker-offline-cli-http-2.html</link>
      <pubDate>Thu, 09 Jul 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/07/09/wildfly-docker-offline-cli-http-2.html</guid>
      <description>Last week, Wildfly community has just released Wildfly 9.0.0.Final and I wrote a post about enabling HTTP2 into Wildlfy via the offline command line. Today, we will see how to do it with a Docker container. Docker container simplifies lot of thing when we need to deploy middleware infrastructure. I love this technology, because it is an Open Source project, it provides lot of command line stuff, the build process is awesome and run process is very easy ;-).</description>
    </item>
    <item>
      <title>Wildfly 9.0 Offline CLI and HTTP/2</title>
      <link>https://gautric.github.io/blog/2015/07/03/wildfly-offline-cli-http-2.html</link>
      <pubDate>Fri, 03 Jul 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/07/03/wildfly-offline-cli-http-2.html</guid>
      <description>Yesterday, Wildfly community has just released Wildfly 9.0.0.Final, the last Application Server version. As I talked on my previous French post about Wildfly they are a lot of new cool stuffs. I noticed two of them we could use both together quickly. Into a datacenter, we want setup the first configuration without startup full process and open unnecessary port. I propose in this post to setup HTTP/2 with offline mode, it is quite useful because we could want to start a JBoss instance directly with HTTP/2 protocol enabled.</description>
    </item>
    <item>
      <title>Leshan et le standard Lightweight M2M à l&#39;EclipseCon</title>
      <link>https://gautric.github.io/blog/2015/07/01/EclipseCon-Toulouse-leshan-OMA-Lightweight-M2M-LWM2M.html</link>
      <pubDate>Wed, 01 Jul 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/07/01/EclipseCon-Toulouse-leshan-OMA-Lightweight-M2M-LWM2M.html</guid>
      <description>La semaine dernière, j&amp;rsquo;étais à l&amp;rsquo;EclipseCon qui se déroulait à Toulouse. Sponsor Bronze de cette édition Red Hat (mon entreprise) avait un stand. C&amp;rsquo;est à cette occasion que j&amp;rsquo;ai participé à un training concernant le protocole CoAP et notamment le standard LWM2M dispensé par Julien Vermillard de chez Sierra Wireless.
Le protocole CoAP Le protocole CoAP pour Constrained Application Protocol a été défini afin de répondre aux exigences très contraintes de l&amp;rsquo;internet des objets IoT et de la communication Machine 2 Machine M2M à savoir : faible puissance de calcul, faible consommation en énergie et faible bande passante.</description>
    </item>
    <item>
      <title>Java Regex Group Name</title>
      <link>https://gautric.github.io/blog/2015/06/18/java-regex-name-group.html</link>
      <pubDate>Thu, 18 Jun 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/06/18/java-regex-name-group.html</guid>
      <description>Lors d&amp;rsquo;un développement d&amp;rsquo;un programme informatique, il est parfois nécessaire d&amp;rsquo;utiliser les expressions rationnelles. On traduit parfois regular expression par expression régulière. L&amp;rsquo;utilisation d&amp;rsquo;une expression rationnelle est utile dans le cas où l&amp;rsquo;on cherche des bouts de chaines de caractères dans du texte. Il est aussi possible de vérifier qu&amp;rsquo;une chaine de caractères correspond bien à un schéma/motif particulier.
Dans tous les langages modernes (java, ruby, python), les librairies regex sont disponibles en standard.</description>
    </item>
    <item>
      <title>Camel IoT Labs i2c gpio mqtt lcd</title>
      <link>https://gautric.github.io/blog/2015/05/20/camel-iot-labs-i2c-gpio-mqtt-lcd.html</link>
      <pubDate>Wed, 20 May 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/05/20/camel-iot-labs-i2c-gpio-mqtt-lcd.html</guid>
      <description>One month ago, Henryk, Claus and I&amp;rsquo;ve started Camel Labs project. This project provides some cool new stuff for IoT community based on Camel technology/project. The stuff are new IoT components to connect electronics devices (i2c,SPI,gpio, tinkerforge) and cloud (pubnub, cloudlet, mqtt) together. In this lab, we will show how to build an end to end IoT integration with i2c device, mqtt broker and i2c lcd with few line of code.</description>
    </item>
    <item>
      <title>Sortie de wildfly 9.0 CR-01</title>
      <link>https://gautric.github.io/blog/2015/05/04/wildfly-9-CR01-released-sortie.html</link>
      <pubDate>Mon, 04 May 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/05/04/wildfly-9-CR01-released-sortie.html</guid>
      <description>La release candidate 01 de Wildfly 9.0.0 est sortie ce samedi. Elle est disponible en téléchargement ici. Cette version corrige un certain nombre de bug et elle apporte de nouvelles fonctionnalités que nous allons vous rapidement ici. Je posterai plus tard des exemples complets.
Java EE7 Wildfly 9 intégre les deux profils Web et Full du standard Java EE7.
Le support de HTTP/2 &amp;amp; SPDY Le standard HTTP/2 est maintenant officiel depuis Fevrier.</description>
    </item>
    <item>
      <title>Les premiers jours du projet Camel IoT Labs</title>
      <link>https://gautric.github.io/blog/2015/04/25/premier-jour-projet-camel-iot-labs.html</link>
      <pubDate>Sat, 25 Apr 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/04/25/premier-jour-projet-camel-iot-labs.html</guid>
      <description>Aujourd&amp;rsquo;hui, l&amp;rsquo;internet des objets ou aussi appelé IoT prend de plus en plus de place dans l&amp;rsquo;industrie informatique et non informatique. Des montres Withings, aux Raspberry Pi vendus à 5M d&amp;rsquo;unités, en passant par les plaques Arduino low cost et autres modules Tessel, le cout de production des objets électroniques baissant, a permis une large diffusion de ces nouveaux objets.
En 2012, les premiers RaspberryPi sont lancés sur le marché, j&amp;rsquo;en ai acheté un.</description>
    </item>
    <item>
      <title>Apache Camel RaspberryPi PoC</title>
      <link>https://gautric.github.io/blog/2015/04/03/apache-camel-raspberrypi-integration.html</link>
      <pubDate>Fri, 03 Apr 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/04/03/apache-camel-raspberrypi-integration.html</guid>
      <description>Raspberry Pi is a small computer. It costs just 35$. Five million have been already sold worldwide. The first goal of this project was to provide a low-cost computer for electronic and computer science education. But lots of e-hobbists like me use it for personal use (domotic for example). Camel is an Enterprise Integration Patterns (a.k.a EIP) framework to connect, process and dispatch messages from and to severals technologies.
Apache Camel and Raspberry Pi integration (proof of concept)</description>
    </item>
    <item>
      <title>Best Practices Websphere MQ/JBoss EAP 6 English Version</title>
      <link>https://gautric.github.io/blog/2015/03/26/websphere-mq-jboss-eap-integration-english-version.html</link>
      <pubDate>Thu, 26 Mar 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/03/26/websphere-mq-jboss-eap-integration-english-version.html</guid>
      <description>JBoss EAP application server is Java EE 6 certified, it implements via IronJacamar framework, the Java EE Connector Architecture (JCA) standard. This standard provides connection ability for Java EE applications to interact with external data system like JMS broker, file system or mainframe. The JCA standard is similar to the JDBC standard. The latter interacts only with relational databases but JCA can interact with more data system providers and it can integrate different kinds of Enterprise Information System (EIS).</description>
    </item>
    <item>
      <title>Best Practices Websphere MQ/JBoss EAP 6</title>
      <link>https://gautric.github.io/blog/2015/03/25/websphere-mq-jboss-eap-integration.html</link>
      <pubDate>Wed, 25 Mar 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/03/25/websphere-mq-jboss-eap-integration.html</guid>
      <description>Le serveur d&amp;rsquo;application JBoss EAP est certifié JAVA EE 6, il implémente donc via le framework IronJacamar le standard JAVA EE Connector Architecture (JCA). Ce standard permet de connecter les applications Java EE à des ressources externes comme par exemple un broker JMS, un système de fichier ou un mainframe. Il est possible de faire l&amp;rsquo;analogie du standard JCA avec le standard JDBC, JDBC se limitant uniquement aux bases de données de type relationnel, JCA se veut beaucoup plus large, il permet d&amp;rsquo;intégrer tout type de systèmes d’informations d’entreprise (EIS)</description>
    </item>
    <item>
      <title>Yubico OTP et JBoss EAP 6 ou Wildfly 8</title>
      <link>https://gautric.github.io/blog/2015/03/19/otp-yubico-jboss-eap-wildfly-login-module.html</link>
      <pubDate>Thu, 19 Mar 2015 00:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/03/19/otp-yubico-jboss-eap-wildfly-login-module.html</guid>
      <description>Yubikey est une clef de crypto qui permet d&amp;rsquo;avoir une authentification forte lors d&amp;rsquo;un processus de connexion à un site web (par ex : banque, web mail, etc&amp;hellip;.). Plusieurs sites web commencent à inclure cette fonctionnalité lors du processus d&amp;rsquo;authentification à leur service. L&amp;rsquo;utilisateur utilise un token généré par sa clef comme mot de passe. Ce mot de passe est aléatoire, est vérifié par le système et change à chaque utilisation.</description>
    </item>
    <item>
      <title>Il y a un siècle aux Dardanelles</title>
      <link>https://gautric.github.io/blog/2015/03/18/il-y-a-un-siecle-aux-dardanelles.html</link>
      <pubDate>Wed, 18 Mar 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/03/18/il-y-a-un-siecle-aux-dardanelles.html</guid>
      <description>Il y a cent ans, « Le bouvet » navire de la Royale (Marine Française) était en expédition Franco-Britanique aux Dardanelles suivant les plans du premier Lord de l’Amirauté</description>
    </item>
    <item>
      <title>Premier post</title>
      <link>https://gautric.github.io/blog/2015/03/10/premier-post.html</link>
      <pubDate>Tue, 10 Mar 2015 18:02:10 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/03/10/premier-post.html</guid>
      <description>Je posterai ici mes articles. En esperant vous y retrouver. Bonne lecture.
I will post here my articles. I look forward to seeing you.
私は　ここに　私のブログを　書きます。</description>
    </item>
  </channel>
</rss>
