<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Wildfly on Greg. I/O</title>
    <link>https://gautric.github.io/tags/wildfly/</link>
    <description>Recent content in Wildfly on Greg. I/O</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 09 Jul 2015 13:58:00 +0000</lastBuildDate>
    <atom:link href="https://gautric.github.io/tags/wildfly/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Wildfly 9.0 w/ Docker, Offline CLI and HTTP/2</title>
      <link>https://gautric.github.io/blog/2015/07/09/wildfly-9.0-w/-docker-offline-cli-and-http/2/</link>
      <pubDate>Thu, 09 Jul 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/07/09/wildfly-9.0-w/-docker-offline-cli-and-http/2/</guid>
      <description>&lt;p&gt;Last week, Wildfly community has just released &lt;a href=&#34;http://wildfly.org/news/2015/07/02/WildFly9-Final-Released/&#34;&gt;&lt;em&gt;&lt;strong&gt;Wildfly 9.0.0.Final&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt; and I wrote a post about enabling HTTP2 into Wildlfy via the offline command line. Today, we will see how to do it with a Docker container. Docker container simplifies lot of thing when we need to deploy middleware infrastructure. I love this technology, because it is an Open Source project, it provides lot of command line stuff, the build process is awesome and run process is very easy ;-).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Wildfly 9.0 Offline CLI and HTTP/2</title>
      <link>https://gautric.github.io/blog/2015/07/03/wildfly-9.0-offline-cli-and-http/2/</link>
      <pubDate>Fri, 03 Jul 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/07/03/wildfly-9.0-offline-cli-and-http/2/</guid>
      <description>&lt;p&gt;Yesterday, Wildfly community has just released &lt;a href=&#34;http://wildfly.org/news/2015/07/02/WildFly9-Final-Released/&#34;&gt;&lt;em&gt;&lt;strong&gt;Wildfly 9.0.0.Final&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;, the last Application Server version. As I talked on my previous &lt;a href=&#34;https://gautric.github.io/blog/2015/05/04/wildfly-9-CR01-released-sortie.html&#34;&gt;French post about Wildfly&lt;/a&gt; they are a lot of new cool stuffs. I noticed two of them we could use both together quickly. Into a datacenter, we want setup the first configuration without startup full process and open unnecessary port. I propose in this post to setup &lt;a href=&#34;https://en.wikipedia.org/wiki/HTTP/2&#34;&gt;&lt;em&gt;&lt;strong&gt;HTTP/2&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt; with offline mode, it is quite useful because we could want to start a JBoss instance directly with HTTP/2 protocol enabled.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sortie de wildfly 9.0 CR-01</title>
      <link>https://gautric.github.io/blog/2015/05/04/sortie-de-wildfly-9.0-cr-01/</link>
      <pubDate>Mon, 04 May 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/05/04/sortie-de-wildfly-9.0-cr-01/</guid>
      <description>&lt;p&gt;La release candidate 01 de Wildfly 9.0.0 est sortie ce samedi. Elle est disponible en &lt;a href=&#34;http://wildfly.org/downloads/&#34;&gt;téléchargement ici&lt;/a&gt;. Cette version corrige un certain nombre de bug et elle apporte de nouvelles fonctionnalités que nous allons vous rapidement ici. Je posterai plus tard des exemples complets.&lt;/p&gt;
&lt;h3 id=&#34;java-ee7&#34;&gt;Java EE7&lt;/h3&gt;
&lt;p&gt;Wildfly 9 intégre les deux profils Web et Full du standard Java EE7.&lt;/p&gt;
&lt;h3 id=&#34;le-support-de-http2--spdy&#34;&gt;Le support de HTTP/2 &amp;amp; SPDY&lt;/h3&gt;
&lt;p&gt;Le standard HTTP/2 est maintenant &lt;a href=&#34;https://lists.w3.org/Archives/Public/ietf-http-wg/2015JanMar/0478.html&#34;&gt;officiel depuis Fevrier&lt;/a&gt;. Wildfly 9 inclut le support de ce protocole, mais nécessite une &lt;a href=&#34;http://undertow.io/blog/2015/03/26/HTTP2-In-Wildfly.html&#34;&gt;procédure spéciale&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Best Practices Websphere MQ/JBoss EAP 6 English Version</title>
      <link>https://gautric.github.io/blog/2015/03/26/best-practices-websphere-mq/jboss-eap-6-english-version/</link>
      <pubDate>Thu, 26 Mar 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/03/26/best-practices-websphere-mq/jboss-eap-6-english-version/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.jboss.org/products/eap/overview/&#34;&gt;JBoss EAP&lt;/a&gt; application server is &lt;a href=&#34;http://www.oracle.com/technetwork/java/javaee/overview/compatibility-jsp-136984.html&#34;&gt;Java EE 6 certified&lt;/a&gt;, it implements via &lt;a href=&#34;http://www.ironjacamar.org/&#34;&gt;IronJacamar&lt;/a&gt; framework, the Java EE Connector Architecture (JCA) standard. This standard provides connection ability for Java EE applications to interact with external data system like JMS broker, file system or mainframe. The JCA standard is similar to the JDBC standard. The latter interacts only with relational databases but JCA can interact with more data system providers and it can integrate different kinds of Enterprise Information System (EIS).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Best Practices Websphere MQ/JBoss EAP 6</title>
      <link>https://gautric.github.io/blog/2015/03/25/best-practices-websphere-mq/jboss-eap-6/</link>
      <pubDate>Wed, 25 Mar 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/03/25/best-practices-websphere-mq/jboss-eap-6/</guid>
      <description>&lt;p&gt;Le serveur d&amp;rsquo;application &lt;a href=&#34;http://www.jboss.org/products/eap/overview/&#34;&gt;JBoss EAP&lt;/a&gt; est &lt;a href=&#34;http://www.oracle.com/technetwork/java/javaee/overview/compatibility-jsp-136984.html&#34;&gt;certifié JAVA EE 6&lt;/a&gt;, il implémente donc via le framework &lt;a href=&#34;http://www.ironjacamar.org/&#34;&gt;IronJacamar&lt;/a&gt; le standard JAVA EE Connector Architecture (JCA). Ce standard permet de connecter les applications Java EE à des ressources externes comme par exemple un broker JMS, un système de fichier ou un mainframe. Il est possible de faire l&amp;rsquo;analogie du standard JCA avec le standard JDBC, JDBC se limitant uniquement aux bases de données de type relationnel, JCA se veut beaucoup plus large, il permet d&amp;rsquo;intégrer tout type de systèmes d’informations d’entreprise (EIS)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Yubico OTP et JBoss EAP 6 ou Wildfly 8</title>
      <link>https://gautric.github.io/blog/2015/03/19/yubico-otp-et-jboss-eap-6-ou-wildfly-8/</link>
      <pubDate>Thu, 19 Mar 2015 00:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/03/19/yubico-otp-et-jboss-eap-6-ou-wildfly-8/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.yubico.com/&#34;&gt;Yubikey&lt;/a&gt; est une clef de crypto qui permet d&amp;rsquo;avoir une authentification forte lors d&amp;rsquo;un processus de connexion à un site web (par ex : banque, web mail, etc&amp;hellip;.). Plusieurs sites web commencent à inclure cette fonctionnalité lors du processus d&amp;rsquo;authentification à leur service.
L&amp;rsquo;utilisateur utilise un token généré par sa clef comme mot de passe. Ce mot de passe est aléatoire, est vérifié par le système et change à chaque utilisation. Si le mot de passe est intercepté par un tiers, ce dernier ne peut pas le rejouer pour s&amp;rsquo;authentifier.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
