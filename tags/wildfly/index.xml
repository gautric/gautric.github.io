<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Wildfly on Greg. I/O</title>
    <link>https://gautric.github.io/tags/wildfly/</link>
    <description>Recent content in Wildfly on Greg. I/O</description>
    <generator>Hugo -- 0.147.6</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 09 Jul 2015 13:58:00 +0000</lastBuildDate>
    <atom:link href="https://gautric.github.io/tags/wildfly/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Wildfly 9.0 w/ Docker, Offline CLI and HTTP/2</title>
      <link>https://gautric.github.io/blog/2015/07/09/wildfly-9.0-w/-docker-offline-cli-and-http/2/</link>
      <pubDate>Thu, 09 Jul 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/07/09/wildfly-9.0-w/-docker-offline-cli-and-http/2/</guid>
      <description>&lt;p&gt;Last week, Wildfly community has just released &lt;a href=&#34;http://wildfly.org/news/2015/07/02/WildFly9-Final-Released/&#34;&gt;&lt;em&gt;&lt;strong&gt;Wildfly 9.0.0.Final&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt; and I wrote a post about enabling HTTP2 into Wildlfy via the offline command line. Today, we will see how to do it with a Docker container. Docker container simplifies lot of thing when we need to deploy middleware infrastructure. I love this technology, because it is an Open Source project, it provides lot of command line tools, the build process is automated and streamlined, and the run process is very easy to manage.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Wildfly 9.0 Offline CLI and HTTP/2</title>
      <link>https://gautric.github.io/blog/2015/07/03/wildfly-9.0-offline-cli-and-http/2/</link>
      <pubDate>Fri, 03 Jul 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/07/03/wildfly-9.0-offline-cli-and-http/2/</guid>
      <description>&lt;p&gt;Yesterday, Wildfly community has just released &lt;a href=&#34;http://wildfly.org/news/2015/07/02/WildFly9-Final-Released/&#34;&gt;&lt;em&gt;&lt;strong&gt;Wildfly 9.0.0.Final&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;, the last Application Server version. As I talked on my previous &lt;a href=&#34;https://gautric.github.io/blog/2015/05/04/wildfly-9-CR01-released-sortie.html&#34;&gt;French post about Wildfly&lt;/a&gt; they are a lot of new cool stuffs. I noticed two of them we could use both together quickly. Into a datacenter, we want setup the first configuration without startup full process and open unnecessary port. I propose in this post to setup &lt;a href=&#34;https://en.wikipedia.org/wiki/HTTP/2&#34;&gt;&lt;em&gt;&lt;strong&gt;HTTP/2&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt; with offline mode, it is quite useful because we could want to start a JBoss instance directly with HTTP/2 protocol enabled.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sortie de wildfly 9.0 CR-01</title>
      <link>https://gautric.github.io/blog/2015/05/04/sortie-de-wildfly-9.0-cr-01/</link>
      <pubDate>Mon, 04 May 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/05/04/sortie-de-wildfly-9.0-cr-01/</guid>
      <description>&lt;p&gt;La release candidate 01 de Wildfly 9.0.0 est sortie ce samedi. Elle est disponible en &lt;a href=&#34;http://wildfly.org/downloads/&#34;&gt;téléchargement ici&lt;/a&gt;. Cette version corrige un certain nombre de bugs et apporte de nouvelles fonctionnalités que nous allons vous présenter rapidement ici. Cette version représente une étape importante avant la sortie finale et intègre des améliorations significatives en termes de performances et de stabilité. Je posterai plus tard des exemples complets pour illustrer ces nouvelles fonctionnalités.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Best Practices Websphere MQ/JBoss EAP 6 English Version</title>
      <link>https://gautric.github.io/blog/2015/03/26/best-practices-websphere-mq/jboss-eap-6-english-version/</link>
      <pubDate>Thu, 26 Mar 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/03/26/best-practices-websphere-mq/jboss-eap-6-english-version/</guid>
      <description>&lt;h1 id=&#34;integrating-websphere-mq-with-jboss-eap-6-best-practices&#34;&gt;Integrating WebSphere MQ with JBoss EAP 6: Best Practices&lt;/h1&gt;
&lt;p&gt;Enterprise application integration remains one of the most challenging aspects of modern IT architectures. This article explores how to effectively connect JBoss Enterprise Application Platform (EAP) 6 with IBM WebSphere MQ messaging system using Java EE standards and following industry best practices.&lt;/p&gt;
&lt;h2 id=&#34;introduction-to-jca-and-enterprise-integration&#34;&gt;Introduction to JCA and Enterprise Integration&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://www.jboss.org/products/eap/overview/&#34;&gt;JBoss EAP&lt;/a&gt; application server is &lt;a href=&#34;http://www.oracle.com/technetwork/java/javaee/overview/compatibility-jsp-136984.html&#34;&gt;Java EE 6 certified&lt;/a&gt;, which means it implements all specifications of this Java Enterprise Edition platform version. Among these specifications, the Java EE Connector Architecture (JCA) standard is implemented through the &lt;a href=&#34;http://www.ironjacamar.org/&#34;&gt;IronJacamar&lt;/a&gt; framework.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Best Practices Websphere MQ/JBoss EAP 6</title>
      <link>https://gautric.github.io/blog/2015/03/25/best-practices-websphere-mq/jboss-eap-6/</link>
      <pubDate>Wed, 25 Mar 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/03/25/best-practices-websphere-mq/jboss-eap-6/</guid>
      <description>&lt;h1 id=&#34;intégration-de-websphere-mq-avec-jboss-eap-6--bonnes-pratiques&#34;&gt;Intégration de WebSphere MQ avec JBoss EAP 6 : Bonnes pratiques&lt;/h1&gt;
&lt;p&gt;L&amp;rsquo;intégration entre différents systèmes d&amp;rsquo;entreprise est un défi courant dans les architectures informatiques modernes. Dans cet article, nous allons explorer comment connecter efficacement le serveur d&amp;rsquo;application JBoss EAP 6 avec le système de messagerie IBM WebSphere MQ, en utilisant les standards Java EE et en suivant les meilleures pratiques d&amp;rsquo;intégration.&lt;/p&gt;
&lt;h2 id=&#34;introduction-au-standard-jca-et-à-lintégration-jms&#34;&gt;Introduction au standard JCA et à l&amp;rsquo;intégration JMS&lt;/h2&gt;
&lt;p&gt;Le serveur d&amp;rsquo;application &lt;a href=&#34;http://www.jboss.org/products/eap/overview/&#34;&gt;JBoss EAP&lt;/a&gt; est &lt;a href=&#34;http://www.oracle.com/technetwork/java/javaee/overview/compatibility-jsp-136984.html&#34;&gt;certifié JAVA EE 6&lt;/a&gt;, ce qui signifie qu&amp;rsquo;il implémente l&amp;rsquo;ensemble des spécifications de cette version de la plateforme Java Enterprise Edition. Parmi ces spécifications, le standard Java EE Connector Architecture (JCA) est implémenté via le framework &lt;a href=&#34;http://www.ironjacamar.org/&#34;&gt;IronJacamar&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Yubico OTP et JBoss EAP 6 ou Wildfly 8</title>
      <link>https://gautric.github.io/blog/2015/03/19/yubico-otp-et-jboss-eap-6-ou-wildfly-8/</link>
      <pubDate>Thu, 19 Mar 2015 00:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/03/19/yubico-otp-et-jboss-eap-6-ou-wildfly-8/</guid>
      <description>&lt;h1 id=&#34;intégration-de-lauthentification-forte-avec-yubikey-dans-jboss&#34;&gt;Intégration de l&amp;rsquo;authentification forte avec Yubikey dans JBoss&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://www.yubico.com/&#34;&gt;Yubikey&lt;/a&gt; est une clé de sécurité matérielle qui permet d&amp;rsquo;implémenter une authentification forte (2FA - Two-Factor Authentication) lors d&amp;rsquo;un processus de connexion à un site web ou une application (par exemple : services bancaires, webmail, applications d&amp;rsquo;entreprise, etc.). De plus en plus d&amp;rsquo;organisations intègrent cette technologie dans leur processus d&amp;rsquo;authentification pour renforcer significativement leur sécurité informatique.&lt;/p&gt;
&lt;h2 id=&#34;principe-de-fonctionnement&#34;&gt;Principe de fonctionnement&lt;/h2&gt;
&lt;p&gt;Le principe est simple mais efficace : l&amp;rsquo;utilisateur utilise un token à usage unique généré par sa clé Yubikey comme second facteur d&amp;rsquo;authentification. Ce token est cryptographiquement sécurisé, vérifié par le système, et change à chaque utilisation. Même si le token est intercepté par un attaquant lors d&amp;rsquo;une tentative de connexion, celui-ci ne pourra pas le réutiliser pour s&amp;rsquo;authentifier ultérieurement, ce qui renforce considérablement la sécurité du système d&amp;rsquo;authentification.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
