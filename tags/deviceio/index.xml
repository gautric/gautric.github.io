<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DeviceIO on Greg. I/O</title>
    <link>https://gautric.github.io/tags/deviceio/</link>
    <description>Recent content in DeviceIO on Greg. I/O</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Mar 2016 14:00:00 +0000</lastBuildDate>
    <atom:link href="https://gautric.github.io/tags/deviceio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Device IO and i2cdetect implementation</title>
      <link>https://gautric.github.io/blog/2016/03/09/device-io-and-i2cdetect-implementation/</link>
      <pubDate>Wed, 09 Mar 2016 14:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2016/03/09/device-io-and-i2cdetect-implementation/</guid>
      <description>Today, we gonna implement a quick tool available into RaspberryPi with Java Device IO API. i2cdetect is a simple i2c device scanner for your RaspberryPi, it browse all i2c address to find which i2c device is connected. This tutorial show how to recompile DeviceIO API and program too.
i2cdetect with the Java Device I/O API implementation .
Requisites One RaspberryPi tested w/ RPi B+ should works with all version an I2C Device Sense Hat for example Compile Device IO Download Device IO API and compile it.</description>
    </item>
    <item>
      <title>Rhiot Kura Device IO GPIO and I2C</title>
      <link>https://gautric.github.io/blog/2016/02/29/rhiot-kura-device-io-gpio-and-i2c/</link>
      <pubDate>Mon, 29 Feb 2016 14:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2016/02/29/rhiot-kura-device-io-gpio-and-i2c/</guid>
      <description>Recently, a colleague of mine calls me to implements a small demo. I decide to develop a new component for Rhiot project. This component is the DeviceIO I2C Camel, I reuse a previous work from Camel-pi4j I&amp;rsquo;ve already develop for Rhiot project too. We gonna see how to use this component into Kura Platform via Camel Framework. For this demo we need some hardware devices, a RaspberryPi and a ActiveMQ broker too.</description>
    </item>
    <item>
      <title>Les premiers jours du projet Camel IoT Labs</title>
      <link>https://gautric.github.io/blog/2015/04/25/les-premiers-jours-du-projet-camel-iot-labs/</link>
      <pubDate>Sat, 25 Apr 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/04/25/les-premiers-jours-du-projet-camel-iot-labs/</guid>
      <description>Aujourd&amp;rsquo;hui, l&amp;rsquo;internet des objets ou aussi appelé IoT prend de plus en plus de place dans l&amp;rsquo;industrie informatique et non informatique. Des montres Withings, aux Raspberry Pi vendus à 5M d&amp;rsquo;unités, en passant par les plaques Arduino low cost et autres modules Tessel, le cout de production des objets électroniques baissant, a permis une large diffusion de ces nouveaux objets.
En 2012, les premiers RaspberryPi sont lancés sur le marché, j&amp;rsquo;en ai acheté un.</description>
    </item>
  </channel>
</rss>
