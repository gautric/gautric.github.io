<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DeviceIO on Greg. I/O</title>
    <link>https://gautric.github.io/tags/deviceio/</link>
    <description>Recent content in DeviceIO on Greg. I/O</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Mar 2016 14:00:00 +0000</lastBuildDate>
    <atom:link href="https://gautric.github.io/tags/deviceio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Device IO and i2cdetect implementation</title>
      <link>https://gautric.github.io/blog/2016/03/09/device-io-and-i2cdetect-implementation/</link>
      <pubDate>Wed, 09 Mar 2016 14:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2016/03/09/device-io-and-i2cdetect-implementation/</guid>
      <description>&lt;p&gt;Today, we gonna implement a quick tool available into RaspberryPi with Java &lt;a href=&#34;https://wiki.openjdk.java.net/display/dio/Main&#34;&gt;Device IO API&lt;/a&gt;. &lt;code&gt;i2cdetect&lt;/code&gt; is a simple &lt;a href=&#34;https://en.wikipedia.org/wiki/I%C2%B2C&#34;&gt;i2c&lt;/a&gt; device scanner for your RaspberryPi, it browse all i2c address to find which i2c device is connected. This tutorial show how to recompile DeviceIO API and program too.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;i2cdetect with the Java Device I/O API implementation .&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;requisites&#34;&gt;Requisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;One &lt;a href=&#34;https://www.raspberrypi.org/products/raspberry-pi-2-model-b/&#34;&gt;RaspberryPi&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;tested w/ RPi B+&lt;/li&gt;
&lt;li&gt;should works with all version&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;an I2C Device&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.raspberrypi.org/products/sense-hat/&#34;&gt;Sense Hat&lt;/a&gt; for example&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;compile-device-io&#34;&gt;Compile Device IO&lt;/h3&gt;
&lt;p&gt;Download  Device IO API and compile it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rhiot Kura Device IO GPIO and I2C</title>
      <link>https://gautric.github.io/blog/2016/02/29/rhiot-kura-device-io-gpio-and-i2c/</link>
      <pubDate>Mon, 29 Feb 2016 14:00:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2016/02/29/rhiot-kura-device-io-gpio-and-i2c/</guid>
      <description>&lt;p&gt;Recently, a colleague of mine calls me to implements a small demo. I decide to develop a new component for Rhiot project. This component is the &lt;a href=&#34;http://openjdk.java.net/projects/dio/&#34;&gt;DeviceIO&lt;/a&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/I%C2%B2C&#34;&gt;I2C&lt;/a&gt; &lt;a href=&#34;http://camel.apache.org&#34;&gt;Camel&lt;/a&gt;, I reuse a previous work from Camel-pi4j I&amp;rsquo;ve already develop for Rhiot project too. We gonna see how to use this component into Kura Platform via Camel Framework. For this demo we need some hardware devices, a &lt;a href=&#34;https://www.raspberrypi.org/&#34;&gt;RaspberryPi&lt;/a&gt; and a &lt;a href=&#34;http://activemq.apache.org/&#34;&gt;ActiveMQ&lt;/a&gt; broker too.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How to use Kura Camel DIO from Rhiot Quickstart into RaspberryPi.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Les premiers jours du projet Camel IoT Labs</title>
      <link>https://gautric.github.io/blog/2015/04/25/les-premiers-jours-du-projet-camel-iot-labs/</link>
      <pubDate>Sat, 25 Apr 2015 13:58:00 +0000</pubDate>
      <guid>https://gautric.github.io/blog/2015/04/25/les-premiers-jours-du-projet-camel-iot-labs/</guid>
      <description>&lt;p&gt;Aujourd&amp;rsquo;hui, l&amp;rsquo;internet des objets ou aussi appelé IoT prend de plus en plus de place dans l&amp;rsquo;industrie informatique et non informatique. Des montres &lt;a href=&#34;http://www.withings.com/fr/withings-activite.html&#34;&gt;Withings&lt;/a&gt;, aux &lt;a href=&#34;http://raspberrypi.org&#34;&gt;Raspberry Pi&lt;/a&gt; vendus à 5M d&amp;rsquo;unités, en passant par les plaques &lt;a href=&#34;http://www.arduino.cc/&#34;&gt;Arduino&lt;/a&gt; low cost et autres modules &lt;a href=&#34;https://tessel.io/&#34;&gt;Tessel&lt;/a&gt;, le cout de production des objets électroniques baissant, a permis une large diffusion de ces nouveaux objets.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gautric.github.io/img/camel-labs.png&#34; style=&#34;max-width:120%;&#34; align=&#34;left&#34; height=&#34;110&#34; hspace=&#34;30&#34;/&gt; En 2012, les premiers RaspberryPi sont lancés sur le marché, j&amp;rsquo;en ai acheté un. Depuis j&amp;rsquo;ai presque tout les modèles Brev1, Brev2, B+ et B2 ;-). J&amp;rsquo;ai aussi repris mon fer à souder, comme dans mes années lycée. Mais, à l&amp;rsquo;époque pas beaucoup d&amp;rsquo;internet, pas beaucoup de standard, pas beaucoup de matériel. Aujourd&amp;rsquo;hui il y a presque tout. Il ne reste plus qu&amp;rsquo;a assembler dans des briques physiques des briques logicielles plus ou moins évoluées.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
